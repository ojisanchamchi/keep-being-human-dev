"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28792],{13627:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/action_cable/beginner/generate_chat_channel","title":"generate_chat_channel","description":"\ud83c\udd95 Generate and Define a Channel","source":"@site/docs/rails/action_cable/beginner/generate_chat_channel.md","sourceDirName":"rails/action_cable/beginner","slug":"/rails/action_cable/beginner/generate_chat_channel","permalink":"/keep-being-human-dev/docs/rails/action_cable/beginner/generate_chat_channel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/action_cable/beginner/generate_chat_channel.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"client_subscribe_js","permalink":"/keep-being-human-dev/docs/rails/action_cable/beginner/client_subscribe_js"},"next":{"title":"setup_action_cable","permalink":"/keep-being-human-dev/docs/rails/action_cable/beginner/setup_action_cable"}}');var c=a(23420),r=a(65404);const s={},i=void 0,l={},o=[{value:"\ud83c\udd95 Generate and Define a Channel",id:"-generate-and-define-a-channel",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-generate-and-define-a-channel",children:"\ud83c\udd95 Generate and Define a Channel"}),"\n",(0,c.jsx)(n.p,{children:"Channels in Action Cable act like controllers for real-time WebSocket connections. Use the Rails generator to create a new channel and then define subscription and cleanup logic."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-bash",children:"# Generate a ChatChannel\nrails generate channel Chat\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:'# app/channels/chat_channel.rb\nclass ChatChannel < ApplicationCable::Channel\n  def subscribed\n    # Start streaming from a named channel\n    stream_from "chat_channel"\n  end\n\n  def unsubscribed\n    # Any cleanup needed when channel is unsubscribed\n  end\nend\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Now you have a ",(0,c.jsx)(n.code,{children:"ChatChannel"})," that streams messages to all subscribers."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>i});var t=a(36672);const c={},r=t.createContext(c);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);