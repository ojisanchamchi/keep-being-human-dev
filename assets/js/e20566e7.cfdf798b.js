"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[45975],{65404:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>d});var t=a(36672);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},74869:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/metaprogramming/advanced/dsl_instance_eval","title":"dsl_instance_eval","description":"\ud83d\ude80 Internal DSL via instance_eval","source":"@site/docs/ruby/metaprogramming/advanced/dsl_instance_eval.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/dsl_instance_eval","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/dsl_instance_eval","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/dsl_instance_eval.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"const_missing_autoload","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/const_missing_autoload"},"next":{"title":"dynamic_define_method","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/dynamic_define_method"}}');var s=a(23420),i=a(65404);const r={},d=void 0,o={},c=[{value:"\ud83d\ude80 Internal DSL via <code>instance_eval</code>",id:"-internal-dsl-via-instance_eval",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-internal-dsl-via-instance_eval",children:["\ud83d\ude80 Internal DSL via ",(0,s.jsx)(n.code,{children:"instance_eval"})]}),"\n",(0,s.jsx)(n.p,{children:"Build internal DSLs by evaluating blocks in a custom context object. This allows you to design fluent interfaces that read like a language tailored to your problem domain."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'class QueryBuilder\n  def initialize\n    @clauses = []\n  end\n\n  def where(cond)\n    @clauses << "WHERE #{cond}"\n  end\n\n  def to_sql\n    "SELECT * FROM table #{@clauses.join(\' \')}"\n  end\n\n  def self.build(&block)\n    qb = new\n    qb.instance_eval(&block)\n    qb.to_sql\n  end\nend\n\nsql = QueryBuilder.build { where "age > 21" }\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);