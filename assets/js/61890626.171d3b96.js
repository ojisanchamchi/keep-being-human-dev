"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50971],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(36672);const r={},s=o.createContext(r);function i(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:t},e.children)}},84707:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"rails/routing/middle/route_globbing","title":"route_globbing","description":"\ud83d\udee3\ufe0f Implement Route Globbing for Catch-All Segments","source":"@site/docs/rails/routing/middle/route_globbing.md","sourceDirName":"rails/routing/middle","slug":"/rails/routing/middle/route_globbing","permalink":"/keep-being-human-dev/docs/rails/routing/middle/route_globbing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/routing/middle/route_globbing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"route_constraints_lambda","permalink":"/keep-being-human-dev/docs/rails/routing/middle/route_constraints_lambda"},"next":{"title":"routing_concerns","permalink":"/keep-being-human-dev/docs/rails/routing/middle/routing_concerns"}}');var r=n(23420),s=n(65404);const i={},a=void 0,l={},u=[{value:"\ud83d\udee3\ufe0f Implement Route Globbing for Catch-All Segments",id:"\ufe0f-implement-route-globbing-for-catch-all-segments",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"\ufe0f-implement-route-globbing-for-catch-all-segments",children:"\ud83d\udee3\ufe0f Implement Route Globbing for Catch-All Segments"}),"\n",(0,r.jsx)(t.p,{children:"Globbing captures arbitrary parts of the path into a single parameter. This is useful for nested pages, file paths, or CMS-like URL structures."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# config/routes.rb\nRails.application.routes.draw do\n  get 'pages/*slug', to: 'pages#show', as: :page\nend\n\n# Example:\n# GET /pages/company/about/team -> params[:slug] == \"company/about/team\"\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);