"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[62487],{9983:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ruby/serialization/beginner/marshal_serialization","title":"marshal_serialization","description":"\ud83c\udf81 Using Marshal for Simple Object Serialization","source":"@site/docs/ruby/serialization/beginner/marshal_serialization.md","sourceDirName":"ruby/serialization/beginner","slug":"/ruby/serialization/beginner/marshal_serialization","permalink":"/keep-being-human-dev/docs/ruby/serialization/beginner/marshal_serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/serialization/beginner/marshal_serialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"json_serialization","permalink":"/keep-being-human-dev/docs/ruby/serialization/beginner/json_serialization"},"next":{"title":"yaml_serialization","permalink":"/keep-being-human-dev/docs/ruby/serialization/beginner/yaml_serialization"}}');var r=a(23420),t=a(65404);const s={},o=void 0,l={},c=[{value:"\ud83c\udf81 Using Marshal for Simple Object Serialization",id:"-using-marshal-for-simple-object-serialization",level:2}];function u(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"-using-marshal-for-simple-object-serialization",children:"\ud83c\udf81 Using Marshal for Simple Object Serialization"}),"\n",(0,r.jsxs)(i.p,{children:["Ruby\u2019s built-in ",(0,r.jsx)(i.code,{children:"Marshal"})," module provides a fast way to convert Ruby objects into a byte stream and back. This is ideal for caching complex objects or storing them in files for quick reloads."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ruby",children:'# Serialize an object to a byte string\ndata = { name: "Alice", age: 30 }\nserialized = Marshal.dump(data)\n\n# Deserialize the byte string back to a Ruby object\noriginal = Marshal.load(serialized)\nputs original[:name]  # => "Alice"\n'})})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,i,a)=>{a.d(i,{R:()=>s,x:()=>o});var n=a(36672);const r={},t=n.createContext(r);function s(e){const i=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);