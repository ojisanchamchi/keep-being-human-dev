"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72411],{65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(36672);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},73694:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/regex/beginner/quantifiers","title":"quantifiers","description":"\ud83d\udd22 Applying Quantifiers","source":"@site/docs/ruby/regex/beginner/quantifiers.md","sourceDirName":"ruby/regex/beginner","slug":"/ruby/regex/beginner/quantifiers","permalink":"/keep-being-human-dev/docs/ruby/regex/beginner/quantifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/beginner/quantifiers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"named_captures","permalink":"/keep-being-human-dev/docs/ruby/regex/beginner/named_captures"},"next":{"title":"regex_options","permalink":"/keep-being-human-dev/docs/ruby/regex/beginner/regex_options"}}');var i=r(23420),s=r(65404);const o={},a=void 0,u={},c=[{value:"\ud83d\udd22 Applying Quantifiers",id:"-applying-quantifiers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-applying-quantifiers",children:"\ud83d\udd22 Applying Quantifiers"}),"\n",(0,i.jsxs)(n.p,{children:["Quantifiers control how many times a pattern should repeat. ",(0,i.jsx)(n.code,{children:"*"})," means zero or more, ",(0,i.jsx)(n.code,{children:"+"})," means one or more, and ",(0,i.jsx)(n.code,{children:"?"})," means zero or one."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# Find words with repeated letters\ntext = "balloon bookkeeper"\nmatches = text.scan(/\\w+o+\\w*/)\nputs matches.inspect  # => ["balloon", "bookkeeper"]\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);