"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[99743],{48656:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/background_jobs/expert/unique_jobs_idempotency","title":"unique_jobs_idempotency","description":"\ud83d\udd12 Idempotency & Deduplication with sidekiq\u2011unique\u2011jobs","source":"@site/docs/rails/background_jobs/expert/unique_jobs_idempotency.md","sourceDirName":"rails/background_jobs/expert","slug":"/rails/background_jobs/expert/unique_jobs_idempotency","permalink":"/keep-being-human-dev/docs/rails/background_jobs/expert/unique_jobs_idempotency","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/background_jobs/expert/unique_jobs_idempotency.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sidekiq_batch_callbacks","permalink":"/keep-being-human-dev/docs/rails/background_jobs/expert/sidekiq_batch_callbacks"},"next":{"title":"configure_retry_and_discard","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/configure_retry_and_discard"}}');var o=i(23420),t=i(65404);const r={},c=void 0,u={},d=[{value:"\ud83d\udd12 Idempotency &amp; Deduplication with sidekiq\u2011unique\u2011jobs",id:"-idempotency--deduplication-with-sidekiquniquejobs",level:2}];function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-idempotency--deduplication-with-sidekiquniquejobs",children:"\ud83d\udd12 Idempotency & Deduplication with sidekiq\u2011unique\u2011jobs"}),"\n",(0,o.jsxs)(n.p,{children:["Prevent duplicate executions by leveraging the ",(0,o.jsx)(n.code,{children:"sidekiq-unique-jobs"})," gem. Configure locks to ensure only one job per unique key is enqueued or executing at any time, and auto\u2011expire stale locks to avoid deadlocks in rare failure modes."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class SyncUserJob\n  include Sidekiq::Worker\n  sidekiq_options(\n    unique: :while_executing,\n    lock_expiration: 4.hours,\n    queue: :sync\n  )\n\n  def perform(user_id)\n    user = User.find(user_id)\n    ExternalApi.sync(user)\n  end\nend\n"})}),"\n",(0,o.jsx)(n.p,{children:"Lock types:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":until_executing"})," \u2014 lock until job begins"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":while_executing"})," \u2014 lock during execution"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:":until_executed"})," \u2014 lock until execution finishes"]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(36672);const o={},t=s.createContext(o);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);