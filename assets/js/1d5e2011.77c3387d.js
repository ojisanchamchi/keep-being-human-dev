"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[53086],{10785:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/performance/advanced/multiple_db_read_routing","title":"multiple_db_read_routing","description":"\ud83d\uddc4\ufe0f Read / Write Splitting with Multiple Databases","source":"@site/docs/rails/performance/advanced/multiple_db_read_routing.md","sourceDirName":"rails/performance/advanced","slug":"/rails/performance/advanced/multiple_db_read_routing","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/multiple_db_read_routing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/advanced/multiple_db_read_routing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"http_caching_with_etag","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/http_caching_with_etag"},"next":{"title":"preload_for_callbacks","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/preload_for_callbacks"}}');var n=t(23420),i=t(65404);const o={},s=void 0,d={},c=[{value:"\ud83d\uddc4\ufe0f Read / Write Splitting with Multiple Databases",id:"\ufe0f-read--write-splitting-with-multiple-databases",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"\ufe0f-read--write-splitting-with-multiple-databases",children:"\ud83d\uddc4\ufe0f Read / Write Splitting with Multiple Databases"}),"\n",(0,n.jsxs)(a.p,{children:["Rails 6+ lets you route read and write queries to different database roles for better scalability. Define separate configurations for your ",(0,n.jsx)(a.code,{children:"primary"})," and ",(0,n.jsx)(a.code,{children:"replica"}),", then wrap read-only operations in a ",(0,n.jsx)(a.code,{children:"connected_to"})," block to offload them to replicas and reduce load on your primary."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"# config/database.yml\nprimary:\n  adapter: postgresql\n  database: myapp_primary\n  pool: 10\nreplica:\n  adapter: postgresql\n  database: myapp_replica\n  replica: true\n  pool: 5\n\n# Usage in application code\nActiveRecord::Base.connected_to(role: :reading) do\n  users = User.where(active: true).to_a\nend\n"})})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>s});var r=t(36672);const n={},i=r.createContext(n);function o(e){const a=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);