"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26083],{65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(36672);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},98559:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"sql/sqlite/middle/transaction_batching","title":"transaction_batching","description":"\ud83d\ude80 Batch Operations under a Single Transaction","source":"@site/docs/sql/sqlite/middle/transaction_batching.md","sourceDirName":"sql/sqlite/middle","slug":"/sql/sqlite/middle/transaction_batching","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/transaction_batching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/sqlite/middle/transaction_batching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"timestamp_triggers","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/timestamp_triggers"},"next":{"title":"upsert_on_conflict","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/upsert_on_conflict"}}');var a=n(23420),i=n(65404);const r={},o=void 0,c={},l=[{value:"\ud83d\ude80 Batch Operations under a Single Transaction",id:"-batch-operations-under-a-single-transaction",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-batch-operations-under-a-single-transaction",children:"\ud83d\ude80 Batch Operations under a Single Transaction"}),"\n",(0,a.jsxs)(t.p,{children:["Wrapping multiple statements in a single transaction can dramatically improve write performance. Use ",(0,a.jsx)(t.code,{children:"BEGIN ... COMMIT"})," to reduce journaling overhead and ensure atomicity."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sql",children:"BEGIN TRANSACTION;\n\nINSERT INTO logs(message) VALUES ('Start batch');\nUPDATE users SET status = 'active' WHERE last_login > date('now','-7 days');\nDELETE FROM sessions WHERE expires < datetime('now');\n\nCOMMIT;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);