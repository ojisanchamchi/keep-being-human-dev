"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26379],{65404:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var n=s(36672);const o={},a=n.createContext(o);function i(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(a.Provider,{value:t},e.children)}},71265:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"gems/factory_bot_rails/beginner/associations.md","title":"associations.md","description":"\ud83d\udd17 Set Up Associations for Related Models","source":"@site/docs/gems/factory_bot_rails/beginner/associations.md.md","sourceDirName":"gems/factory_bot_rails/beginner","slug":"/gems/factory_bot_rails/beginner/associations.md","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/beginner/associations.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/factory_bot_rails/beginner/associations.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"transient_dynamic_associations","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/advanced/transient_dynamic_associations"},"next":{"title":"basic_factory_setup.md","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/beginner/basic_factory_setup.md"}}');var o=s(23420),a=s(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udd17 Set Up Associations for Related Models",id:"-set-up-associations-for-related-models",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-set-up-associations-for-related-models",children:"\ud83d\udd17 Set Up Associations for Related Models"}),"\n",(0,o.jsxs)(t.p,{children:["FactoryBot can automatically build associated records using the ",(0,o.jsx)(t.code,{children:"association"})," helper. This is useful when your model depends on another, like an ",(0,o.jsx)(t.code,{children:"Article"})," belonging to a ",(0,o.jsx)(t.code,{children:"User"}),". Define the association in the factory to get nested test data."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:'# spec/factories/articles.rb\nFactoryBot.define do\n  factory :article do\n    title   { "Test Article" }\n    content { "This is a test article." }\n    association :user  # builds a user using the :user factory\n  end\nend\n'})}),"\n",(0,o.jsx)(t.p,{children:"Create an article with its user:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:'article = create(:article)\nputs article.user.email  # => "john.doe@example.com" or configured default\n'})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);