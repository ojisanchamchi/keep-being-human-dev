"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69135],{46418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/view_component/expert/deep_testing_with_matchers","title":"deep_testing_with_matchers","description":"\ud83e\uddea Deep Testing with Custom ViewComponent Matchers","source":"@site/docs/gems/view_component/expert/deep_testing_with_matchers.md","sourceDirName":"gems/view_component/expert","slug":"/gems/view_component/expert/deep_testing_with_matchers","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/deep_testing_with_matchers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/expert/deep_testing_with_matchers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_fragment_caching","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/advanced_fragment_caching"},"next":{"title":"dynamic_slots_composition","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/dynamic_slots_composition"}}');var o=n(23420),r=n(65404);const i={},c=void 0,a={},d=[{value:"\ud83e\uddea Deep Testing with Custom ViewComponent Matchers",id:"-deep-testing-with-custom-viewcomponent-matchers",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-deep-testing-with-custom-viewcomponent-matchers",children:"\ud83e\uddea Deep Testing with Custom ViewComponent Matchers"}),"\n",(0,o.jsxs)(t.p,{children:["Elevate your component tests by writing custom RSpec matchers and leveraging ",(0,o.jsx)(t.code,{children:"ViewComponent::TestHelpers"})," to introspect private methods or slots. Use ",(0,o.jsx)(t.code,{children:"render_inline"})," with dynamic locals and assert deep structure via ",(0,o.jsx)(t.code,{children:"have_css"})," and ",(0,o.jsx)(t.code,{children:"text"})," matchers."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:'# spec/components/nav_menu_component_spec.rb\nrequire "rails_helper"\n\nRSpec.describe NavMenuComponent, type: :component do\n  include ViewComponent::TestHelpers\n\n  subject(:rendered) { render_inline(described_class.new(active: :dashboard)) }\n\n  it "highlights the active menu item" do\n    expect(rendered).to have_css(".nav-item.active", text: "Dashboard")\n  end\n\n  it "renders all slots in correct order" do\n    rendered = render_inline(described_class.new) do |c|\n      c.slot :item, name: :home, url: "/"\n      c.slot :item, name: :profile, url: "/profile"\n    end\n\n    expect(rendered.css(".nav-item").first.text).to eq("Home")\n  end\nend\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(36672);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);