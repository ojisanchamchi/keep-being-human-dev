"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49317],{37702:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/rspec/custom_matchers/middle/chained_custom_matcher","title":"chained_custom_matcher","description":"\ud83d\udd17 Chaining Methods in Custom Matchers","source":"@site/docs/gems/rspec/custom_matchers/middle/chained_custom_matcher.md","sourceDirName":"gems/rspec/custom_matchers/middle","slug":"/gems/rspec/custom_matchers/middle/chained_custom_matcher","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/chained_custom_matcher","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/custom_matchers/middle/chained_custom_matcher.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"metaprogramming_driven_matchers.md","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/expert/metaprogramming_driven_matchers.md"},"next":{"title":"custom_failure_messages","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/custom_failure_messages"}}');var c=t(23420),i=t(65404);const a={},r=void 0,m={},d=[{value:"\ud83d\udd17 Chaining Methods in Custom Matchers",id:"-chaining-methods-in-custom-matchers",level:2}];function o(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-chaining-methods-in-custom-matchers",children:"\ud83d\udd17 Chaining Methods in Custom Matchers"}),"\n",(0,c.jsxs)(n.p,{children:["Chainable methods let you build expressive matchers. You can define intermediate chain steps with the ",(0,c.jsx)(n.code,{children:"chain"})," DSL:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:'RSpec::Matchers.define :have_dimensions do |width, height|\n  match do |rectangle|\n    rectangle.width == width && rectangle.height == height\n  end\n\n  chain :allow_margin do |margin|\n    @margin = margin\n  end\n\n  description do\n    desc = "have dimensions #{width}x#{height}"\n    desc += " with margin #{@margin}" if defined?(@margin)\n    desc\n  end\nend\n'})}),"\n",(0,c.jsx)(n.p,{children:"Usage:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"expect(rectangle).to have_dimensions(100, 200).allow_margin(10)\nexpect(rectangle).not_to have_dimensions(50, 50)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(36672);const c={},i=s.createContext(c);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);