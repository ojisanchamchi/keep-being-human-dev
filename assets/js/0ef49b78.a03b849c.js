"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91680],{58317:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"sql/sqlite/expert/wal_checkpoint_tuning","title":"wal_checkpoint_tuning","description":"\ud83d\udee0\ufe0f Tuning WAL Mode and Checkpoints","source":"@site/docs/sql/sqlite/expert/wal_checkpoint_tuning.md","sourceDirName":"sql/sqlite/expert","slug":"/sql/sqlite/expert/wal_checkpoint_tuning","permalink":"/keep-being-human-dev/docs/sql/sqlite/expert/wal_checkpoint_tuning","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/sqlite/expert/wal_checkpoint_tuning.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"virtual_tables_external","permalink":"/keep-being-human-dev/docs/sql/sqlite/expert/virtual_tables_external"},"next":{"title":"window_functions_analytics","permalink":"/keep-being-human-dev/docs/sql/sqlite/expert/window_functions_analytics"}}');var o=t(23420),c=t(65404);const s={},a=void 0,r={},l=[{value:"\ud83d\udee0\ufe0f Tuning WAL Mode and Checkpoints",id:"\ufe0f-tuning-wal-mode-and-checkpoints",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-tuning-wal-mode-and-checkpoints",children:"\ud83d\udee0\ufe0f Tuning WAL Mode and Checkpoints"}),"\n",(0,o.jsx)(n.p,{children:"Switch to Write\u2011Ahead Logging (WAL) for concurrent reads/writes, then tune automatic checkpoints to balance I/O. Manually checkpoint to control file growth and reduce latency spikes."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"-- Enable WAL mode\nPRAGMA journal_mode = WAL;\n\n-- Set automatic checkpoint every 1000 pages\nPRAGMA wal_autocheckpoint = 1000;\n\n-- Force an immediate checkpoint\nPRAGMA wal_checkpoint(TRUNCATE);\n"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(36672);const o={},c=i.createContext(o);function s(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);