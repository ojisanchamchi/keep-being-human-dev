"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17080],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(36672);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},79625:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/testing/beginner/model_validation_spec","title":"model_validation_spec","description":"\ud83e\uddea Testing Model Validations","source":"@site/docs/rails/testing/beginner/model_validation_spec.md","sourceDirName":"rails/testing/beginner","slug":"/rails/testing/beginner/model_validation_spec","permalink":"/keep-being-human-dev/docs/rails/testing/beginner/model_validation_spec","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/beginner/model_validation_spec.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"factorybot_basics","permalink":"/keep-being-human-dev/docs/rails/testing/beginner/factorybot_basics"},"next":{"title":"setup_rspec","permalink":"/keep-being-human-dev/docs/rails/testing/beginner/setup_rspec"}}');var s=t(23420),a=t(65404);const r={},o=void 0,d={},l=[{value:"\ud83e\uddea Testing Model Validations",id:"-testing-model-validations",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-testing-model-validations",children:"\ud83e\uddea Testing Model Validations"}),"\n",(0,s.jsxs)(n.p,{children:["Ensure your models enforce data integrity by writing validation specs. Create a file under ",(0,s.jsx)(n.code,{children:"spec/models"})," and test both valid and invalid cases."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# spec/models/user_spec.rb\nRSpec.describe User, type: :model do\n  it 'is valid with valid attributes' do\n    user = User.new(name: 'Jane', email: 'jane@example.com')\n    expect(user).to be_valid\n  end\n\n  it 'is invalid without an email' do\n    user = User.new(name: 'Jane', email: nil)\n    expect(user).not_to be_valid\n    expect(user.errors[:email]).to include(\"can't be blank\")\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);