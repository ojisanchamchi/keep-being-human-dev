"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[45829],{6220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>m,default:()=>i,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"gems/rspec/expert/custom_formatters","title":"custom_formatters","description":"\ud83d\udd8b Implement a Custom Formatter for Domain Reports","source":"@site/docs/gems/rspec/expert/custom_formatters.md","sourceDirName":"gems/rspec/expert","slug":"/gems/rspec/expert/custom_formatters","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/custom_formatters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/expert/custom_formatters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_composable_matchers","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/custom_composable_matchers"},"next":{"title":"hook_order_customization","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/hook_order_customization"}}');var o=r(23420),n=r(65404);const a={},m=void 0,c={},p=[{value:"\ud83d\udd8b Implement a Custom Formatter for Domain Reports",id:"-implement-a-custom-formatter-for-domain-reports",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-implement-a-custom-formatter-for-domain-reports",children:"\ud83d\udd8b Implement a Custom Formatter for Domain Reports"}),"\n",(0,o.jsxs)(t.p,{children:["Extend RSpec::Core::Formatters::BaseFormatter to generate domain\u2011specific reports (e.g., test coverage by feature). Hook into ",(0,o.jsx)(t.code,{children:"example_passed"}),", ",(0,o.jsx)(t.code,{children:"example_failed"}),", and ",(0,o.jsx)(t.code,{children:"dump_summary"})," to accumulate metrics."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:'# lib/rspec/formatters/feature_reporter.rb\nrequire \'rspec/core/formatters/base_formatter\'\nmodule RSpec\n  module Formatters\n    class FeatureReporter < BaseFormatter\n      RSpec::Core::Formatters.register self, :example_passed, :dump_summary\n\n      def initialize(output)\n        super\n        @features = Hash.new(0)\n      end\n\n      def example_passed(notification)\n        feature = notification.example.metadata[:feature]\n        @features[feature] += 1 if feature\n      end\n\n      def dump_summary(summary)\n        output.puts "\\nFeature Test Counts:" \\\n          "\\n" + @features.map { |f, c| "#{f}: #{c}" }.join("\\n")\n      end\n    end\n  end\nend\n\n# .rspec\n--require spec_helper\n--format RSpec::Formatters::FeatureReporter\n'})})]})}function i(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>m});var s=r(36672);const o={},n=s.createContext(o);function a(e){const t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function m(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);