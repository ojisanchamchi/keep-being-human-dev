"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79306],{65404:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var o=n(36672);const a={},s=o.createContext(a);function l(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(s.Provider,{value:t},e.children)}},81351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"rails/layouts/advanced/dynamic_layout_selection","title":"dynamic_layout_selection","description":"\ud83e\udde9 Dynamic Layout Selection","source":"@site/docs/rails/layouts/advanced/dynamic_layout_selection.md","sourceDirName":"rails/layouts/advanced","slug":"/rails/layouts/advanced/dynamic_layout_selection","permalink":"/keep-being-human-dev/docs/rails/layouts/advanced/dynamic_layout_selection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/layouts/advanced/dynamic_layout_selection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_lookup_context_for_layout","permalink":"/keep-being-human-dev/docs/rails/layouts/advanced/custom_lookup_context_for_layout"},"next":{"title":"engine_isolated_layouts","permalink":"/keep-being-human-dev/docs/rails/layouts/advanced/engine_isolated_layouts"}}');var a=n(23420),s=n(65404);const l={},c=void 0,i={},r=[{value:"\ud83e\udde9 Dynamic Layout Selection",id:"-dynamic-layout-selection",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-dynamic-layout-selection",children:"\ud83e\udde9 Dynamic Layout Selection"}),"\n",(0,a.jsxs)(t.p,{children:["You can choose layouts at runtime by passing a symbol or lambda to ",(0,a.jsx)(t.code,{children:"layout"}),". This enables context-aware layouts (e.g., mobile vs. desktop) without cluttering the controller. Use a lambda that receives the controller instance to decide the layout dynamically."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:'class ApplicationController < ActionController::Base\n  layout ->(controller) {\n    if controller.request.format.json?    \n      false   # No layout for JSON\n    elsif controller.request.user_agent =~ /Mobile/\n      "mobile"\n    else\n      "application"\n    end\n  }\nend\n'})}),"\n",(0,a.jsx)(t.p,{children:"This approach centralizes layout logic and adapts to different request properties seamlessly."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);