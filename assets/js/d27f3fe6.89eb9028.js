"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[90260],{65404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(36672);const t={},a=r.createContext(t);function c(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(a.Provider,{value:n},e.children)}},96511:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/arrays/beginner/accessing_elements","title":"accessing_elements","description":"\ud83d\udd0d Accessing Elements","source":"@site/docs/ruby/arrays/beginner/accessing_elements.md","sourceDirName":"ruby/arrays/beginner","slug":"/ruby/arrays/beginner/accessing_elements","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/accessing_elements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/beginner/accessing_elements.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"transpose_jagged_arrays","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/transpose_jagged_arrays"},"next":{"title":"adding_elements","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/adding_elements"}}');var t=s(23420),a=s(65404);const c={},o=void 0,i={},d=[{value:"\ud83d\udd0d Accessing Elements",id:"-accessing-elements",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-accessing-elements",children:"\ud83d\udd0d Accessing Elements"}),"\n",(0,t.jsxs)(n.p,{children:["You can retrieve elements by their index, where Ruby arrays are zero-indexed. Negative indices start counting from the end, and methods like ",(0,t.jsx)(n.code,{children:"first"}),", ",(0,t.jsx)(n.code,{children:"last"}),", or ",(0,t.jsx)(n.code,{children:"fetch"})," give more control or safer access with defaults."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"colors = ['red', 'green', 'blue']\n\n# By index\ncolors[0]        # => 'red'\ncolors[-1]       # => 'blue'\n\n# Using helper methods\ncolors.first     # => 'red'\ncolors.last      # => 'blue'\n\n# Safe fetch with default\ncolors.fetch(5, 'unknown')  # => 'unknown'\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);