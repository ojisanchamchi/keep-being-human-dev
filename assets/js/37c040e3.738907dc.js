"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43108],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var d=t(36672);const i={},o=d.createContext(i);function a(e){const n=d.useContext(o);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),d.createElement(o.Provider,{value:n},e.children)}},90436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"ruby/methods/advanced/dynamic_define_method","title":"dynamic_define_method","description":"\ud83d\udee0\ufe0f Dynamic Method Definitions with define_method","source":"@site/docs/ruby/methods/advanced/dynamic_define_method.md","sourceDirName":"ruby/methods/advanced","slug":"/ruby/methods/advanced/dynamic_define_method","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/dynamic_define_method","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/advanced/dynamic_define_method.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"curry_and_method_to_proc","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/curry_and_method_to_proc"},"next":{"title":"forwarding_arguments","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/forwarding_arguments"}}');var i=t(23420),o=t(65404);const a={},r=void 0,s={},c=[{value:"\ud83d\udee0\ufe0f Dynamic Method Definitions with <code>define_method</code>",id:"\ufe0f-dynamic-method-definitions-with-define_method",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"\ufe0f-dynamic-method-definitions-with-define_method",children:["\ud83d\udee0\ufe0f Dynamic Method Definitions with ",(0,i.jsx)(n.code,{children:"define_method"})]}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"define_method"})," inside modules or classes to generate methods at runtime, reducing duplication and enabling DSLs. You gain access to closures, so you can capture surrounding variables or behaviors."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'class Serializer\n  %i[name age email].each do |attr|\n    define_method("serialize_#{attr}") do |object|\n      value = object.public_send(attr)\n      "#{attr}: #{value}\\n"\n    end\n  end\nend\n\nserializer = Serializer.new\nputs serializer.serialize_name(OpenStruct.new(name: \'Alice\'))\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);