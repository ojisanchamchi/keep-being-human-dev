"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86603],{28638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/forms/expert/select_options_caching","title":"select_options_caching","description":"\ud83d\udd04 Performance Optimization: Caching Heavy Select Collections","source":"@site/docs/rails/forms/expert/select_options_caching.md","sourceDirName":"rails/forms/expert","slug":"/rails/forms/expert/select_options_caching","permalink":"/keep-being-human-dev/docs/rails/forms/expert/select_options_caching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/forms/expert/select_options_caching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"real_time_validations","permalink":"/keep-being-human-dev/docs/rails/forms/expert/real_time_validations"},"next":{"title":"checkbox_array_input","permalink":"/keep-being-human-dev/docs/rails/forms/middle/checkbox_array_input"}}');var c=t(23420),i=t(65404);const r={},s=void 0,a={},l=[{value:"\ud83d\udd04 Performance Optimization: Caching Heavy Select Collections",id:"-performance-optimization-caching-heavy-select-collections",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-performance-optimization-caching-heavy-select-collections",children:"\ud83d\udd04 Performance Optimization: Caching Heavy Select Collections"}),"\n",(0,c.jsxs)(n.p,{children:["Avoid repeated DB hits for large select inputs by caching collections with low TTL and invalidation hooks. Wrap the collection fetch in ",(0,c.jsx)(n.code,{children:"Rails.cache.fetch"})," and expire on relevant model callbacks."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"# app/helpers/form_collections.rb\nmodule FormCollections\n  def cached_user_options\n    Rails.cache.fetch('user_options', expires_in: 1.hour) do\n      User.active.order(:name).pluck(:name, :id)\n    end\n  end\nend\n\n# In a model or observer\nafter_commit :expire_user_options_cache, on: [:create, :update, :destroy]\n\ndef expire_user_options_cache\n  Rails.cache.delete('user_options')\nend\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-erb",children:"<%= f.select :assignee_id, cached_user_options, prompt: 'Select user' %>\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(36672);const c={},i=o.createContext(c);function r(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);