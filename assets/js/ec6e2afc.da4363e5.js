"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22082],{30775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"ruby/file_io/beginner/append_to_file","title":"append_to_file","description":"\u2795 Append Content to an Existing File","source":"@site/docs/ruby/file_io/beginner/append_to_file.md","sourceDirName":"ruby/file_io/beginner","slug":"/ruby/file_io/beginner/append_to_file","permalink":"/keep-being-human-dev/docs/ruby/file_io/beginner/append_to_file","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/beginner/append_to_file.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"zero_copy_io","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/zero_copy_io"},"next":{"title":"check_file_existence","permalink":"/keep-being-human-dev/docs/ruby/file_io/beginner/check_file_existence"}}');var o=t(23420),r=t(65404);const a={},s=void 0,c={},l=[{value:"\u2795 Append Content to an Existing File",id:"-append-content-to-an-existing-file",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-append-content-to-an-existing-file",children:"\u2795 Append Content to an Existing File"}),"\n",(0,o.jsxs)(n.p,{children:["Use append mode (",(0,o.jsx)(n.code,{children:"'a'"}),") to add data to the end of a file without erasing existing content. Blocks still work here to guarantee you close the file."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"File.open('log.txt', 'a') do |file|\n  file.puts \"New log entry at #{Time.now}\"\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(36672);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);