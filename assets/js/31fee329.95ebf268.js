"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[71435],{3877:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"sql/mysql/expert/window_functions_running_totals","title":"window_functions_running_totals","description":"\ud83e\uddee Leverage Window Functions for Running Totals","source":"@site/docs/sql/mysql/expert/window_functions_running_totals.md","sourceDirName":"sql/mysql/expert","slug":"/sql/mysql/expert/window_functions_running_totals","permalink":"/keep-being-human-dev/docs/sql/mysql/expert/window_functions_running_totals","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/mysql/expert/window_functions_running_totals.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"user_defined_functions_extending","permalink":"/keep-being-human-dev/docs/sql/mysql/expert/user_defined_functions_extending"},"next":{"title":"ctes_common_table_expressions","permalink":"/keep-being-human-dev/docs/sql/mysql/middle/ctes_common_table_expressions"}}');var s=t(23420),r=t(65404);const i={},a=void 0,c={},d=[{value:"\ud83e\uddee Leverage Window Functions for Running Totals",id:"-leverage-window-functions-for-running-totals",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-leverage-window-functions-for-running-totals",children:"\ud83e\uddee Leverage Window Functions for Running Totals"}),"\n",(0,s.jsxs)(n.p,{children:["Window functions in MySQL 8.0+ let you compute running totals, moving averages, and differences without self-joins or subqueries. They\u2019re optimized in C and can dramatically simplify complex analytics queries. Use ",(0,s.jsx)(n.code,{children:"OVER"})," with ordering and frame clauses to control the window."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT\n  order_date,\n  order_amount,\n  SUM(order_amount) OVER (\n    PARTITION BY customer_id\n    ORDER BY order_date\n    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n  ) AS running_total\nFROM orders\nWHERE order_date >= '2023-01-01';\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(36672);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);