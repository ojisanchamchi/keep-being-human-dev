"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[76389],{24412:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/command_line/expert/spring-custom-commands","title":"spring-custom-commands","description":"\ud83d\ude80 Supercharge Rails Commands with Spring Custom Commands","source":"@site/docs/rails/command_line/expert/spring-custom-commands.md","sourceDirName":"rails/command_line/expert","slug":"/rails/command_line/expert/spring-custom-commands","permalink":"/keep-being-human-dev/docs/rails/command_line/expert/spring-custom-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/command_line/expert/spring-custom-commands.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom-rails-cli-commands-railtie","permalink":"/keep-being-human-dev/docs/rails/command_line/expert/custom-rails-cli-commands-railtie"},"next":{"title":"filtering_rails_routes","permalink":"/keep-being-human-dev/docs/rails/command_line/middle/filtering_rails_routes"}}');var a=s(23420),i=s(65404);const t={},o=void 0,c={},l=[{value:"\ud83d\ude80 Supercharge Rails Commands with Spring Custom Commands",id:"-supercharge-rails-commands-with-spring-custom-commands",level:2}];function m(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-supercharge-rails-commands-with-spring-custom-commands",children:"\ud83d\ude80 Supercharge Rails Commands with Spring Custom Commands"}),"\n",(0,a.jsx)(n.p,{children:"Leverage Spring\u2019s preloader to create custom commands that run against a warm application context. This drastically reduces startup overhead for repetitive tasks in development."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Register your custom Spring command in ",(0,a.jsx)(n.code,{children:"config/spring.rb"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# config/spring.rb\nrequire \'spring/command\'\nSpring.register_command(:stats) do |env, *args|\n  # Preloaded Rails environment is available\n  Rails.application.eager_load!\n  puts "Model counts:"\n  ApplicationRecord.descendants.each do |model|\n    puts "  #{model.name}: #{model.count}"\n  end\nend\n'})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["Create a shim in ",(0,a.jsx)(n.code,{children:"bin/rails-stats"})," to invoke Spring:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"#!/usr/bin/env spring\n<%# bin/rails-stats %>\nrequire 'spring/commands'\nSpring::Command::Stats.new(ARGV).call\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Make it executable and run:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod +x bin/rails-stats\nbin/rails-stats\n"})}),"\n",(0,a.jsx)(n.p,{children:"You now have a sub-second custom task that introspects your live app without cold boots."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(36672);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);