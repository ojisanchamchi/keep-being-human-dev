"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91132],{58276:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"gems/httparty/middle/httparty_dynamic_query_params","title":"httparty_dynamic_query_params","description":"\ud83c\udf10 Merge and Encode Query Parameters Dynamically","source":"@site/docs/gems/httparty/middle/httparty_dynamic_query_params.md","sourceDirName":"gems/httparty/middle","slug":"/gems/httparty/middle/httparty_dynamic_query_params","permalink":"/keep-being-human-dev/docs/gems/httparty/middle/httparty_dynamic_query_params","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/httparty/middle/httparty_dynamic_query_params.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"httparty_typhoeus_adapter","permalink":"/keep-being-human-dev/docs/gems/httparty/expert/httparty_typhoeus_adapter"},"next":{"title":"httparty_reusable_client","permalink":"/keep-being-human-dev/docs/gems/httparty/middle/httparty_reusable_client"}}');var n=a(23420),s=a(65404);const c={},i=void 0,d={},p=[{value:"\ud83c\udf10 Merge and Encode Query Parameters Dynamically",id:"-merge-and-encode-query-parameters-dynamically",level:2}];function o(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-merge-and-encode-query-parameters-dynamically",children:"\ud83c\udf10 Merge and Encode Query Parameters Dynamically"}),"\n",(0,n.jsxs)(t.p,{children:["When calling endpoints that accept many optional filters, merge a set of default params with runtime options to keep calls consistent. HTTParty will automatically URI-encode the hash under the ",(0,n.jsx)(t.code,{children:"query:"})," key. This approach avoids manually building query strings and handles special characters correctly."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"class SearchService\n  include HTTParty\n  base_uri 'https://api.example.com'\n\n  DEFAULT_PARAMS = { per_page: 20, sort: 'name' }.freeze\n\n  def search(query, options = {})\n    params = DEFAULT_PARAMS.merge(options).merge(q: query)\n    self.class.get('/search', query: params)\n  end\nend\n\n# Usage:\nservice = SearchService.new\nresponse = service.search('rails', page: 2, sort: 'date')\np response.parsed_response['results']\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},65404:(e,t,a)=>{a.d(t,{R:()=>c,x:()=>i});var r=a(36672);const n={},s=r.createContext(n);function c(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);