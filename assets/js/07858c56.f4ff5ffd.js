"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[56219],{47558:(e,c,n)=>{n.r(c),n.d(c,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"rails/active_record_callbacks/expert/concerns_for_callbacks","title":"concerns_for_callbacks","description":"\ud83d\udee0 Extracting Callback Logic into Concerns","source":"@site/docs/rails/active_record_callbacks/expert/concerns_for_callbacks.md","sourceDirName":"rails/active_record_callbacks/expert","slug":"/rails/active_record_callbacks/expert/concerns_for_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/expert/concerns_for_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/expert/concerns_for_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"async_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/expert/async_callbacks"},"next":{"title":"conditional_chain_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/expert/conditional_chain_callbacks"}}');var r=n(23420),t=n(65404);const s={},o=void 0,l={},i=[{value:"\ud83d\udee0 Extracting Callback Logic into Concerns",id:"-extracting-callback-logic-into-concerns",level:2}];function d(e){const c={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(c.h2,{id:"-extracting-callback-logic-into-concerns",children:"\ud83d\udee0 Extracting Callback Logic into Concerns"}),"\n",(0,r.jsxs)(c.p,{children:["When callbacks accumulate, extract them into an ",(0,r.jsx)(c.code,{children:"ActiveSupport::Concern"})," for reuse and testability. Encapsulate the callback declaration and implementation in a module, then include it where needed."]}),"\n",(0,r.jsx)(c.pre,{children:(0,r.jsx)(c.code,{className:"language-ruby",children:"# app/models/concerns/audit_trail.rb\nmodule AuditTrail\n  extend ActiveSupport::Concern\n\n  included do\n    after_update :record_change\n  end\n\n  def record_change\n    AuditLog.create!(record: self, changes: saved_changes)\n  end\nend\n\n# app/models/user.rb\nclass User < ApplicationRecord\n  include AuditTrail\nend\n"})}),"\n",(0,r.jsx)(c.p,{children:"This approach keeps models lean and promotes shared behavior across different models."})]})}function p(e={}){const{wrapper:c}={...(0,t.R)(),...e.components};return c?(0,r.jsx)(c,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,c,n)=>{n.d(c,{R:()=>s,x:()=>o});var a=n(36672);const r={},t=a.createContext(r);function s(e){const c=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(c):{...c,...e}},[c,e])}function o(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(t.Provider,{value:c},e.children)}}}]);