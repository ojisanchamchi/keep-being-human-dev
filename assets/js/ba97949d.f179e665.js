"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68976],{17546:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/method_missing/beginner/method_missing_basic_setup","title":"method_missing_basic_setup","description":"\ud83d\udee0\ufe0f Basic method_missing Setup","source":"@site/docs/ruby/method_missing/beginner/method_missing_basic_setup.md","sourceDirName":"ruby/method_missing/beginner","slug":"/ruby/method_missing/beginner/method_missing_basic_setup","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_basic_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/beginner/method_missing_basic_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rest_api_client_dynamic","permalink":"/keep-being-human-dev/docs/ruby/method_missing/advanced/rest_api_client_dynamic"},"next":{"title":"method_missing_dynamic_attributes","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_dynamic_attributes"}}');var i=s(23420),o=s(65404);const r={},d=void 0,a={},c=[{value:"\ud83d\udee0\ufe0f Basic <code>method_missing</code> Setup",id:"\ufe0f-basic-method_missing-setup",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"\ufe0f-basic-method_missing-setup",children:["\ud83d\udee0\ufe0f Basic ",(0,i.jsx)(n.code,{children:"method_missing"})," Setup"]}),"\n",(0,i.jsxs)(n.p,{children:["When Ruby encounters a call to a non-existent method, it triggers ",(0,i.jsx)(n.code,{children:"method_missing"}),". You can override it in your class to handle undefined calls gracefully instead of raising ",(0,i.jsx)(n.code,{children:"NoMethodError"}),". This is a great starting point to log or provide defaults for missing methods."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'class SilentLogger\n  def method_missing(method_name, *args, &block)\n    puts "Called undefined method: \x7f#{method_name}\x7f with arguments: #{args.inspect}"\n  end\nend\n\nobj = SilentLogger.new\nobj.anything_you_like(1, 2, 3)\n# Output: Called undefined method: anything_you_like with arguments: [1, 2, 3]\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(36672);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);