"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[46247],{65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var a=s(36672);const o={},t=a.createContext(o);function i(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(t.Provider,{value:n},e.children)}},88081:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_record_associations/middle/custom_foreign_key_and_class_name","title":"custom_foreign_key_and_class_name","description":"\ud83d\udd11 Custom Foreign Keys and class_name","source":"@site/docs/rails/active_record_associations/middle/custom_foreign_key_and_class_name.md","sourceDirName":"rails/active_record_associations/middle","slug":"/rails/active_record_associations/middle/custom_foreign_key_and_class_name","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/custom_foreign_key_and_class_name","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/middle/custom_foreign_key_and_class_name.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"counter_cache","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/counter_cache"},"next":{"title":"dependent_options","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/dependent_options"}}');var o=s(23420),t=s(65404);const i={},c=void 0,r={},d=[{value:"\ud83d\udd11 Custom Foreign Keys and <code>class_name</code>",id:"-custom-foreign-keys-and-class_name",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"-custom-foreign-keys-and-class_name",children:["\ud83d\udd11 Custom Foreign Keys and ",(0,o.jsx)(n.code,{children:"class_name"})]}),"\n",(0,o.jsxs)(n.p,{children:["When your database naming deviates from Rails conventions, specify ",(0,o.jsx)(n.code,{children:"foreign_key:"})," and ",(0,o.jsx)(n.code,{children:"class_name:"})," to wire associations correctly. This flexibility allows you to integrate legacy schemas or complex designs without renaming tables or columns."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'class Employee < ApplicationRecord\n  # Department table uses manager_id, but we want manager to be an Employee\n  belongs_to :manager, class_name: "Employee", foreign_key: "manager_id"\n  has_many :subordinates, class_name: "Employee", foreign_key: "manager_id"\nend\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);