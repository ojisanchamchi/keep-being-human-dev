"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[62364],{65404:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>r});var n=s(36672);const t={},a=n.createContext(t);function o(e){const i=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:i},e.children)}},73859:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record_validations/middle/uniqueness_scope","title":"uniqueness_scope","description":"\ud83d\udd0d Uniqueness Validation with Scope","source":"@site/docs/rails/active_record_validations/middle/uniqueness_scope.md","sourceDirName":"rails/active_record_validations/middle","slug":"/rails/active_record_validations/middle/uniqueness_scope","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/uniqueness_scope","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/middle/uniqueness_scope.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"regex_format_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/regex_format_validation"},"next":{"title":"validates_each_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/validates_each_usage"}}');var t=s(23420),a=s(65404);const o={},r=void 0,c={},d=[{value:"\ud83d\udd0d Uniqueness Validation with Scope",id:"-uniqueness-validation-with-scope",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"-uniqueness-validation-with-scope",children:"\ud83d\udd0d Uniqueness Validation with Scope"}),"\n",(0,t.jsxs)(i.p,{children:["Enforce uniqueness within a subset of records by using the ",(0,t.jsx)(i.code,{children:"scope"})," option. Combine it with ",(0,t.jsx)(i.code,{children:"case_sensitive"})," to tailor comparisons for strings."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'class Subscription < ApplicationRecord\n  validates :email, uniqueness: { scope: :plan_id, case_sensitive: false,\n                                  message: "has already subscribed to this plan" }\nend\n'})})]})}function u(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);