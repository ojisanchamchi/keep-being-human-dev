"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[82335],{1086:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>_,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/sessions_and_cookies/beginner/using_sessions_to_store_user_data","title":"using_sessions_to_store_user_data","description":"\ud83d\udd11 Using Sessions to Store User Data","source":"@site/docs/rails/sessions_and_cookies/beginner/using_sessions_to_store_user_data.md","sourceDirName":"rails/sessions_and_cookies/beginner","slug":"/rails/sessions_and_cookies/beginner/using_sessions_to_store_user_data","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/beginner/using_sessions_to_store_user_data","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/sessions_and_cookies/beginner/using_sessions_to_store_user_data.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"setting_basic_cookies_with_expiry","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/beginner/setting_basic_cookies_with_expiry"},"next":{"title":"using_signed_cookies_for_tamper_protection","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/beginner/using_signed_cookies_for_tamper_protection"}}');var o=n(23420),t=n(65404);const r={},a=void 0,c={},d=[{value:"\ud83d\udd11 Using Sessions to Store User Data",id:"-using-sessions-to-store-user-data",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h2,{id:"-using-sessions-to-store-user-data",children:"\ud83d\udd11 Using Sessions to Store User Data"}),"\n",(0,o.jsxs)(s.p,{children:["Sessions let you persist small bits of data (like a user ID) between requests without manually handling cookies. In Rails, you can assign or read session values via the ",(0,o.jsx)(s.code,{children:"session"})," hash in your controller. This is perfect for things like keeping track of a logged\u2011in user."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ruby",children:'class ApplicationController < ActionController::Base\n  def create\n    user = User.find_by(email: params[:email])\n    if user&.authenticate(params[:password])\n      session[:user_id] = user.id\n      redirect_to dashboard_path, notice: "Logged in!"\n    else\n      render :new, alert: "Invalid login"\n    end\n  end\n\n  def current_user\n    @current_user ||= User.find_by(id: session[:user_id])\n  end\nend\n'})})]})}function _(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(36672);const o={},t=i.createContext(o);function r(e){const s=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);