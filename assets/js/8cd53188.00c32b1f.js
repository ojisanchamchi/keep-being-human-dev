"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12461],{17274:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/helpers/expert/organizing_helpers_with_concern","title":"organizing_helpers_with_concern","description":"\ud83d\udd27 Organizing Helpers with ActiveSupport::Concern Across Controllers and Views","source":"@site/docs/rails/helpers/expert/organizing_helpers_with_concern.md","sourceDirName":"rails/helpers/expert","slug":"/rails/helpers/expert/organizing_helpers_with_concern","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/organizing_helpers_with_concern","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/helpers/expert/organizing_helpers_with_concern.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"metaprogramming_method_missing_helpers","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/metaprogramming_method_missing_helpers"},"next":{"title":"testing_helpers_with_actionview","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/testing_helpers_with_actionview"}}');var s=r(23420),o=r(65404);const i={},a=void 0,l={},c=[{value:"\ud83d\udd27 Organizing Helpers with ActiveSupport::Concern Across Controllers and Views",id:"-organizing-helpers-with-activesupportconcern-across-controllers-and-views",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-organizing-helpers-with-activesupportconcern-across-controllers-and-views",children:"\ud83d\udd27 Organizing Helpers with ActiveSupport::Concern Across Controllers and Views"}),"\n",(0,s.jsxs)(n.p,{children:["Extract shared logic into an ",(0,s.jsx)(n.code,{children:"ActiveSupport::Concern"})," so it\u2019s available in controllers (via ",(0,s.jsx)(n.code,{children:"helper_method"}),") and views alike. This promotes single\u2011source\u2011of\u2011truth for behavior used in multiple layers."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/concerns/taggable.rb\nmodule Taggable\n  extend ActiveSupport::Concern\n\n  included do\n    helper_method :tag_cloud\n  end\n\n  def tag_cloud(tags)\n    tags.map { |t| link_to t.name, tag_path(t), class: 'tag' }.join(' ').html_safe\n  end\nend\n\n# app/controllers/application_controller.rb\nclass ApplicationController < ActionController::Base\n  include Taggable\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now you can call ",(0,s.jsx)(n.code,{children:"tag_cloud(@tags)"})," from controllers or directly in views."]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(36672);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);