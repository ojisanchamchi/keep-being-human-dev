"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[90828],{65404:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>s});var c=o(36672);const t={},a=c.createContext(t);function d(e){const n=c.useContext(a);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),c.createElement(a.Provider,{value:n},e.children)}},80455:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>d,metadata:()=>c,toc:()=>i});const c=JSON.parse('{"id":"rails/models/advanced/model_concerns_for_modular_logic","title":"model_concerns_for_modular_logic","description":"\ud83e\udde9 Modularizing Model Logic with Concerns","source":"@site/docs/rails/models/advanced/model_concerns_for_modular_logic.md","sourceDirName":"rails/models/advanced","slug":"/rails/models/advanced/model_concerns_for_modular_logic","permalink":"/keep-being-human-dev/docs/rails/models/advanced/model_concerns_for_modular_logic","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/advanced/model_concerns_for_modular_logic.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"db_check_constraints_for_validation","permalink":"/keep-being-human-dev/docs/rails/models/advanced/db_check_constraints_for_validation"},"next":{"title":"optimistic_locking_advanced","permalink":"/keep-being-human-dev/docs/rails/models/advanced/optimistic_locking_advanced"}}');var t=o(23420),a=o(65404);const d={},s=void 0,l={},i=[{value:"\ud83e\udde9 Modularizing Model Logic with Concerns",id:"-modularizing-model-logic-with-concerns",level:2}];function r(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-modularizing-model-logic-with-concerns",children:"\ud83e\udde9 Modularizing Model Logic with Concerns"}),"\n",(0,t.jsx)(n.p,{children:"Use ActiveSupport::Concern to extract reusable logic (associations, callbacks, instance methods) into modules and keep your models small. Concerns can bundle related methods, validations, and callbacks, and you can include them in multiple models without repeating code."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# app/models/concerns/commentable.rb\nmodule Commentable\n  extend ActiveSupport::Concern\n\n  included do\n    has_many :comments, as: :commentable, dependent: :destroy\n    before_destroy :log_comments_count\n  end\n\n  def comment_count\n    comments.count\n  end\n\n  private\n\n  def log_comments_count\n    Rails.logger.info "Deleting \\\\#{comments.count} comments"\n  end\nend\n\n# app/models/post.rb\nclass Post < ApplicationRecord\n  include Commentable\nend\n\n# app/models/image.rb\nclass Image < ApplicationRecord\n  include Commentable\nend\n'})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}}}]);