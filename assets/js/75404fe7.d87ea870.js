"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[45681],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var o=t(36672);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},95586:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"ruby/numbers/advanced/complex_rotations","title":"complex_rotations","description":"\ud83d\udd04 Performing 2D Rotations with Complex Numbers","source":"@site/docs/ruby/numbers/advanced/complex_rotations.md","sourceDirName":"ruby/numbers/advanced","slug":"/ruby/numbers/advanced/complex_rotations","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/complex_rotations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/advanced/complex_rotations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bigdecimal_precision","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/bigdecimal_precision"},"next":{"title":"numeric_clamp_bounds","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/numeric_clamp_bounds"}}');var r=t(23420),a=t(65404);const s={},i=void 0,c={},u=[{value:"\ud83d\udd04 Performing 2D Rotations with Complex Numbers",id:"-performing-2d-rotations-with-complex-numbers",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-performing-2d-rotations-with-complex-numbers",children:"\ud83d\udd04 Performing 2D Rotations with Complex Numbers"}),"\n",(0,r.jsx)(n.p,{children:"Complex numbers in Ruby can elegantly represent 2D points and apply rotations without manual matrix math. Multiply a point by a unit complex number derived from angle to rotate around the origin."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'complex'\n\npoint = Complex(3, 4)\nangle = Math::PI / 4 # 45 degrees\nrotation = Complex(Math.cos(angle), Math.sin(angle))\n\nrotated = point * rotation\nputs rotated # => Complex(-0.707106781186547, 4.94974746830583)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);