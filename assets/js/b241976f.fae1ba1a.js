"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[98542],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var o=i(36672);const r={},t=o.createContext(r);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},82193:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"ruby/regex/middle/inline_modifiers","title":"inline_modifiers","description":"\ud83d\udd27 Configure Regex Flags Inline","source":"@site/docs/ruby/regex/middle/inline_modifiers.md","sourceDirName":"ruby/regex/middle","slug":"/ruby/regex/middle/inline_modifiers","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/inline_modifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/middle/inline_modifiers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"gsub_with_block","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/gsub_with_block"},"next":{"title":"lookahead_lookbehind","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/lookahead_lookbehind"}}');var r=i(23420),t=i(65404);const s={},d=void 0,l={},a=[{value:"\ud83d\udd27 Configure Regex Flags Inline",id:"-configure-regex-flags-inline",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-configure-regex-flags-inline",children:"\ud83d\udd27 Configure Regex Flags Inline"}),"\n",(0,r.jsxs)(n.p,{children:["Inline modifiers ",(0,r.jsx)(n.code,{children:"(?i)"}),", ",(0,r.jsx)(n.code,{children:"(?m)"}),", and ",(0,r.jsx)(n.code,{children:"(?x)"})," let you switch options on or off for specific parts of your pattern. This keeps flags local and your global settings untouched."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# Case-insensitive for only the 'foo' part\ntxt = 'Foo Bar'\nputs txt.match?(/(?i:foo) bar/)  # => true\n\n# Multiline within a group\ndoc = \"line1\nline2\"\nputs doc.match?(/(?m:^line2$)/)  # => true\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use inline modifiers to avoid side effects on the rest of your pattern."})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);