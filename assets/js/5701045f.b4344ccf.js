"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85599],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(36672);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},78793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/metaprogramming/expert/runtime_instrumentation_tracepoint","title":"runtime_instrumentation_tracepoint","description":"\ud83d\udd75\ufe0f Runtime Instrumentation with TracePoint","source":"@site/docs/ruby/metaprogramming/expert/runtime_instrumentation_tracepoint.md","sourceDirName":"ruby/metaprogramming/expert","slug":"/ruby/metaprogramming/expert/runtime_instrumentation_tracepoint","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/runtime_instrumentation_tracepoint","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/expert/runtime_instrumentation_tracepoint.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"runtime_extension_with_fiddle","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/runtime_extension_with_fiddle"},"next":{"title":"scoped_monkey_patching_with_refinements","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/scoped_monkey_patching_with_refinements"}}');var i=t(23420),o=t(65404);const a={},s=void 0,c={},u=[{value:"\ud83d\udd75\ufe0f Runtime Instrumentation with TracePoint",id:"\ufe0f-runtime-instrumentation-with-tracepoint",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-runtime-instrumentation-with-tracepoint",children:"\ud83d\udd75\ufe0f Runtime Instrumentation with TracePoint"}),"\n",(0,i.jsxs)(n.p,{children:["Leverage the ",(0,i.jsx)(n.code,{children:"TracePoint"})," API to hook into Ruby\u2019s execution engine for profiling, debugging, or live code analysis. This low-level facility can capture calls, returns, class definitions, and more with minimal intrusion."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'tracer = TracePoint.new(:call, :return) do |tp|\n  if tp.defined_class == MyService && tp.event == :call\n    puts "Calling #{tp.method_id} at line #{tp.lineno}"\n  elsif tp.event == :return\n    puts "Returned from #{tp.method_id}"\n  end\nend\n\nclass MyService\n  def process; sleep(0.05); end\nend\n\ntracer.enable\nMyService.new.process\ntracer.disable\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);