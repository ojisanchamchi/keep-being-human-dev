"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[30535],{64476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"gems/chartkick/advanced/after_render_hook","title":"after_render_hook","description":"\ud83d\udd8c\ufe0f After\u2011Render Hook for Custom Annotations","source":"@site/docs/gems/chartkick/advanced/after_render_hook.md","sourceDirName":"gems/chartkick/advanced","slug":"/gems/chartkick/advanced/after_render_hook","permalink":"/keep-being-human-dev/docs/gems/chartkick/advanced/after_render_hook","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/chartkick/advanced/after_render_hook.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bcrypt_rehash_on_login","permalink":"/keep-being-human-dev/docs/gems/bcrypt/middle/bcrypt_rehash_on_login"},"next":{"title":"custom_tooltips_formatters","permalink":"/keep-being-human-dev/docs/gems/chartkick/advanced/custom_tooltips_formatters"}}');var a=t(23420),o=t(65404);const s={},c=void 0,i={},d=[{value:"\ud83d\udd8c\ufe0f After\u2011Render Hook for Custom Annotations",id:"\ufe0f-afterrender-hook-for-custom-annotations",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-afterrender-hook-for-custom-annotations",children:"\ud83d\udd8c\ufe0f After\u2011Render Hook for Custom Annotations"}),"\n",(0,a.jsxs)(n.p,{children:["Inject custom annotations or overlays by using Highcharts events under ",(0,a.jsx)(n.code,{children:"library.chart.events.load"}),". You can draw shapes, text, or images after the chart is rendered."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-erb",children:'<%= line_chart monthly_sales,\n  library: {\n    chart: {\n      events: {\n        load: -> {\n          const chart = this\n          chart.renderer.text("\u26a0\ufe0f Peak Month", chart.series[0].points[5].plotX + 50, chart.series[0].points[5].plotY + 20)\n            .css({ color: "#FF0000", fontSize: "14px" })\n            .add()\n        }\n      }\n    }\n  }\n%>\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// Alternatively in pure JS for a Chart.js implementation:\nimport Chartkick from \"chartkick\"\nimport \"chartkick/chart.js\"\n\nnew Chartkick.LineChart(\"annotated-chart\", monthlySales, {\n  library: {\n    animation: false,\n    plugins: {\n      annotation: {\n        annotations: [{\n          type: 'label',\n          xValue: '2023-06-01',\n          yValue: 120,\n          backgroundColor: 'rgba(255,0,0,0.5)',\n          content: ['\ud83c\udfc6 Peak']\n        }]\n      }\n    }\n  }\n})\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(36672);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);