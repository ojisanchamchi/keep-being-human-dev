"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[81009],{49407:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/metaprogramming/advanced/module_prepend_hooks","title":"module_prepend_hooks","description":"\ud83e\udd16 Aspect\u2011oriented hooks with Module#prepend","source":"@site/docs/ruby/metaprogramming/advanced/module_prepend_hooks.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/module_prepend_hooks","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/module_prepend_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/module_prepend_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_dispatch","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/method_missing_dispatch"},"next":{"title":"runtime_refinements","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/runtime_refinements"}}');var r=o(23420),s=o(65404);const d={},a=void 0,i={},c=[{value:"\ud83e\udd16 Aspect\u2011oriented hooks with <code>Module#prepend</code>",id:"-aspectoriented-hooks-with-moduleprepend",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-aspectoriented-hooks-with-moduleprepend",children:["\ud83e\udd16 Aspect\u2011oriented hooks with ",(0,r.jsx)(n.code,{children:"Module#prepend"})]}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"prepend"})," to inject modules before a class\u2019s own methods, enabling AOP-like pre/post hooks without aliasing. This preserves method visibility and avoids method_missing complexity."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'module Logging\n  def save(*args)\n    puts "Saving: #{self.inspect}"\n    super\n  end\nend\n\nclass Record\n  prepend Logging\n\n  def save\n    # actual save logic\n  end\nend\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>a});var t=o(36672);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);