"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15750],{65404:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>o});var n=r(36672);const a={},s=n.createContext(a);function c(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(s.Provider,{value:t},e.children)}},90458:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"ruby/rspec/expert/flaky_spec_auto_retry","title":"flaky_spec_auto_retry","description":"\ud83d\udd04 Flaky Spec Auto-Retry via Metadata","source":"@site/docs/ruby/rspec/expert/flaky_spec_auto_retry.md","sourceDirName":"ruby/rspec/expert","slug":"/ruby/rspec/expert/flaky_spec_auto_retry","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/flaky_spec_auto_retry","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/rspec/expert/flaky_spec_auto_retry.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_formatter_plugin","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/custom_formatter_plugin"},"next":{"title":"rspec_contexts_subject.md","permalink":"/keep-being-human-dev/docs/ruby/rspec/middle/rspec_contexts_subject.md"}}');var a=r(23420),s=r(65404);const c={},o=void 0,p={},u=[{value:"\ud83d\udd04 Flaky Spec Auto-Retry via Metadata",id:"-flaky-spec-auto-retry-via-metadata",level:2}];function i(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-flaky-spec-auto-retry-via-metadata",children:"\ud83d\udd04 Flaky Spec Auto-Retry via Metadata"}),"\n",(0,a.jsxs)(t.p,{children:["Implement a lightweight retry mechanism for flaky tests directly in RSpec without external gems. Use an ",(0,a.jsx)(t.code,{children:"around"})," hook that checks a custom ",(0,a.jsx)(t.code,{children:":retry"})," metadata key, rescues failures, and retries the example up to the specified count."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"# spec/spec_helper.rb\nRSpec.configure do |config|\n  config.around(:each) do |example|\n    retries = example.metadata[:retry] || 0\n    attempts = 0\n    begin\n      attempts += 1\n      example.run\n    rescue Exception => e\n      retry if attempts <= retries\n      raise e\n    end\n  end\nend\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"# spec/features/payment_flow_spec.rb\nRSpec.describe 'PaymentFlow', :retry => 3 do\n  it 'completes within 500ms under load' do\n    expect { run_heavy_payment_load }.not_to raise_error\n  end\nend\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}}}]);