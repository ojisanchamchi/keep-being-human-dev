"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[66282],{2968:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"ruby/arrays/advanced/pattern_matching_arrays","title":"pattern_matching_arrays","description":"\ud83e\udde9 Destructuring Nested Arrays with Pattern Matching","source":"@site/docs/ruby/arrays/advanced/pattern_matching_arrays.md","sourceDirName":"ruby/arrays/advanced","slug":"/ruby/arrays/advanced/pattern_matching_arrays","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/pattern_matching_arrays","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/advanced/pattern_matching_arrays.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lazy_enumerators","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/lazy_enumerators"},"next":{"title":"pipeline_with_tap_then","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/pipeline_with_tap_then"}}');var r=t(23420),s=t(65404);const c={},i=void 0,d={},o=[{value:"\ud83e\udde9 Destructuring Nested Arrays with Pattern Matching",id:"-destructuring-nested-arrays-with-pattern-matching",level:2}];function u(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-destructuring-nested-arrays-with-pattern-matching",children:"\ud83e\udde9 Destructuring Nested Arrays with Pattern Matching"}),"\n",(0,r.jsxs)(a.p,{children:["Ruby 3\u2019s pattern matching can unpack complex nested arrays in a concise way. Use the ",(0,r.jsx)(a.code,{children:"in"})," keyword in ",(0,r.jsx)(a.code,{children:"case"})," or within method parameters to extract values, ignoring or capturing rest elements. This makes your code more declarative and reduces manual indexing."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:"def analyze(data)\n  case data\n  in [user_id, [year, month, day], *tags]\n    puts \"User #{user_id} on #{year}-#{month}-#{day} with tags: #{tags.inspect}\"\n  end\nend\n\ndata = [42, [2023, 8, 15], 'ruby', 'arrays']\nanalyze(data)\n"})})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,a,t)=>{t.d(a,{R:()=>c,x:()=>i});var n=t(36672);const r={},s=n.createContext(r);function c(e){const a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);