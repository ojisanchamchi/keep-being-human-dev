"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15679],{26640:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"rails/forms/advanced/dynamic_nested_fields_with_cocoon","title":"dynamic_nested_fields_with_cocoon","description":"\ud83e\udde9 Dynamic Nested Fields with Cocoon","source":"@site/docs/rails/forms/advanced/dynamic_nested_fields_with_cocoon.md","sourceDirName":"rails/forms/advanced","slug":"/rails/forms/advanced/dynamic_nested_fields_with_cocoon","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/dynamic_nested_fields_with_cocoon","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/forms/advanced/dynamic_nested_fields_with_cocoon.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"direct_s3_uploads_with_active_storage","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/direct_s3_uploads_with_active_storage"},"next":{"title":"form_object_with_reform","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/form_object_with_reform"}}');var t=s(23420),a=s(65404);const i={},d=void 0,r={},c=[{value:"\ud83e\udde9 Dynamic Nested Fields with Cocoon",id:"-dynamic-nested-fields-with-cocoon",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-dynamic-nested-fields-with-cocoon",children:"\ud83e\udde9 Dynamic Nested Fields with Cocoon"}),"\n",(0,t.jsxs)(n.p,{children:["Use the Cocoon gem to dynamically add and remove nested form fields without page reloads. Cocoon handles ",(0,t.jsx)(n.code,{children:"has_many"})," associations and maintains proper indexing for Rails\u2019 strong parameters. First, add Cocoon to your Gemfile and configure your parent form with ",(0,t.jsx)(n.code,{children:"link_to_add_association"})," and ",(0,t.jsx)(n.code,{children:"link_to_remove_association"})," helpers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# app/models/project.rb\nclass Project < ApplicationRecord\n  has_many :tasks, inverse_of: :project\n  accepts_nested_attributes_for :tasks, allow_destroy: true\nend\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erb",children:"\x3c!-- app/views/projects/_form.html.erb --\x3e\n<%= form_with(model: project) do |f| %>\n  <div id=\"tasks\">\n    <%= f.simple_fields_for :tasks do |task_form| %>\n      <%= render 'task_fields', f: task_form %>\n    <% end %>\n    <%= link_to_add_association 'Add Task', f, :tasks, class: 'btn btn-sm btn-primary' %>\n  </div>\n  <%= f.submit %>\n<% end %>\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erb",children:"\x3c!-- app/views/projects/_task_fields.html.erb --\x3e\n<div class=\"nested-fields\">\n  <%= f.input :name %>\n  <%= link_to_remove_association 'Remove', f, class: 'text-danger' %>\n</div>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var o=s(36672);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);