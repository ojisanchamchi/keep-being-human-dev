"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[96520],{4207:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/matrix/advanced/numo_linalg_svd","title":"numo_linalg_svd","description":"\ud83d\ude80 High-Performance SVD via numo-linalg","source":"@site/docs/ruby/matrix/advanced/numo_linalg_svd.md","sourceDirName":"ruby/matrix/advanced","slug":"/ruby/matrix/advanced/numo_linalg_svd","permalink":"/keep-being-human-dev/docs/ruby/matrix/advanced/numo_linalg_svd","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/matrix/advanced/numo_linalg_svd.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lu_caching_solver","permalink":"/keep-being-human-dev/docs/ruby/matrix/advanced/lu_caching_solver"},"next":{"title":"rational_exact_arithmetic","permalink":"/keep-being-human-dev/docs/ruby/matrix/advanced/rational_exact_arithmetic"}}');var r=a(23420),o=a(65404);const i={},u=void 0,s={},c=[{value:"\ud83d\ude80 High-Performance SVD via numo-linalg",id:"-high-performance-svd-via-numo-linalg",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-high-performance-svd-via-numo-linalg",children:"\ud83d\ude80 High-Performance SVD via numo-linalg"}),"\n",(0,r.jsx)(n.p,{children:"For large matrices or advanced factorization like SVD, leverage the numo-linalg gem for native C/Fortran performance. Convert Ruby\u2019s Matrix to Numo::DFloat, call Numo::Linalg.svd, then map results back if needed."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'matrix'\nrequire 'numo/narray'\nrequire 'numo/linalg'  # ensure the numo-linalg gem is installed\n\n# Start with a standard Ruby Matrix\na = Matrix[[1.0, 2.0, 3.0],\n           [4.0, 5.0, 6.0],\n           [7.0, 8.0, 10.0]]\n\n# Convert to Numo::DFloat\nnary = Numo::DFloat[*a.to_a]\n\n# Compute SVD: U, singular values S, and V\u1d40\nu, s, vt = Numo::Linalg.svd(nary)\n\n# Reconstruct A \u2248 U \xb7 diag(S) \xb7 V\u1d40\na_recon = u.dot(Numo::DFloat.diag(s)).dot(vt)\n\nputs \"Singular values: #{s}\"\nputs \"Reconstructed matrix:\\n#{a_recon.round(5)}\"\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>u});var t=a(36672);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);