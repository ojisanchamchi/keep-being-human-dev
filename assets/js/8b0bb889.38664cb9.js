"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[20703],{19480:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/encryption/advanced/deterministic_encryption_search","title":"deterministic_encryption_search","description":"\ud83d\udd0e Deterministic Encryption for Searchable Fields","source":"@site/docs/rails/encryption/advanced/deterministic_encryption_search.md","sourceDirName":"rails/encryption/advanced","slug":"/rails/encryption/advanced/deterministic_encryption_search","permalink":"/keep-being-human-dev/docs/rails/encryption/advanced/deterministic_encryption_search","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/encryption/advanced/deterministic_encryption_search.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_aws_kms_key_provider","permalink":"/keep-being-human-dev/docs/rails/encryption/advanced/custom_aws_kms_key_provider"},"next":{"title":"rotate_encryption_keys","permalink":"/keep-being-human-dev/docs/rails/encryption/advanced/rotate_encryption_keys"}}');var r=i(23420),s=i(65404);const c={},a=void 0,o={},d=[{value:"\ud83d\udd0e Deterministic Encryption for Searchable Fields",id:"-deterministic-encryption-for-searchable-fields",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-deterministic-encryption-for-searchable-fields",children:"\ud83d\udd0e Deterministic Encryption for Searchable Fields"}),"\n",(0,r.jsxs)(n.p,{children:["By default Rails uses random initialization vectors for encryption, making indices unusable. Enabling ",(0,r.jsx)(n.strong,{children:"deterministic"})," encryption on specific attributes allows equality queries, though you lose semantic security guarantees."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  # will always produce the same ciphertext for the same plaintext\n  encrypts :email, deterministic: true\n  encrypts :ssn, deterministic: true, downcase: true\nend\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# Now you can query encrypted fields directly:\nUser.find_by(email: 'alice@example.com')\n"})}),"\n",(0,r.jsx)(n.p,{children:"Note: Avoid using deterministic encryption on high-cardinality or highly sensitive data without additional masking or hashing strategies."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var t=i(36672);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);