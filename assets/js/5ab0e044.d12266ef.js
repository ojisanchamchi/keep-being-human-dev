"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[10380],{65404:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(36672);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},96489:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/api_mode/advanced/http_caching_etags_conditional_get","title":"http_caching_etags_conditional_get","description":"\u26a1 HTTP Caching with ETags and Conditional GET","source":"@site/docs/rails/api_mode/advanced/http_caching_etags_conditional_get.md","sourceDirName":"rails/api_mode/advanced","slug":"/rails/api_mode/advanced/http_caching_etags_conditional_get","permalink":"/keep-being-human-dev/docs/rails/api_mode/advanced/http_caching_etags_conditional_get","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/api_mode/advanced/http_caching_etags_conditional_get.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"header_based_api_versioning","permalink":"/keep-being-human-dev/docs/rails/api_mode/advanced/header_based_api_versioning"},"next":{"title":"configure_cors","permalink":"/keep-being-human-dev/docs/rails/api_mode/beginner/configure_cors"}}');var i=a(23420),o=a(65404);const r={},c=void 0,s={},d=[{value:"\u26a1 HTTP Caching with ETags and Conditional GET",id:"-http-caching-with-etags-and-conditional-get",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-http-caching-with-etags-and-conditional-get",children:"\u26a1 HTTP Caching with ETags and Conditional GET"}),"\n",(0,i.jsxs)(n.p,{children:["Reduce payload and server load by leveraging ETags and conditional GET. Use ",(0,i.jsx)(n.code,{children:"fresh_when"})," in your API controllers and configure ",(0,i.jsx)(n.code,{children:"Rack::Cache"})," or a CDN to respect ",(0,i.jsx)(n.code,{children:"Cache-Control"})," headers. This setup will automatically return ",(0,i.jsx)(n.code,{children:"304 Not Modified"})," when possible."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# config/environments/production.rb\nRails.application.configure do\n  config.action_dispatch.rack_cache = {\n    verbose:     false,\n    metastore:   "redis://localhost:6379/1/metastore",\n    entitystore: "redis://localhost:6379/1/entitystore"\n  }\nend\n\n# app/controllers/api/v1/articles_controller.rb\nclass Api::V1::ArticlesController < ApplicationController\n  def show\n    article = Article.find(params[:id])\n    fresh_when(etag: article, last_modified: article.updated_at, public: true)\n    return head :not_modified if stale?(etag: article)\n\n    render json: ArticleSerializer.new(article).serializable_hash\n  end\nend\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);