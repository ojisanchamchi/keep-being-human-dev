"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[63360],{41694:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/benchmarking/middle/activerecord_n_plus_one_benchmark","title":"activerecord_n_plus_one_benchmark","description":"\ud83d\udee0\ufe0f Benchmark ActiveRecord to Detect N+1 Queries","source":"@site/docs/rails/benchmarking/middle/activerecord_n_plus_one_benchmark.md","sourceDirName":"rails/benchmarking/middle","slug":"/rails/benchmarking/middle/activerecord_n_plus_one_benchmark","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/activerecord_n_plus_one_benchmark","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/benchmarking/middle/activerecord_n_plus_one_benchmark.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sql_query_profiling","permalink":"/keep-being-human-dev/docs/rails/benchmarking/expert/sql_query_profiling"},"next":{"title":"benchmark_ips_usage","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/benchmark_ips_usage"}}');var t=r(23420),s=r(65404);const c={},a=void 0,o={},d=[{value:"\ud83d\udee0\ufe0f Benchmark ActiveRecord to Detect N+1 Queries",id:"\ufe0f-benchmark-activerecord-to-detect-n1-queries",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-benchmark-activerecord-to-detect-n1-queries",children:"\ud83d\udee0\ufe0f Benchmark ActiveRecord to Detect N+1 Queries"}),"\n",(0,t.jsxs)(n.p,{children:["Compare plain queries vs. eager\u2011loaded queries to avoid N+1 issues. Wrap both in a benchmark block to quantify the gain from using ",(0,t.jsx)(n.code,{children:"includes"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\nBenchmark.bm(15) do |x|\n  x.report('without includes:') do\n    100.times { Post.all.each { |p| p.comments.size } }\n  end\n\n  x.report('with includes:   ') do\n    100.times { Post.includes(:comments).each { |p| p.comments.size } }\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This prints a side\u2011by\u2011side comparison. If ",(0,t.jsx)(n.code,{children:"with includes"})," is significantly faster, eager loading is saving you database round trips."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var i=r(36672);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);