"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83408],{54193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"rails/encryption/middle/custom_message_encryptor","title":"custom_message_encryptor","description":"\ud83d\udee1\ufe0f Using ActiveSupport::MessageEncryptor for Custom Data","source":"@site/docs/rails/encryption/middle/custom_message_encryptor.md","sourceDirName":"rails/encryption/middle","slug":"/rails/encryption/middle/custom_message_encryptor","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/custom_message_encryptor","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/encryption/middle/custom_message_encryptor.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"active_record_encryption_config","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/active_record_encryption_config"},"next":{"title":"migrate_existing_to_encrypted","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/migrate_existing_to_encrypted"}}');var s=n(23420),o=n(65404);const i={},c=void 0,a={},p=[{value:"\ud83d\udee1\ufe0f Using ActiveSupport::MessageEncryptor for Custom Data",id:"\ufe0f-using-activesupportmessageencryptor-for-custom-data",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"\ufe0f-using-activesupportmessageencryptor-for-custom-data",children:"\ud83d\udee1\ufe0f Using ActiveSupport::MessageEncryptor for Custom Data"}),"\n",(0,s.jsxs)(t.p,{children:["When you need to encrypt arbitrary data (tokens, JSON blobs, URLs) outside of models, ",(0,s.jsx)(t.code,{children:"ActiveSupport::MessageEncryptor"})," is your friend. It provides authenticated encryption so tampering is detected."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# config/initializers/message_encryptor.rb\nkey     = Rails.application.secret_key_base.byteslice(0..31)\ncryptor = ActiveSupport::MessageEncryptor.new(key)\n\n# Encrypt\nencrypted = cryptor.encrypt_and_sign({user_id: 42, expires_at: 1.hour.from_now}.to_json)\n\n# Decrypt later\nbegin\n  json = cryptor.decrypt_and_verify(encrypted)\n  data = JSON.parse(json)\nrescue ActiveSupport::MessageVerifier::InvalidSignature\n  # handle tampering\nend\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(36672);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);