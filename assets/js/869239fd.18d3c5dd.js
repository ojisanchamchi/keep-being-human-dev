"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[46130],{8264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"gems/rspec/expert/advanced_const_mocking","title":"advanced_const_mocking","description":"\ud83d\udee0 Mock and Stub Private Constants with stub_const","source":"@site/docs/gems/rspec/expert/advanced_const_mocking.md","sourceDirName":"gems/rspec/expert","slug":"/gems/rspec/expert/advanced_const_mocking","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/advanced_const_mocking","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/expert/advanced_const_mocking.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parameterized_range_matcher","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/parameterized_range_matcher"},"next":{"title":"custom_composable_matchers","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/custom_composable_matchers"}}');var c=n(23420),o=n(65404);const r={},a=void 0,d={},i=[{value:"\ud83d\udee0 Mock and Stub Private Constants with <code>stub_const</code>",id:"-mock-and-stub-private-constants-with-stub_const",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(t.h2,{id:"-mock-and-stub-private-constants-with-stub_const",children:["\ud83d\udee0 Mock and Stub Private Constants with ",(0,c.jsx)(t.code,{children:"stub_const"})]}),"\n",(0,c.jsxs)(t.p,{children:["When you need to override deeply nested or private constants (e.g., feature flags or third\u2011party clients), ",(0,c.jsx)(t.code,{children:"stub_const"})," ensures isolation without altering production code."]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-ruby",children:"module Feature\n  PRIVATE_API_URL = 'https://api.example.com'.freeze\nend\n\nRSpec.describe MyService do\n  before do\n    stub_const('Feature::PRIVATE_API_URL', 'https://staging.example.com')\n  end\n\n  it 'uses the stubbed URL during request' do\n    expect(MyService.call).to include('staging.example.com')\n  end\nend\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(36672);const c={},o=s.createContext(c);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);