"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83113],{65404:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>c});var n=o(36672);const d={},i=n.createContext(d);function s(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),n.createElement(i.Provider,{value:r},e.children)}},95286:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>t,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"gems/geocoder/expert/bulk_reverse_geocoding_sidekiq","title":"bulk_reverse_geocoding_sidekiq","description":"\u2699\ufe0f Bulk Reverse Geocoding in Background with Sidekiq and Caching","source":"@site/docs/gems/geocoder/expert/bulk_reverse_geocoding_sidekiq.md","sourceDirName":"gems/geocoder/expert","slug":"/gems/geocoder/expert/bulk_reverse_geocoding_sidekiq","permalink":"/keep-being-human-dev/docs/gems/geocoder/expert/bulk_reverse_geocoding_sidekiq","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/geocoder/expert/bulk_reverse_geocoding_sidekiq.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"geocoder_reverse_usage","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_reverse_usage"},"next":{"title":"optimized_distance_sql","permalink":"/keep-being-human-dev/docs/gems/geocoder/expert/optimized_distance_sql"}}');var d=o(23420),i=o(65404);const s={},c=void 0,t={},a=[{value:"\u2699\ufe0f Bulk Reverse Geocoding in Background with Sidekiq and Caching",id:"\ufe0f-bulk-reverse-geocoding-in-background-with-sidekiq-and-caching",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h2,{id:"\ufe0f-bulk-reverse-geocoding-in-background-with-sidekiq-and-caching",children:"\u2699\ufe0f Bulk Reverse Geocoding in Background with Sidekiq and Caching"}),"\n",(0,d.jsx)(r.p,{children:"For large datasets, perform reverse geocoding asynchronously and cache results to limit API calls. Combine Sidekiq for background processing with Rails cache or Redis to store already\u2010looked\u2010up coordinates."}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-ruby",children:"# app/workers/reverse_geocode_worker.rb\nclass ReverseGeocodeWorker\n  include Sidekiq::Worker\n  sidekiq_options queue: :geocoding, retry: 3\n\n  def perform(record_class, record_id)\n    record = record_class.constantize.find(record_id)\n    cache_key = \"geocode:#{record.latitude},#{record.longitude}\"\n\n    location = Rails.cache.fetch(cache_key, expires_in: 12.hours) do\n      Geocoder.search([record.latitude, record.longitude]).first&.address\n    end\n\n    record.update_column(:address, location) if location\n  end\nend\n\n# Enqueue example for a batch\nUser.where(address: nil).find_each do |user|\n  ReverseGeocodeWorker.perform_async('User', user.id)\nend\n"})})]})}function g(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}}}]);