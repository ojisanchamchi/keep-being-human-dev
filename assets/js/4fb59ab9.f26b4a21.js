"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23171],{9966:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>r,contentTitle:()=>d,default:()=>c,frontMatter:()=>l,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"ruby/classes_and_modules/expert/autoload_lazy_loading","title":"autoload_lazy_loading","description":"\u23f1\ufe0f Autoloading Modules for Lazy Loading","source":"@site/docs/ruby/classes_and_modules/expert/autoload_lazy_loading.md","sourceDirName":"ruby/classes_and_modules/expert","slug":"/ruby/classes_and_modules/expert/autoload_lazy_loading","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/autoload_lazy_loading","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/expert/autoload_lazy_loading.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"anonymous_module_isolation","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/anonymous_module_isolation"},"next":{"title":"concern_pattern_composition","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/concern_pattern_composition"}}');var t=a(23420),s=a(65404);const l={},d=void 0,r={},i=[{value:"\u23f1\ufe0f Autoloading Modules for Lazy Loading",id:"\ufe0f-autoloading-modules-for-lazy-loading",level:2}];function u(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h2,{id:"\ufe0f-autoloading-modules-for-lazy-loading",children:"\u23f1\ufe0f Autoloading Modules for Lazy Loading"}),"\n",(0,t.jsxs)(o.p,{children:["Use ",(0,t.jsx)(o.code,{children:"autoload"})," or Rails\u2019 ",(0,t.jsx)(o.code,{children:"autoload_paths"})," to delay loading large modules until they're first referenced. This decreases memory usage and speeds up boot time, benefiting monolithic applications with numerous optional components."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-ruby",children:"# lib/analytics.rb\nmodule Analytics\n  autoload :Tracker, 'analytics/tracker'\n  autoload :Logger,  'analytics/logger'\nend\n\n# Usage\nAnalytics::Tracker.new.track_event(...)\n"})}),"\n",(0,t.jsxs)(o.p,{children:["Rails automatically handles autoload for files under ",(0,t.jsx)(o.code,{children:"app/"}),", but custom libs benefit from explicit ",(0,t.jsx)(o.code,{children:"autoload"})," declarations."]})]})}function c(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,o,a)=>{a.d(o,{R:()=>l,x:()=>d});var n=a(36672);const t={},s=n.createContext(t);function l(e){const o=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);