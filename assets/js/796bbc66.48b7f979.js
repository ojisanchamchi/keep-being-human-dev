"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95510],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(36672);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},66775:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/file_io/expert/sparse_file_manipulation","title":"sparse_file_manipulation","description":"\ud83d\udd73\ufe0f Create and Manage Sparse Files via FFI or truncate","source":"@site/docs/ruby/file_io/expert/sparse_file_manipulation.md","sourceDirName":"ruby/file_io/expert","slug":"/ruby/file_io/expert/sparse_file_manipulation","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/sparse_file_manipulation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/expert/sparse_file_manipulation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nonblocking_file_io","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/nonblocking_file_io"},"next":{"title":"streaming_encryption","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/streaming_encryption"}}');var a=i(23420),r=i(65404);const s={},o=void 0,l={},c=[{value:"\ud83d\udd73\ufe0f Create and Manage Sparse Files via FFI or <code>truncate</code>",id:"\ufe0f-create-and-manage-sparse-files-via-ffi-or-truncate",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"\ufe0f-create-and-manage-sparse-files-via-ffi-or-truncate",children:["\ud83d\udd73\ufe0f Create and Manage Sparse Files via FFI or ",(0,a.jsx)(n.code,{children:"truncate"})]}),"\n",(0,a.jsxs)(n.p,{children:["Sparse files let you allocate large logical sizes without consuming physical disk blocks. Use ",(0,a.jsx)(n.code,{children:"File#truncate"})," or ",(0,a.jsx)(n.code,{children:"lseek"})," with ",(0,a.jsx)(n.code,{children:"SEEK_DATA"}),"/",(0,a.jsx)(n.code,{children:"SEEK_HOLE"})," (Linux/Mac) for advanced sparse manipulation."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"file = File.open('sparse.bin', 'wb+')\n# Create a 10GB sparse file\nfile.truncate(10 * 1024**3)\n\n# Write a small header\nfile.seek(0)\nfile.write(\"HEADER\")\n\n# Seek to offset and write footer\nfile.seek(9 * 1024**3)\nfile.write(\"FOOTER\")\nfile.close\n\n# Inspect holes and data extents (via FFI)\n# Use `lseek(fd, offset, SEEK_DATA)` and `SEEK_HOLE` to discover blocks\n"})}),"\n",(0,a.jsx)(n.p,{children:"Sparse files are ideal for VM disk images or huge file placeholders without paying the full storage cost."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);