"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94555],{9683:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/operators/expert/extending_numeric_precision","title":"extending_numeric_precision","description":"\ud83d\udca1 Extending Numeric Operators for BigDecimal Precision","source":"@site/docs/ruby/operators/expert/extending_numeric_precision.md","sourceDirName":"ruby/operators/expert","slug":"/ruby/operators/expert/extending_numeric_precision","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/extending_numeric_precision","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/operators/expert/extending_numeric_precision.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_operator_overloading","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/dynamic_operator_overloading"},"next":{"title":"inline_rescue_in_operators","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/inline_rescue_in_operators"}}');var o=n(23420),t=n(65404);const c={},s=void 0,a={},d=[{value:"\ud83d\udca1 Extending Numeric Operators for <code>BigDecimal</code> Precision",id:"-extending-numeric-operators-for-bigdecimal-precision",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.h2,{id:"-extending-numeric-operators-for-bigdecimal-precision",children:["\ud83d\udca1 Extending Numeric Operators for ",(0,o.jsx)(r.code,{children:"BigDecimal"})," Precision"]}),"\n",(0,o.jsx)(r.p,{children:"Use refinements or core extensions to automatically apply rounding or precision rules to decimal arithmetic by overriding core numeric operators."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ruby",children:"require 'bigdecimal'\nrequire 'bigdecimal/util'\n\nmodule PreciseMath\n  refine BigDecimal do\n    alias raw_mul :*\n\n    def *(other)\n      (raw_mul(other) * 1).round(4)\n    end\n\n    alias raw_div :/\n\n    def /(other)\n      (raw_div(other)).round(4)\n    end\n  end\nend\n\nusing PreciseMath\nputs BigDecimal('1.2345') * BigDecimal('2.1111')   # \u21d2 2.6050\nputs BigDecimal('5') / BigDecimal('3')              # \u21d2 1.6667\n"})})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>s});var i=n(36672);const o={},t=i.createContext(o);function c(e){const r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);