"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85632],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(36672);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},71472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/logging/advanced/sql_query_context_logging","title":"sql_query_context_logging","description":"\ud83e\udde9 Enrich SQL Query Logs with Context","source":"@site/docs/rails/logging/advanced/sql_query_context_logging.md","sourceDirName":"rails/logging/advanced","slug":"/rails/logging/advanced/sql_query_context_logging","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/sql_query_context_logging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/advanced/sql_query_context_logging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lograge_logstash_integration","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/lograge_logstash_integration"},"next":{"title":"structured_json_logging","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/structured_json_logging"}}');var r=t(23420),i=t(65404);const s={},a=void 0,c={},l=[{value:"\ud83e\udde9 Enrich SQL Query Logs with Context",id:"-enrich-sql-query-logs-with-context",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-enrich-sql-query-logs-with-context",children:"\ud83e\udde9 Enrich SQL Query Logs with Context"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"ActiveSupport::Notifications"})," to subscribe to SQL events and append controller/action or custom attributes. This enables you to trace which endpoint triggered expensive queries across your logs or monitoring dashboards."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/sql_logger.rb\nActiveSupport::Notifications.subscribe('sql.active_record') do |name, start, finish, id, payload|\n  next if payload[:name] == 'SCHEMA'\n\n  duration = ((finish - start) * 1000).round(1)\n  context = Thread.current[:log_context] || {}\n  Rails.logger.info(\"SQL (#{duration}ms) [#{payload[:name]}] #{payload[:sql]} | Context: #{context.to_json}\")\nend\n\n# In ApplicationController\nbefore_action do\n  Thread.current[:log_context] = { user_id: current_user.id, action: action_name }\nend\n"})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);