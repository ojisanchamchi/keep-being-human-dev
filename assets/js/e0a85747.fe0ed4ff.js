"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72376],{65404:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var t=n(36672);const i={},o=t.createContext(i);function s(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:r},e.children)}},96360:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"rails/active_record/beginner/querying_with_where","title":"querying_with_where","description":"\ud83d\udd0e Query Records with where","source":"@site/docs/rails/active_record/beginner/querying_with_where.md","sourceDirName":"rails/active_record/beginner","slug":"/rails/active_record/beginner/querying_with_where","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/querying_with_where","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/beginner/querying_with_where.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"limit_and_offset","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/limit_and_offset"},"next":{"title":"reading_records","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/reading_records"}}');var i=n(23420),o=n(65404);const s={},c=void 0,d={},a=[{value:"\ud83d\udd0e Query Records with <code>where</code>",id:"-query-records-with-where",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h2,{id:"-query-records-with-where",children:["\ud83d\udd0e Query Records with ",(0,i.jsx)(r.code,{children:"where"})]}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"where"})," method is your go\u2011to for filtering records by conditions. It returns an ",(0,i.jsx)(r.code,{children:"ActiveRecord::Relation"}),", so you can chain additional scopes like ",(0,i.jsx)(r.code,{children:"order"})," or ",(0,i.jsx)(r.code,{children:"limit"}),". Use hashes for simple equality checks or SQL fragments for complex queries."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"# Simple equality\ntodos = Todo.where(done: false)\n\n# Complex conditions\nrecent_posts = Post.where('created_at > ?', 1.week.ago)\n"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);