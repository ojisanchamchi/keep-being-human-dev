"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[41199],{15888:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/sessions_and_cookies/middle/store_cart_in_session","title":"store_cart_in_session","description":"\ud83d\uded2 Store Shopping Cart in Session","source":"@site/docs/rails/sessions_and_cookies/middle/store_cart_in_session.md","sourceDirName":"rails/sessions_and_cookies/middle","slug":"/rails/sessions_and_cookies/middle/store_cart_in_session","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/middle/store_cart_in_session","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/sessions_and_cookies/middle/store_cart_in_session.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rolling_session_expiration","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/middle/rolling_session_expiration"},"next":{"title":"use_signed_encrypted_cookies","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/middle/use_signed_encrypted_cookies"}}');var t=n(23420),o=n(65404);const r={},a=void 0,c={},d=[{value:"\ud83d\uded2 Store Shopping Cart in Session",id:"-store-shopping-cart-in-session",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-store-shopping-cart-in-session",children:"\ud83d\uded2 Store Shopping Cart in Session"}),"\n",(0,t.jsxs)(s.p,{children:["Storing lightweight shopping cart data in the session helps you persist user selections across requests without hitting the database for each action. Use a hash or array to track product IDs and quantities, and remember to avoid storing bulky objects directly. You can initialize the cart in a ",(0,t.jsx)(s.code,{children:"before_action"})," and manipulate it in controller actions."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'class CartsController < ApplicationController\n  before_action :initialize_cart\n\n  def add\n    product_id = params[:product_id].to_s\n    session[:cart][product_id] = (session[:cart][product_id] || 0) + 1\n    redirect_to cart_path, notice: "Added to cart!"\n  end\n\n  private\n\n  def initialize_cart\n    session[:cart] ||= {}\n  end\nend\n'})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(36672);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);