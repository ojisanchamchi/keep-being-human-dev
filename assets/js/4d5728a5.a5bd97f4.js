"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59135],{65404:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>c});var n=r(36672);const a={},t=n.createContext(a);function d(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),n.createElement(t.Provider,{value:s},e.children)}},74533:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"gems/rspec/shared_examples/beginner/shared_examples_dry_specs","title":"shared_examples_dry_specs","description":"\ud83e\udde9 Use shared_examples for DRY Specs","source":"@site/docs/gems/rspec/shared_examples/beginner/shared_examples_dry_specs.md","sourceDirName":"gems/rspec/shared_examples/beginner","slug":"/gems/rspec/shared_examples/beginner/shared_examples_dry_specs","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/beginner/shared_examples_dry_specs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/shared_examples/beginner/shared_examples_dry_specs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parameterized_shared_examples_dsl","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl"},"next":{"title":"shared_examples_with_arguments","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/beginner/shared_examples_with_arguments"}}');var a=r(23420),t=r(65404);const d={},c=void 0,p={},i=[{value:"\ud83e\udde9 Use shared_examples for DRY Specs",id:"-use-shared_examples-for-dry-specs",level:2}];function o(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-use-shared_examples-for-dry-specs",children:"\ud83e\udde9 Use shared_examples for DRY Specs"}),"\n",(0,a.jsxs)(s.p,{children:["When you have similar examples across multiple specs, ",(0,a.jsx)(s.code,{children:"shared_examples"})," helps DRY up your tests by extracting common behaviors. Define your shared examples once and reuse them with ",(0,a.jsx)(s.code,{children:"it_behaves_like"}),", keeping your test suite concise and maintainable."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:'RSpec.shared_examples "a writable model" do\n  it "responds to #write" do\n    expect(subject).to respond_to(:write)\n  end\nend\n\nRSpec.describe Document do\n  subject { described_class.new }\n\n  it_behaves_like "a writable model"\nend\n\nRSpec.describe FileEntry do\n  subject { described_class.new }\n\n  it_behaves_like "a writable model"\nend\n'})})]})}function l(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);