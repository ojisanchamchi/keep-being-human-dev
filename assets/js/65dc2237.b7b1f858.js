"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[92433],{48986:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/classes_and_modules/advanced/using_refinements","title":"using_refinements","description":"\ud83d\udd0d Scoped Monkey-Patching with Refinements","source":"@site/docs/ruby/classes_and_modules/advanced/using_refinements.md","sourceDirName":"ruby/classes_and_modules/advanced","slug":"/ruby/classes_and_modules/advanced/using_refinements","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/using_refinements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/advanced/using_refinements.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"self_included_hook","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/self_included_hook"},"next":{"title":"attr_accessors","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/attr_accessors"}}');var a=t(23420),o=t(65404);const r={},i=void 0,d={},c=[{value:"\ud83d\udd0d Scoped Monkey-Patching with Refinements",id:"-scoped-monkey-patching-with-refinements",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-scoped-monkey-patching-with-refinements",children:"\ud83d\udd0d Scoped Monkey-Patching with Refinements"}),"\n",(0,a.jsxs)(n.p,{children:["Refinements let you override methods in a local scope without polluting the global namespace. Activate them with ",(0,a.jsx)(n.code,{children:"using"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'module StringExtensions\n  refine String do\n    def titleize\n      split.map(&:capitalize).join(\' \')\n    end\n  end\nend\n\nclass BookFormatter\n  using StringExtensions\n\n  def format(title)\n    title.titleize\n  end\nend\n\nformatter = BookFormatter.new\nformatter.format("the great gatsby") # => "The Great Gatsby"\nString.new.titleize # => NoMethodError\n'})}),"\n",(0,a.jsx)(n.p,{children:"Use refinements for library authors who need to patch core classes safely."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var s=t(36672);const a={},o=s.createContext(a);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);