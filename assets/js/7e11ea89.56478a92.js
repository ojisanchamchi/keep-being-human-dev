"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79746],{52018:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"rails/controllers/expert/dynamic_action_metaprogramming","title":"dynamic_action_metaprogramming","description":"\ud83e\uddd9\u200d\u2642\ufe0f Defining Dynamic Actions with Metaprogramming","source":"@site/docs/rails/controllers/expert/dynamic_action_metaprogramming.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/dynamic_action_metaprogramming","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/dynamic_action_metaprogramming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/dynamic_action_metaprogramming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dependency_injection_service_objects","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/dependency_injection_service_objects"},"next":{"title":"http2_server_push","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/http2_server_push"}}');var o=t(23420),i=t(65404);const s={},a=void 0,c={},m=[{value:"\ud83e\uddd9\u200d\u2642\ufe0f Defining Dynamic Actions with Metaprogramming",id:"\ufe0f-defining-dynamic-actions-with-metaprogramming",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-defining-dynamic-actions-with-metaprogramming",children:"\ud83e\uddd9\u200d\u2642\ufe0f Defining Dynamic Actions with Metaprogramming"}),"\n",(0,o.jsxs)(n.p,{children:["Reduce duplication by programmatically generating similar actions using ",(0,o.jsx)(n.code,{children:"define_method"}),". Combine with routing constraints or custom respond logic to handle multiple resource types in one controller."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class AdminController < ApplicationController\n  %w(users posts comments).each do |resource|\n    define_method(\"export_#{resource}\") do\n      items = resource.classify.constantize.all\n      csv   = items.to_csv\n      send_data csv, filename: \"#{resource}-#{Date.today}.csv\"\n    end\n  end\nend\n\n# config/routes.rb\nRails.application.routes.draw do\n  namespace :admin do\n    get 'export_users', to: 'admin#export_users'\n    get 'export_posts', to: 'admin#export_posts'\n    get 'export_comments', to: 'admin#export_comments'\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(36672);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);