"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2471],{65404:(e,r,i)=>{i.d(r,{R:()=>s,x:()=>c});var n=i(36672);const t={},o=n.createContext(t);function s(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:r},e.children)}},79719:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record_querying/middle/or_queries","title":"or_queries","description":"\ud83c\udfaf Combining Queries with .or","source":"@site/docs/rails/active_record_querying/middle/or_queries.md","sourceDirName":"rails/active_record_querying/middle","slug":"/rails/active_record_querying/middle/or_queries","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/or_queries","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/middle/or_queries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"joins_conditions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/joins_conditions"},"next":{"title":"pluck_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/pluck_usage"}}');var t=i(23420),o=i(65404);const s={},c=void 0,a={},d=[{value:"\ud83c\udfaf Combining Queries with <code>.or</code>",id:"-combining-queries-with-or",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.h2,{id:"-combining-queries-with-or",children:["\ud83c\udfaf Combining Queries with ",(0,t.jsx)(r.code,{children:".or"})]}),"\n",(0,t.jsxs)(r.p,{children:["Active Record's ",(0,t.jsx)(r.code,{children:".or"})," method lets you merge two relation objects into a single SQL query using ",(0,t.jsx)(r.code,{children:"OR"}),". This is handy for complex boolean logic without writing raw SQL. Each scope must target the same table."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ruby",children:"# Customers in California or New York\nca = Customer.where(state: 'CA')\nny = Customer.where(state: 'NY')\ncustomers = ca.or(ny)\n"})})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);