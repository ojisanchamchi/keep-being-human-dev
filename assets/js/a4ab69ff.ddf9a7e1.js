"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[74226],{44978:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_storage/advanced/direct_upload_throttling","title":"direct_upload_throttling","description":"\ud83d\udd78 Direct Upload with Custom Throttling","source":"@site/docs/rails/active_storage/advanced/direct_upload_throttling.md","sourceDirName":"rails/active_storage/advanced","slug":"/rails/active_storage/advanced/direct_upload_throttling","permalink":"/keep-being-human-dev/docs/rails/active_storage/advanced/direct_upload_throttling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_storage/advanced/direct_upload_throttling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_variant_processor","permalink":"/keep-being-human-dev/docs/rails/active_storage/advanced/custom_variant_processor"},"next":{"title":"stream_large_files","permalink":"/keep-being-human-dev/docs/rails/active_storage/advanced/stream_large_files"}}');var n=r(23420),o=r(65404);const i={},s=void 0,c={},d=[{value:"\ud83d\udd78 Direct Upload with Custom Throttling",id:"-direct-upload-with-custom-throttling",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-direct-upload-with-custom-throttling",children:"\ud83d\udd78 Direct Upload with Custom Throttling"}),"\n",(0,n.jsx)(t.p,{children:"You can throttle direct uploads by extending the built-in controller to limit bandwidth or request rates. This helps protect against DOS attacks and manage server load. Override the controller in your routes and inject a rate limiter like Rack::Attack."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# config/routes.rb\nRails.application.routes.draw do\n  direct_uploads = ActiveStorage::Engine.routes.named_routes[:rails_direct_uploads]\n  delete direct_uploads.path.spec.to_s, to: 'throttled_direct_uploads#create'\nend\n\n# app/controllers/throttled_direct_uploads_controller.rb\nclass ThrottledDirectUploadsController < ActiveStorage::DirectUploadsController\n  before_action :throttle_uploads!\n\n  private\n\n  def throttle_uploads!\n    key = \"upload:#{request.ip}\"\n    if Rails.cache.increment(key, 1, expires_in: 1.minute) > 60\n      render json: { error: 'Rate limit exceeded' }, status: :too_many_requests\n    end\n  end\nend\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var a=r(36672);const n={},o=a.createContext(n);function i(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);