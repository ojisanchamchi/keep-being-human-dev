"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94259],{53956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/minitest/beginner/setup_teardown_hooks","title":"setup_teardown_hooks","description":"\ud83d\udd0d Setup and Teardown Hooks","source":"@site/docs/ruby/minitest/beginner/setup_teardown_hooks.md","sourceDirName":"ruby/minitest/beginner","slug":"/ruby/minitest/beginner/setup_teardown_hooks","permalink":"/keep-being-human-dev/docs/ruby/minitest/beginner/setup_teardown_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/minitest/beginner/setup_teardown_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"getting_started","permalink":"/keep-being-human-dev/docs/ruby/minitest/beginner/getting_started"},"next":{"title":"custom_minitest_profiling_plugin","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/custom_minitest_profiling_plugin"}}');var r=t(23420),o=t(65404);const i={},a=void 0,u={},d=[{value:"\ud83d\udd0d Setup and Teardown Hooks",id:"-setup-and-teardown-hooks",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-setup-and-teardown-hooks",children:"\ud83d\udd0d Setup and Teardown Hooks"}),"\n",(0,r.jsxs)(n.p,{children:["When you have repeated preparation or cleanup tasks, use ",(0,r.jsx)(n.code,{children:"setup"})," and ",(0,r.jsx)(n.code,{children:"teardown"})," hooks to DRY up your tests. ",(0,r.jsx)(n.code,{children:"setup"})," runs before each test, and ",(0,r.jsx)(n.code,{children:"teardown"})," runs after, ensuring a clean state. This practice keeps tests isolated and easier to maintain."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'minitest/autorun'\n\nclass UserTest < Minitest::Test\n  def setup\n    @user = User.new(name: 'Test User')\n  end\n\n  def teardown\n    @user = nil\n  end\n\n  def test_user_name\n    assert_equal 'Test User', @user.name\n  end\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(36672);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);