"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17086],{15511:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"ruby/metaprogramming/advanced/unbound_method_binding","title":"unbound_method_binding","description":"\ud83d\udd01 Rebinding UnboundMethod for flexible composition","source":"@site/docs/ruby/metaprogramming/advanced/unbound_method_binding.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/unbound_method_binding","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/unbound_method_binding","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/unbound_method_binding.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tracepoint_monitoring","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/tracepoint_monitoring"},"next":{"title":"alias_method_usage","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/alias_method_usage"}}');var r=t(23420),d=t(65404);const i={},a=void 0,s={},m=[{value:"\ud83d\udd01 Rebinding <code>UnboundMethod</code> for flexible composition",id:"-rebinding-unboundmethod-for-flexible-composition",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-rebinding-unboundmethod-for-flexible-composition",children:["\ud83d\udd01 Rebinding ",(0,r.jsx)(n.code,{children:"UnboundMethod"})," for flexible composition"]}),"\n",(0,r.jsxs)(n.p,{children:["Extract methods as ",(0,r.jsx)(n.code,{children:"UnboundMethod"})," objects, modify or wrap them, and rebind to different classes or instances, enabling advanced method sharing patterns."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'module Formatter\n  def format_text(text)\n    text.strip.upcase\n  end\nend\n\num = Formatter.instance_method(:format_text)\nString.class_eval { define_method(:format_custom, um) }\n\n" hello ".format_custom # => "HELLO"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(36672);const r={},d=o.createContext(r);function i(e){const n=o.useContext(d);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);