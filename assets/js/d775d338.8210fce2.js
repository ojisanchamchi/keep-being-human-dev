"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95726],{4439:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/controllers/expert/advanced_content_negotiation","title":"advanced_content_negotiation","description":"\ud83c\udf10 Advanced Content Negotiation with Custom Responders","source":"@site/docs/rails/controllers/expert/advanced_content_negotiation.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/advanced_content_negotiation","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/advanced_content_negotiation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/advanced_content_negotiation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"action_cable_integration","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/action_cable_integration"},"next":{"title":"controller_concerns_adv","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/controller_concerns_adv"}}');var r=t(23420),s=t(65404);const a={},c=void 0,i={},d=[{value:"\ud83c\udf10 Advanced Content Negotiation with Custom Responders",id:"-advanced-content-negotiation-with-custom-responders",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-advanced-content-negotiation-with-custom-responders",children:"\ud83c\udf10 Advanced Content Negotiation with Custom Responders"}),"\n",(0,r.jsxs)(n.p,{children:["Create a custom responder to DRY up ",(0,r.jsx)(n.code,{children:"respond_to"})," logic across controllers. Handle JSON, XML, or custom MIME types, enforce API versioning, and provide consistent fallback behavior when formats aren\u2019t supported."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/responders/api_responder.rb\nclass ApiResponder < ActionController::Responder\n  def to_json\n    controller.render(json: resource, status: default_status)\n  end\n\n  def api_error\n    controller.render(json: { error: resource.errors }, status: :unprocessable_entity)\n  end\nend\n\n# app/controllers/application_controller.rb\nclass ApplicationController < ActionController::API\n  self.responder = ApiResponder\n  respond_to :json\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(36672);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);