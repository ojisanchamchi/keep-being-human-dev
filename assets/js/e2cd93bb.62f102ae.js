"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[40275],{65404:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>r});var t=n(36672);const o={},s=t.createContext(o);function i(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:a},e.children)}},85387:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_validations/expert/json_schema_validation","title":"json_schema_validation","description":"\ud83d\udce6 JSON Schema Validation for JSON Columns","source":"@site/docs/rails/active_record_validations/expert/json_schema_validation.md","sourceDirName":"rails/active_record_validations/expert","slug":"/rails/active_record_validations/expert/json_schema_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/json_schema_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/expert/json_schema_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_conditional_validations","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/dynamic_conditional_validations"},"next":{"title":"optimize_validation_performance","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/optimize_validation_performance"}}');var o=n(23420),s=n(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udce6 JSON Schema Validation for JSON Columns",id:"-json-schema-validation-for-json-columns",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h2,{id:"-json-schema-validation-for-json-columns",children:"\ud83d\udce6 JSON Schema Validation for JSON Columns"}),"\n",(0,o.jsxs)(a.p,{children:["Validate complex JSON structures by integrating JSON Schema with Rails. Use the ",(0,o.jsx)(a.code,{children:"json_schemer"})," gem to ensure payloads stored in JSON columns adhere to a schema, giving you strict, versionable contracts."]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-ruby",children:'# app/models/event.rb\nclass Event < ApplicationRecord\n  JSON_SCHEMA = Rails.root.join(\'schemas\', \'event.json\').read\n  validate :validate_payload_schema\n\n  def validate_payload_schema\n    schemer = JSONSchemer.schema(JSON_SCHEMA)\n    errors = schemer.validate(payload).to_a\n    errors.each { |err| self.errors.add(:payload, err[\'message\']) }\n  end\nend\n\n# schemas/event.json\n{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "type": "object",\n  "required": ["type", "data"],\n  "properties": { ... }\n}\n'})})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);