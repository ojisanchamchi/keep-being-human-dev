"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69655],{13594:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/uri/expert/custom_percent_encoding","title":"custom_percent_encoding","description":"\ud83d\udd27 Custom Percent-Encoding with URI::Parser","source":"@site/docs/ruby/uri/expert/custom_percent_encoding.md","sourceDirName":"ruby/uri/expert","slug":"/ruby/uri/expert/custom_percent_encoding","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/custom_percent_encoding","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/expert/custom_percent_encoding.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_uri_merging","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/advanced_uri_merging"},"next":{"title":"custom_uri_scheme","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/custom_uri_scheme"}}');var c=n(23420),s=n(65404);const o={},a=void 0,i={},u=[{value:"\ud83d\udd27 Custom Percent-Encoding with URI::Parser",id:"-custom-percent-encoding-with-uriparser",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(r.h2,{id:"-custom-percent-encoding-with-uriparser",children:"\ud83d\udd27 Custom Percent-Encoding with URI::Parser"}),"\n",(0,c.jsx)(r.p,{children:"To handle non-standard reserved characters or preserve literals like square brackets and spaces, instantiate a custom URI::Parser. By overriding the UNRESERVED set, you can precisely control which characters are percent-encoded and decoded, avoiding double-encoding or unexpected escapes."}),"\n",(0,c.jsx)(r.pre,{children:(0,c.jsx)(r.code,{className:"language-ruby",children:"require 'uri'\n# Extend default UNRESERVED to include square brackets\ncustom_parser = URI::Parser.new(\n  UNRESERVED: URI::Parser::UNRESERVED + '[]'\n)\n\nraw_uri = 'http://api.example.com/resource/my path/[detail]?q=foo bar'\nescaped  = custom_parser.escape(raw_uri)\n# => \"http://api.example.com/resource/my%20path/%5Bdetail%5D?q=foo%20bar\"\n\ndecoded = custom_parser.unescape(escaped)\n# => returns original raw_uri\n"})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,c.jsx)(r,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(36672);const c={},s=t.createContext(c);function o(e){const r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);