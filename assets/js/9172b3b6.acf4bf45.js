"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97019],{62213:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_querying/advanced/union_relations","title":"union_relations","description":"\ud83e\uddee Combine Result Sets with UNION","source":"@site/docs/rails/active_record_querying/advanced/union_relations.md","sourceDirName":"rails/active_record_querying/advanced","slug":"/rails/active_record_querying/advanced/union_relations","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/union_relations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/advanced/union_relations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"polymorphic_joins","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/polymorphic_joins"},"next":{"title":"upsert_all_conflicts","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/upsert_all_conflicts"}}');var i=r(23420),o=r(65404);const s={},a=void 0,c={},d=[{value:"\ud83e\uddee Combine Result Sets with UNION",id:"-combine-result-sets-with-union",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-combine-result-sets-with-union",children:"\ud83e\uddee Combine Result Sets with UNION"}),"\n",(0,i.jsxs)(n.p,{children:["Use Arel's ",(0,i.jsx)(n.code,{children:"union"})," or raw SQL to merge two ActiveRecord relations into one result set without duplicate rows. This is useful when querying similar data from different tables or conditions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"arel1 = User.where(active: true).arel\narel2 = Admin.where(active: true).arel\ncombined_sql = arel1.union(arel2).to_sql\nrecords = ActiveRecord::Base.connection.exec_query(combined_sql)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(36672);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);