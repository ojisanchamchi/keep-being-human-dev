"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[44371],{26062:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"ruby/metaprogramming/middle/const_missing_autoload","title":"const_missing_autoload","description":"\ud83d\ude80 Autoload Constants with const_missing","source":"@site/docs/ruby/metaprogramming/middle/const_missing_autoload.md","sourceDirName":"ruby/metaprogramming/middle","slug":"/ruby/metaprogramming/middle/const_missing_autoload","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/const_missing_autoload","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/middle/const_missing_autoload.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"class_eval_dynamic_methods","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/class_eval_dynamic_methods"},"next":{"title":"dsl_with_instance_eval","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/dsl_with_instance_eval"}}');var i=t(23420),o=t(65404);const a={},r=void 0,c={},m=[{value:"\ud83d\ude80 Autoload Constants with const_missing",id:"-autoload-constants-with-const_missing",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-autoload-constants-with-const_missing",children:"\ud83d\ude80 Autoload Constants with const_missing"}),"\n",(0,i.jsx)(n.p,{children:"Intercept missing constant references to implement on-the-fly loading or custom lookup logic. This can reduce startup time by lazily loading components."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"module Services\n  def self.const_missing(name)\n    file = File.join(__dir__, 'services', \"#{name.to_s.downcase}.rb\")\n    if File.exist?(file)\n      require file\n      const_get(name)\n    else\n      super\n    end\n  end\nend\n\n# Accessing Services::Payment will trigger loading services/payment.rb\nservice = Services::Payment.new\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(36672);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);