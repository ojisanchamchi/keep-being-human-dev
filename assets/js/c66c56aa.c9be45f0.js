"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[16661],{27776:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>n,contentTitle:()=>r,default:()=>k,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"rails/active_record_callbacks/middle/skip_callbacks","title":"skip_callbacks","description":"\ud83d\udeab Skip Callbacks with skip_callback","source":"@site/docs/rails/active_record_callbacks/middle/skip_callbacks.md","sourceDirName":"rails/active_record_callbacks/middle","slug":"/rails/active_record_callbacks/middle/skip_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/skip_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/middle/skip_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"normalize_attribute","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/normalize_attribute"},"next":{"title":"testing_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/testing_callbacks"}}');var l=c(23420),t=c(65404);const i={},r=void 0,n={},o=[{value:"\ud83d\udeab Skip Callbacks with <code>skip_callback</code>",id:"-skip-callbacks-with-skip_callback",level:2}];function d(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(a.h2,{id:"-skip-callbacks-with-skip_callback",children:["\ud83d\udeab Skip Callbacks with ",(0,l.jsx)(a.code,{children:"skip_callback"})]}),"\n",(0,l.jsxs)(a.p,{children:["Sometimes you need to bypass callbacks in tests or special flows. Use ",(0,l.jsx)(a.code,{children:"skip_callback"})," to disable them temporarily and restore later."]}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-ruby",children:"class Payment < ApplicationRecord\n  before_save :charge_external_service\nend\n\n# Disable callback globally\nPayment.skip_callback(:save, :before, :charge_external_service)\n# ...perform actions without charging...\nPayment.set_callback(:save, :before, :charge_external_service)\n"})}),"\n",(0,l.jsx)(a.p,{children:"Be cautious: disabling callbacks affects all future operations, so restore them immediately after."})]})}function k(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,l.jsx)(a,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},65404:(e,a,c)=>{c.d(a,{R:()=>i,x:()=>r});var s=c(36672);const l={},t=s.createContext(l);function i(e){const a=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);