"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[10389],{65404:(e,n,d)=>{d.d(n,{R:()=>s,x:()=>r});var t=d(36672);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},82808:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>g});const t=JSON.parse('{"id":"ruby/method_missing/middle/logging_undefined_calls","title":"logging_undefined_calls","description":"\ud83d\udc1e Logging and Debugging Undefined Methods","source":"@site/docs/ruby/method_missing/middle/logging_undefined_calls.md","sourceDirName":"ruby/method_missing/middle","slug":"/ruby/method_missing/middle/logging_undefined_calls","permalink":"/keep-being-human-dev/docs/ruby/method_missing/middle/logging_undefined_calls","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/middle/logging_undefined_calls.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"forwarding_proxy","permalink":"/keep-being-human-dev/docs/ruby/method_missing/middle/forwarding_proxy"},"next":{"title":"curry_and_method_to_proc","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/curry_and_method_to_proc"}}');var i=d(23420),o=d(65404);const s={},r=void 0,a={},g=[{value:"\ud83d\udc1e Logging and Debugging Undefined Methods",id:"-logging-and-debugging-undefined-methods",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-logging-and-debugging-undefined-methods",children:"\ud83d\udc1e Logging and Debugging Undefined Methods"}),"\n",(0,i.jsx)(n.p,{children:"Intercepting undefined calls helps trace where missing methods originate. Useful during refactoring to detect accidental calls or to provide informative error messages."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'class Debugger\n  def method_missing(name, *args)\n    warn "[DEBUG] Attempted to call #{name} with args: #{args.inspect}"\n    super\n  end\n\n  def respond_to_missing?(name, include_private = false)\n    false\n  end\nend\n\ndbg = Debugger.new\ndbg.nonexistent_method(123)\n# STDERR: [DEBUG] Attempted to call nonexistent_method with args: [123]\n# => NoMethodError: undefined method `nonexistent_method\' for #<Debugger:...>\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);