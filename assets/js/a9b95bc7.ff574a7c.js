"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[677],{22070:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/json/advanced/high_performance_parsing_with_oj","title":"high_performance_parsing_with_oj","description":"\ud83d\ude80 High-Performance Parsing and Serialization with Oj","source":"@site/docs/ruby/json/advanced/high_performance_parsing_with_oj.md","sourceDirName":"ruby/json/advanced","slug":"/ruby/json/advanced/high_performance_parsing_with_oj","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/high_performance_parsing_with_oj","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/json/advanced/high_performance_parsing_with_oj.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_generator_state_for_json","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/custom_generator_state_for_json"},"next":{"title":"streaming_large_json_with_oj_schandler","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/streaming_large_json_with_oj_schandler"}}');var r=t(23420),o=t(65404);const i={},s=void 0,c={},d=[{value:"\ud83d\ude80 High-Performance Parsing and Serialization with Oj",id:"-high-performance-parsing-and-serialization-with-oj",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-high-performance-parsing-and-serialization-with-oj",children:"\ud83d\ude80 High-Performance Parsing and Serialization with Oj"}),"\n",(0,r.jsx)(n.p,{children:"For ultra-fast JSON processing in Ruby, the Oj gem offers C-backed parsing and dumping with customizable modes. Set default options to bias for your data patterns\u2014such as symbolizing keys or loading BigDecimal natively\u2014to reduce post-processing overhead."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'oj'\n\n# Global configuration\nOj.default_options = {\n  mode: :compat,             # Allow interop with JSON gem structures\n  symbol_keys: true,         # Convert object keys to symbols\n  bigdecimal_load: :bigdecimal # Preserve BigDecimal types\n}\n\n# Parsing large JSON strings\ndata = Oj.load(json_string) # Fast C implementation\n\n# Serializing objects back to JSON\njson_output = Oj.dump(data, mode: :strict)\nputs json_output\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(36672);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);