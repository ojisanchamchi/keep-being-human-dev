"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[67874],{39436:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>u,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/uri/expert/advanced_uri_merging","title":"advanced_uri_merging","description":"\ud83d\udd04 Advanced URI Merging and Query Composition","source":"@site/docs/ruby/uri/expert/advanced_uri_merging.md","sourceDirName":"ruby/uri/expert","slug":"/ruby/uri/expert/advanced_uri_merging","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/advanced_uri_merging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/expert/advanced_uri_merging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parse_url","permalink":"/keep-being-human-dev/docs/ruby/uri/beginner/parse_url"},"next":{"title":"custom_percent_encoding","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/custom_percent_encoding"}}');var i=n(23420),a=n(65404);const s={},u=void 0,o={},d=[{value:"\ud83d\udd04 Advanced URI Merging and Query Composition",id:"-advanced-uri-merging-and-query-composition",level:2}];function c(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"-advanced-uri-merging-and-query-composition",children:"\ud83d\udd04 Advanced URI Merging and Query Composition"}),"\n",(0,i.jsxs)(r.p,{children:["Ruby's ",(0,i.jsx)(r.code,{children:"URI#merge"})," can intelligently combine base and relative URIs, but complex query params (arrays, nested) require manual normalization. Use ",(0,i.jsx)(r.code,{children:"URI.encode_www_form"})," to build query strings and assign them directly for precise control over parameter ordering and encoding."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'uri'\n\nbase = URI('https://example.com/api/v2/resources/')\n# Relative path and raw query parameters\nsub   = '../profiles?id=42&tags[]=ruby&tags[]=uri'\nmerged = base.merge(sub)\n# merged => #<URI::HTTPS https://example.com/api/v2/profiles?id=42&tags%5B%5D=ruby&tags%5B%5D=uri>\n\n# Rebuild query for custom ordering or complex structures\nparams = { 'id' => 42, 'tags[]' => ['ruby', 'uri'], 'filter[active]' => true }\nmerged.query = URI.encode_www_form(params)\n# => \"id=42&tags%5B%5D=ruby&tags%5B%5D=uri&filter%5Bactive%5D=true\"\n\nputs merged.to_s\n# https://example.com/api/v2/profiles?id=42&tags%5B%5D=ruby&tags%5B%5D=uri&filter%5Bactive%5D=true\n"})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>u});var t=n(36672);const i={},a=t.createContext(i);function s(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function u(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);