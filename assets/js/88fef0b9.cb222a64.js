"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[58665],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(36672);const s={},r=o.createContext(s);function a(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},83430:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"rails/routing/advanced/globbing_routes","title":"globbing_routes","description":"\ud83d\udef0\ufe0f Use Globbing for Catch\u2011All or Nested Paths","source":"@site/docs/rails/routing/advanced/globbing_routes.md","sourceDirName":"rails/routing/advanced","slug":"/rails/routing/advanced/globbing_routes","permalink":"/keep-being-human-dev/docs/rails/routing/advanced/globbing_routes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/routing/advanced/globbing_routes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_versioning","permalink":"/keep-being-human-dev/docs/rails/routing/advanced/api_versioning"},"next":{"title":"route_constraints","permalink":"/keep-being-human-dev/docs/rails/routing/advanced/route_constraints"}}');var s=t(23420),r=t(65404);const a={},i=void 0,l={},c=[{value:"\ud83d\udef0\ufe0f Use Globbing for Catch\u2011All or Nested Paths",id:"\ufe0f-use-globbing-for-catchall-or-nested-paths",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-use-globbing-for-catchall-or-nested-paths",children:"\ud83d\udef0\ufe0f Use Globbing for Catch\u2011All or Nested Paths"}),"\n",(0,s.jsxs)(n.p,{children:["Route globbing captures arbitrary path segments using a splat (",(0,s.jsx)(n.code,{children:"*"}),"). Commonly used for CMS pages or deeply nested paths without predefined routes."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# config/routes.rb\nRails.application.routes.draw do\n  # Catch-all for CMS pages\n  get 'pages/*slug', to: 'pages#show', as: :page\nend\n\n# In controller\nclass PagesController < ApplicationController\n  def show\n    @slug = params[:slug]           # => \"about/company/history\"\n    render template: \"pages/#{@slug}\"\n  end\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"Globbing routes are powerful but should be placed at the bottom to avoid unintended matches."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);