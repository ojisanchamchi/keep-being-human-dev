"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9442],{41623:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"gems/rspec/custom_matchers/beginner/parameterized_custom_matcher","title":"parameterized_custom_matcher","description":"\ud83c\udfaf Create a Parameterized Matcher","source":"@site/docs/gems/rspec/custom_matchers/beginner/parameterized_custom_matcher.md","sourceDirName":"gems/rspec/custom_matchers/beginner","slug":"/gems/rspec/custom_matchers/beginner/parameterized_custom_matcher","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/beginner/parameterized_custom_matcher","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/custom_matchers/beginner/parameterized_custom_matcher.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_failure_message","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/beginner/custom_failure_message"},"next":{"title":"diffable_block_expectations.md","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/expert/diffable_block_expectations.md"}}');var n=r(23420),s=r(65404);const c={},i=void 0,m={},o=[{value:"\ud83c\udfaf Create a Parameterized Matcher",id:"-create-a-parameterized-matcher",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-create-a-parameterized-matcher",children:"\ud83c\udfaf Create a Parameterized Matcher"}),"\n",(0,n.jsx)(t.p,{children:"Sometimes you need matchers that accept arguments to be more flexible. Pass parameters to your matcher definition so you can reuse it with different values."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# spec/support/matchers/be_within_range.rb\nRSpec::Matchers.define :be_within_range do |min, max|\n  match do |actual|\n    actual >= min && actual <= max\n  end\nend\n"})}),"\n",(0,n.jsx)(t.p,{children:"Use it like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"expect(5).to be_within_range(1, 10)\nexpect(15).not_to be_within_range(1, 10)\n"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var a=r(36672);const n={},s=a.createContext(n);function c(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);