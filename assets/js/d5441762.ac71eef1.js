"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80358],{65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(36672);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}},92309:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/logging/beginner/custom_log_formatter","title":"custom_log_formatter","description":"\ud83c\udfa8 Custom Log Formatter","source":"@site/docs/rails/logging/beginner/custom_log_formatter.md","sourceDirName":"rails/logging/beginner","slug":"/rails/logging/beginner/custom_log_formatter","permalink":"/keep-being-human-dev/docs/rails/logging/beginner/custom_log_formatter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/beginner/custom_log_formatter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tagged_logging_context","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/tagged_logging_context"},"next":{"title":"default_logger_usage","permalink":"/keep-being-human-dev/docs/rails/logging/beginner/default_logger_usage"}}');var r=n(23420),s=n(65404);const a={},i=void 0,g={},l=[{value:"\ud83c\udfa8 Custom Log Formatter",id:"-custom-log-formatter",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-custom-log-formatter",children:"\ud83c\udfa8 Custom Log Formatter"}),"\n",(0,r.jsxs)(t.p,{children:["You can implement a simple formatter to customize how your log messages look. Create a class that inherits from ",(0,r.jsx)(t.code,{children:"Logger::Formatter"})," and assign it in your config."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# lib/simple_formatter.rb\nclass SimpleFormatter < Logger::Formatter\n  def call(severity, time, progname, msg)\n    \"[#{time.strftime('%Y-%m-%d %H:%M:%S')}] #{severity}: #{msg}\\n\"\n  end\nend\n\n# config/application.rb\nRails.application.configure do\n  config.log_formatter = SimpleFormatter.new\nend\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);