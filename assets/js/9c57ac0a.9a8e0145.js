"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24486],{35001:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/active_record_associations/beginner/counter_cache_option","title":"counter_cache_option","description":"\ud83d\udd22 Use counter_cache for Fast Counts","source":"@site/docs/rails/active_record_associations/beginner/counter_cache_option.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/counter_cache_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/counter_cache_option","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/counter_cache_option.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"build_associated_records","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/build_associated_records"},"next":{"title":"dependent_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/dependent_option"}}');var c=t(23420),s=t(65404);const r={},a=void 0,i={},d=[{value:"\ud83d\udd22 Use <code>counter_cache</code> for Fast Counts",id:"-use-counter_cache-for-fast-counts",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h2,{id:"-use-counter_cache-for-fast-counts",children:["\ud83d\udd22 Use ",(0,c.jsx)(n.code,{children:"counter_cache"})," for Fast Counts"]}),"\n",(0,c.jsxs)(n.p,{children:["Enable ",(0,c.jsx)(n.code,{children:"counter_cache"})," to keep track of the number of associated records without running a COUNT query every time."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"# migration to add count\nadd_column :posts, :comments_count, :integer, default: 0\n\n# app/models/comment.rb\nclass Comment < ApplicationRecord\n  belongs_to :post, counter_cache: true\nend\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Now ",(0,c.jsx)(n.code,{children:"post.comments_count"})," is automatically updated when comments are created or destroyed, giving instant counts."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(36672);const c={},s=o.createContext(c);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);