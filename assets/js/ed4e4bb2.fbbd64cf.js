"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85875],{38286:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>t,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"ruby/classes_and_modules/middle/module_prepend","title":"module_prepend","description":"\ud83e\udde9 Using Module#prepend for Method Overrides","source":"@site/docs/ruby/classes_and_modules/middle/module_prepend.md","sourceDirName":"ruby/classes_and_modules/middle","slug":"/ruby/classes_and_modules/middle/module_prepend","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/module_prepend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/middle/module_prepend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"module_nesting_lookup","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/module_nesting_lookup"},"next":{"title":"namespacing_with_modules","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/namespacing_with_modules"}}');var o=d(23420),r=d(65404);const t={},i=void 0,l={},u=[{value:"\ud83e\udde9 Using Module#prepend for Method Overrides",id:"-using-moduleprepend-for-method-overrides",level:2}];function a(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-using-moduleprepend-for-method-overrides",children:"\ud83e\udde9 Using Module#prepend for Method Overrides"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Module#prepend"})," lets you inject behavior before existing methods are invoked, making it excellent for decorators or logging. Unlike ",(0,o.jsx)(n.code,{children:"include"}),", ",(0,o.jsx)(n.code,{children:"prepend"})," places the module higher in the lookup chain. Use it to wrap or modify method behavior transparently."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'module Auditor\n  def save\n    puts "Auditing before save"\n    super\n  end\nend\n\nclass Record\n  prepend Auditor\n\n  def save\n    puts "Saving record"\n  end\nend\n\nRecord.new.save\n# \u21d2 Auditing before save\n# \u21d2 Saving record\n'})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},65404:(e,n,d)=>{d.d(n,{R:()=>t,x:()=>i});var s=d(36672);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);