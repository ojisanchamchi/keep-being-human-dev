"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68592],{65404:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var s=o(36672);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},78471:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/vcr/advanced/vcr_custom_hooks","title":"vcr_custom_hooks","description":"\ud83d\udee0\ufe0f Custom Hooks for Request and Response Manipulation","source":"@site/docs/gems/vcr/advanced/vcr_custom_hooks.md","sourceDirName":"gems/vcr/advanced","slug":"/gems/vcr/advanced/vcr_custom_hooks","permalink":"/keep-being-human-dev/docs/gems/vcr/advanced/vcr_custom_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/advanced/vcr_custom_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"error_handling_and_retries","permalink":"/keep-being-human-dev/docs/gems/solid_queue/middle/error_handling_and_retries"},"next":{"title":"vcr_custom_request_matching","permalink":"/keep-being-human-dev/docs/gems/vcr/advanced/vcr_custom_request_matching"}}');var t=o(23420),r=o(65404);const a={},c=void 0,i={},d=[{value:"\ud83d\udee0\ufe0f Custom Hooks for Request and Response Manipulation",id:"\ufe0f-custom-hooks-for-request-and-response-manipulation",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-custom-hooks-for-request-and-response-manipulation",children:"\ud83d\udee0\ufe0f Custom Hooks for Request and Response Manipulation"}),"\n",(0,t.jsxs)(n.p,{children:["VCR allows you to hook into the recording process to filter sensitive data or modify requests and responses on the fly. You can use ",(0,t.jsx)(n.code,{children:"before_record"}),", ",(0,t.jsx)(n.code,{children:"before_playback"}),", and ",(0,t.jsx)(n.code,{children:"after_http_request"})," hooks to sanitize API keys, mask personal information, or inject headers dynamically. This is especially useful when dealing with third\u2011party services that return volatile tokens or PII."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"VCR.configure do |c|\n  # Filter out API keys in URIs and headers\n  c.filter_sensitive_data('<API_KEY>') { ENV['THIRD_PARTY_API_KEY'] }\n\n  # Strip dynamic tokens from recorded responses\n  c.before_record do |interaction|\n    interaction.response.body.gsub!(/\"token\":\"[^\"]+\"/, '\"token\":\"<TOKEN>\"')\n  end\n\n  # Inject a custom header before playback\n  c.before_playback do |interaction|\n    interaction.request.headers['X-Test-Mode'] = ['true']\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);