"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9287],{65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>u});var r=s(36672);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},69142:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ruby/exceptions/beginner/ensure_usage","title":"ensure_usage","description":"\ud83e\uddf9 Always use ensure for cleanup","source":"@site/docs/ruby/exceptions/beginner/ensure_usage.md","sourceDirName":"ruby/exceptions/beginner","slug":"/ruby/exceptions/beginner/ensure_usage","permalink":"/keep-being-human-dev/docs/ruby/exceptions/beginner/ensure_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/exceptions/beginner/ensure_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"retry_with_exponential_backoff","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/retry_with_exponential_backoff"},"next":{"title":"raising_exceptions","permalink":"/keep-being-human-dev/docs/ruby/exceptions/beginner/raising_exceptions"}}');var t=s(23420),o=s(65404);const a={},u=void 0,i={},c=[{value:"\ud83e\uddf9 Always use ensure for cleanup",id:"-always-use-ensure-for-cleanup",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-always-use-ensure-for-cleanup",children:"\ud83e\uddf9 Always use ensure for cleanup"}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"ensure"})," block to run cleanup code whether an exception occurs or not, such as closing files or releasing resources. This prevents resource leaks and keeps your application robust."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"begin\n  file = File.open('data.txt', 'w')\n  # ... write data ...\nensure\n  file.close if file\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);