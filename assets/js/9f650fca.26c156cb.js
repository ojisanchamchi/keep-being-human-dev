"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[55103],{59970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"sql/postgresql/middle/plpgsql_triggers_audit","title":"plpgsql_triggers_audit","description":"\ud83d\udd14 PL/pgSQL Triggers for Audit Logging","source":"@site/docs/sql/postgresql/middle/plpgsql_triggers_audit.md","sourceDirName":"sql/postgresql/middle","slug":"/sql/postgresql/middle/plpgsql_triggers_audit","permalink":"/keep-being-human-dev/docs/sql/postgresql/middle/plpgsql_triggers_audit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/postgresql/middle/plpgsql_triggers_audit.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"partial_indexes","permalink":"/keep-being-human-dev/docs/sql/postgresql/middle/partial_indexes"},"next":{"title":"recursive_cte_hierarchy","permalink":"/keep-being-human-dev/docs/sql/postgresql/middle/recursive_cte_hierarchy"}}');var r=n(23420),i=n(65404);const a={},l=void 0,o={},d=[{value:"\ud83d\udd14 PL/pgSQL Triggers for Audit Logging",id:"-plpgsql-triggers-for-audit-logging",level:2}];function g(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-plpgsql-triggers-for-audit-logging",children:"\ud83d\udd14 PL/pgSQL Triggers for Audit Logging"}),"\n",(0,r.jsx)(t.p,{children:"Triggers let you execute procedural code automatically on table events. Use PL/pgSQL functions to record changes in an audit table for inserts, updates, and deletes."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"-- Create audit table\nCREATE TABLE audit_log (\n  id serial PRIMARY KEY,\n  table_name text,\n  operation text,\n  changed_at timestamptz DEFAULT NOW(),\n  data jsonb\n);\n\n-- Trigger function\nCREATE OR REPLACE FUNCTION audit_changes() RETURNS trigger AS $$\nBEGIN\n  INSERT INTO audit_log(table_name, operation, data)\n  VALUES (TG_TABLE_NAME, TG_OP, to_jsonb(NEW));\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Attach trigger to target table\nCREATE TRIGGER user_audit\n  AFTER INSERT OR UPDATE OR DELETE\n  ON users\n  FOR EACH ROW EXECUTE FUNCTION audit_changes();\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(36672);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);