"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17038],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(36672);const c={},s=r.createContext(c);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},95264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"rails/security/advanced/dynamic_csp_with_secure_headers","title":"dynamic_csp_with_secure_headers","description":"\ud83d\udcdc Dynamic Content Security Policy with SecureHeaders","source":"@site/docs/rails/security/advanced/dynamic_csp_with_secure_headers.md","sourceDirName":"rails/security/advanced","slug":"/rails/security/advanced/dynamic_csp_with_secure_headers","permalink":"/keep-being-human-dev/docs/rails/security/advanced/dynamic_csp_with_secure_headers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/security/advanced/dynamic_csp_with_secure_headers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"devise_two_factor_authentication","permalink":"/keep-being-human-dev/docs/rails/security/advanced/devise_two_factor_authentication"},"next":{"title":"encrypted_credentials_multi_environment","permalink":"/keep-being-human-dev/docs/rails/security/advanced/encrypted_credentials_multi_environment"}}');var c=t(23420),s=t(65404);const i={},a=void 0,d={},o=[{value:"\ud83d\udcdc Dynamic Content Security Policy with SecureHeaders",id:"-dynamic-content-security-policy-with-secureheaders",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-dynamic-content-security-policy-with-secureheaders",children:"\ud83d\udcdc Dynamic Content Security Policy with SecureHeaders"}),"\n",(0,c.jsxs)(n.p,{children:["Use the ",(0,c.jsx)(n.code,{children:"secure_headers"})," gem to define and adjust CSP at runtime. You can whitelist dynamic asset hosts or nonces per-request."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"gem 'secure_headers'\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/secure_headers.rb\nSecureHeaders::Configuration.default do |config|\n  config.csp = {\n    default_src: %w('self'),\n    script_src: %w('self' 'unsafe-inline'),\n    report_uri: %w(/csp-violation-report)\n  }\nend\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:'# In controller\nSecureHeaders.override_x_content_security_policy(request) do |policy|\n  policy.script_src += ["https://#{current_user.cdn_host}"]\nend\n'})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}}}]);