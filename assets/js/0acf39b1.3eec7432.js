"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95718],{7975:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"ruby/blocks/middle/dsl_with_instance_eval.md","title":"dsl_with_instance_eval.md","description":"\ud83c\udfa8 Create Internal DSLs with instance_eval","source":"@site/docs/ruby/blocks/middle/dsl_with_instance_eval.md.md","sourceDirName":"ruby/blocks/middle","slug":"/ruby/blocks/middle/dsl_with_instance_eval.md","permalink":"/keep-being-human-dev/docs/ruby/blocks/middle/dsl_with_instance_eval.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/blocks/middle/dsl_with_instance_eval.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"default_block_fallback.md","permalink":"/keep-being-human-dev/docs/ruby/blocks/middle/default_block_fallback.md"},"next":{"title":"filter_and_map_collections.md","permalink":"/keep-being-human-dev/docs/ruby/blocks/middle/filter_and_map_collections.md"}}');var a=t(23420),l=t(65404);const i={},d=void 0,c={},r=[{value:"\ud83c\udfa8 Create Internal DSLs with <code>instance_eval</code>",id:"-create-internal-dsls-with-instance_eval",level:2}];function o(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"-create-internal-dsls-with-instance_eval",children:["\ud83c\udfa8 Create Internal DSLs with ",(0,a.jsx)(n.code,{children:"instance_eval"})]}),"\n",(0,a.jsxs)(n.p,{children:["Using ",(0,a.jsx)(n.code,{children:"instance_eval"})," you can evaluate a block in the context of an object, hiding implementation details and enabling cleaner DSLs. This is the backbone of many Ruby libraries like Rake and Rails routes."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"class Builder\n  attr_reader :steps\n\n  def initialize\n    @steps = []\n  end\n\n  def step(name)\n    @steps << name\n  end\n\n  def build(&block)\n    instance_eval(&block)\n    @steps\n  end\nend\n\nbuilder = Builder.new\nsteps = builder.build do\n  step :install\n  step :configure\n  step :deploy\nend\n\nputs steps.inspect\n# => [:install, :configure, :deploy]\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(36672);const a={},l=s.createContext(a);function i(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);