"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38246],{7129:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/irb/expert/history_incremental_search","title":"history_incremental_search","description":"\ud83d\udd0d Advanced Incremental History Search","source":"@site/docs/ruby/irb/expert/history_incremental_search.md","sourceDirName":"ruby/irb/expert","slug":"/ruby/irb/expert/history_incremental_search","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/history_incremental_search","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/irb/expert/history_incremental_search.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_git_prompt","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/dynamic_git_prompt"},"next":{"title":"input_preprocessor","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/input_preprocessor"}}');var i=n(23420),c=n(65404);const a={},s=void 0,o={},d=[{value:"\ud83d\udd0d Advanced Incremental History Search",id:"-advanced-incremental-history-search",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"-advanced-incremental-history-search",children:"\ud83d\udd0d Advanced Incremental History Search"}),"\n",(0,i.jsxs)(r.p,{children:["Leverage Readline's incremental search to quickly find previous commands without leaving IRB. By binding ",(0,i.jsx)(r.code,{children:"Ctrl-R"})," to ",(0,i.jsx)(r.code,{children:"history_search_backward"}),", you can jump directly to matching entries."]}),"\n",(0,i.jsxs)(r.p,{children:["Add this to your ",(0,i.jsx)(r.code,{children:"~/.irbrc"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'readline'\nReadline.define_history_proc { |line| line.strip.empty? ? false : true }\nReadline.emacs_editing_mode\nReadline::HISTORY.to_a      # inspect history\n# Bind Ctrl-R to reverse incremental search\nReadline.rl_bind_key(\"\\C-r\") { Readline::history_search_backward }\n"})}),"\n",(0,i.jsxs)(r.p,{children:["Now within IRB, hit ",(0,i.jsx)(r.code,{children:"Ctrl-R"})," and type part of a previous command to instantly recall it."]})]})}function p(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var t=n(36672);const i={},c=t.createContext(i);function a(e){const r=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(c.Provider,{value:r},e.children)}}}]);