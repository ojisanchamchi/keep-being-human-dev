"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[93515],{9454:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/csv/advanced/streaming_csv_generation","title":"streaming_csv_generation","description":"\ud83d\udd04 Stream CSV Generation with Enumerator","source":"@site/docs/ruby/csv/advanced/streaming_csv_generation.md","sourceDirName":"ruby/csv/advanced","slug":"/ruby/csv/advanced/streaming_csv_generation","permalink":"/keep-being-human-dev/docs/ruby/csv/advanced/streaming_csv_generation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/csv/advanced/streaming_csv_generation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parallel_csv_processing","permalink":"/keep-being-human-dev/docs/ruby/csv/advanced/parallel_csv_processing"},"next":{"title":"csv_foreach_basics","permalink":"/keep-being-human-dev/docs/ruby/csv/beginner/csv_foreach_basics"}}');var a=r(23420),s=r(65404);const i={},o=void 0,c={},d=[{value:"\ud83d\udd04 Stream CSV Generation with Enumerator",id:"-stream-csv-generation-with-enumerator",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-stream-csv-generation-with-enumerator",children:"\ud83d\udd04 Stream CSV Generation with Enumerator"}),"\n",(0,a.jsx)(n.p,{children:"When exporting query results to CSV for web clients, building the entire string can exhaust memory. Use an Enumerator that yields CSV lines on the fly, allowing frameworks like Rack to stream responses."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'csv'\n\nenum = Enumerator.new do |yielder|\n  yielder << CSV.generate_line(['id', 'name', 'email'])\n  User.find_each(batch_size: 1_000) do |user|\n    yielder << CSV.generate_line([user.id, user.name, user.email])\n  end\nend\n\n# In Rails controller:\n# render plain: enum, content_type: 'text/csv'\n"})}),"\n",(0,a.jsx)(n.p,{children:"This approach never holds the full CSV in memory. Clients start downloading data immediately, improving UX and reducing server load."})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(36672);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);