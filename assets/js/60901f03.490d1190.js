"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83092],{8786:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/websockets/advanced/custom_connection_identifiers","title":"custom_connection_identifiers","description":"\ud83d\udd12 Custom Connection Identifiers & Auth","source":"@site/docs/rails/websockets/advanced/custom_connection_identifiers.md","sourceDirName":"rails/websockets/advanced","slug":"/rails/websockets/advanced/custom_connection_identifiers","permalink":"/keep-being-human-dev/docs/rails/websockets/advanced/custom_connection_identifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/websockets/advanced/custom_connection_identifiers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"view_component_usage","permalink":"/keep-being-human-dev/docs/rails/views/middle/view_component_usage"},"next":{"title":"dynamic_channel_streaming","permalink":"/keep-being-human-dev/docs/rails/websockets/advanced/dynamic_channel_streaming"}}');var s=t(23420),c=t(65404);const o={},r=void 0,a={},d=[{value:"\ud83d\udd12 Custom Connection Identifiers &amp; Auth",id:"-custom-connection-identifiers--auth",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-custom-connection-identifiers--auth",children:"\ud83d\udd12 Custom Connection Identifiers & Auth"}),"\n",(0,s.jsxs)(n.p,{children:["Enhance security and tracking by identifying connections with custom properties (e.g., UUIDs or roles) and authenticating users in ",(0,s.jsx)(n.code,{children:"Connection"}),". This allows per-connection rate\u2010limiting or access control."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# app/channels/application_cable/connection.rb\nmodule ApplicationCable\n  class Connection < ActionCable::Connection::Base\n    identified_by :current_user, :connection_uuid\n\n    def connect\n      self.current_user = find_verified_user\n      self.connection_uuid = SecureRandom.uuid\n    end\n\n    private\n\n    def find_verified_user\n      if (user = User.find_by(id: cookies.signed[:user_id]))\n        user\n      else\n        reject_unauthorized_connection\n      end\n    end\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(36672);const s={},c=i.createContext(s);function o(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);