"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79024],{41158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rails/authentication_and_authorization/middle/customize_redirects","title":"customize_redirects","description":"\ud83d\udd04 Customize Post-Login Redirects","source":"@site/docs/rails/authentication_and_authorization/middle/customize_redirects.md","sourceDirName":"rails/authentication_and_authorization/middle","slug":"/rails/authentication_and_authorization/middle/customize_redirects","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/middle/customize_redirects","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/middle/customize_redirects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"mfa_custom_warden_strategy","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/expert/mfa_custom_warden_strategy"},"next":{"title":"policy_scope_index","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/middle/policy_scope_index"}}');var o=n(23420),r=n(65404);const s={},a=void 0,d={},c=[{value:"\ud83d\udd04 Customize Post-Login Redirects",id:"-customize-post-login-redirects",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-customize-post-login-redirects",children:"\ud83d\udd04 Customize Post-Login Redirects"}),"\n",(0,o.jsxs)(t.p,{children:["When using Devise, you can override ",(0,o.jsx)(t.code,{children:"after_sign_in_path_for"})," to redirect users based on their roles or preferences. This ensures admins land on a dashboard while regular users go to the homepage. Simply add the override in ",(0,o.jsx)(t.code,{children:"ApplicationController"})," or a custom sessions controller."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"class ApplicationController < ActionController::Base\n  # Redirect users after login based on role\n  def after_sign_in_path_for(resource)\n    if resource.admin?\n      admin_dashboard_path\n    else\n      root_path\n    end\n  end\nend\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(36672);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);