"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12863],{6181:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_record_associations/beginner/has_many_association","title":"has_many_association","description":"\ud83d\udcda Use has_many for One-to-Many Relations","source":"@site/docs/rails/active_record_associations/beginner/has_many_association.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/has_many_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_many_association","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/has_many_association.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"has_and_belongs_to_many_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_and_belongs_to_many_association"},"next":{"title":"has_many_through_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_many_through_association"}}');var o=s(23420),t=s(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udcda Use <code>has_many</code> for One-to-Many Relations",id:"-use-has_many-for-one-to-many-relations",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"-use-has_many-for-one-to-many-relations",children:["\ud83d\udcda Use ",(0,o.jsx)(n.code,{children:"has_many"})," for One-to-Many Relations"]}),"\n",(0,o.jsxs)(n.p,{children:["Declare ",(0,o.jsx)(n.code,{children:"has_many"})," on the parent model to relate it to multiple children. It provides collection methods like ",(0,o.jsx)(n.code,{children:"build"}),", ",(0,o.jsx)(n.code,{children:"create"}),", and enumeration helpers."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# app/models/post.rb\nclass Post < ApplicationRecord\n  has_many :comments\nend\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Now you can call ",(0,o.jsx)(n.code,{children:"post.comments"}),", ",(0,o.jsx)(n.code,{children:'post.comments.build(body: "Nice!")'}),", or ",(0,o.jsx)(n.code,{children:'post.comments.create(body: "Great!")'})," to manage comment records."]})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var a=s(36672);const o={},t=a.createContext(o);function i(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);