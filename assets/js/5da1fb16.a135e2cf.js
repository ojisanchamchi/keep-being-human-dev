"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72351],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(36672);const u={},c=r.createContext(u);function o(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(u):e.components||u:o(e.components),r.createElement(c.Provider,{value:n},e.children)}},72043:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"gems/counter_culture/beginner/counter_culture_setup","title":"counter_culture_setup","description":"\ud83d\udce6 Installing and Configuring Counter Culture","source":"@site/docs/gems/counter_culture/beginner/counter_culture_setup.md","sourceDirName":"gems/counter_culture/beginner","slug":"/gems/counter_culture/beginner/counter_culture_setup","permalink":"/keep-being-human-dev/docs/gems/counter_culture/beginner/counter_culture_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/counter_culture/beginner/counter_culture_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"counter_culture_basic_usage","permalink":"/keep-being-human-dev/docs/gems/counter_culture/beginner/counter_culture_basic_usage"},"next":{"title":"batch_async_counter_updates","permalink":"/keep-being-human-dev/docs/gems/counter_culture/expert/batch_async_counter_updates"}}');var u=t(23420),c=t(65404);const o={},s=void 0,a={},l=[{value:"\ud83d\udce6 Installing and Configuring Counter Culture",id:"-installing-and-configuring-counter-culture",level:2}];function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(n.h2,{id:"-installing-and-configuring-counter-culture",children:"\ud83d\udce6 Installing and Configuring Counter Culture"}),"\n",(0,u.jsx)(n.p,{children:"Counter Culture helps you keep counter caches in sync without manual SQL. First, add it to your Gemfile and run bundler to install:"}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-ruby",children:"gem 'counter_culture'\n"})}),"\n",(0,u.jsxs)(n.p,{children:["Next, generate a migration to add a counter column to the parent model (e.g., ",(0,u.jsx)(n.code,{children:"comments_count"})," on ",(0,u.jsx)(n.code,{children:"posts"}),"):"]}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-bash",children:"rails generate migration AddCommentsCountToPosts comments_count:integer\n"})}),"\n",(0,u.jsx)(n.p,{children:"Then open the generated migration and set a default value and null constraint:"}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-ruby",children:"class AddCommentsCountToPosts < ActiveRecord::Migration[6.0]\n  def change\n    add_column :posts, :comments_count, :integer, default: 0, null: false\n  end\nend\n"})}),"\n",(0,u.jsx)(n.p,{children:"Run the migration:"}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-bash",children:"rails db:migrate\n"})}),"\n",(0,u.jsxs)(n.p,{children:["Finally, configure your ",(0,u.jsx)(n.code,{children:"Comment"})," model to update the counter cache on ",(0,u.jsx)(n.code,{children:"Post"}),":"]}),"\n",(0,u.jsx)(n.pre,{children:(0,u.jsx)(n.code,{className:"language-ruby",children:"class Comment < ApplicationRecord\n  belongs_to :post\n  counter_culture :post\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,u.jsx)(n,{...e,children:(0,u.jsx)(i,{...e})}):i(e)}}}]);