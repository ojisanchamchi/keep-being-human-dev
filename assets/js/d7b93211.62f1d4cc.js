"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86446],{65404:(e,a,n)=>{n.d(a,{R:()=>c,x:()=>o});var t=n(36672);const r={},s=t.createContext(r);function c(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:a},e.children)}},71318:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_callbacks/middle/around_save_transaction","title":"around_save_transaction","description":"\ud83c\udf00 Wrap Logic with around_save","source":"@site/docs/rails/active_record_callbacks/middle/around_save_transaction.md","sourceDirName":"rails/active_record_callbacks/middle","slug":"/rails/active_record_callbacks/middle/around_save_transaction","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/around_save_transaction","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/middle/around_save_transaction.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"soft_delete_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/expert/soft_delete_callbacks"},"next":{"title":"batch_operations_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/batch_operations_callbacks"}}');var r=n(23420),s=n(65404);const c={},o=void 0,i={},d=[{value:"\ud83c\udf00 Wrap Logic with around_save",id:"-wrap-logic-with-around_save",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-wrap-logic-with-around_save",children:"\ud83c\udf00 Wrap Logic with around_save"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.code,{children:"around_save"})," lets you run code before and after the save operation within the same callback, ideal for transaction-related logic or performance measurement."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:'class Product < ApplicationRecord\n  around_save :benchmark_save\n\n  private\n\n  def benchmark_save\n    start_time = Time.now\n    yield  # proceeds to the save\n    Rails.logger.info "Saved #{self.class} in #{Time.now - start_time}s"\n  end\nend\n'})}),"\n",(0,r.jsxs)(a.p,{children:["Using ",(0,r.jsx)(a.code,{children:"yield"})," executes the save; you can wrap it with timers, logging, or custom transaction handling."]})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);