"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[37574],{14046:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"ruby/marshal/beginner/marshal_caching_simple_objects","title":"marshal_caching_simple_objects","description":"\ud83d\udce6 Simple Object Caching with Marshal","source":"@site/docs/ruby/marshal/beginner/marshal_caching_simple_objects.md","sourceDirName":"ruby/marshal/beginner","slug":"/ruby/marshal/beginner/marshal_caching_simple_objects","permalink":"/keep-being-human-dev/docs/ruby/marshal/beginner/marshal_caching_simple_objects","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/marshal/beginner/marshal_caching_simple_objects.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"basic_marshal_dump_load","permalink":"/keep-being-human-dev/docs/ruby/marshal/beginner/basic_marshal_dump_load"},"next":{"title":"marshal_with_files","permalink":"/keep-being-human-dev/docs/ruby/marshal/beginner/marshal_with_files"}}');var r=s(23420),t=s(65404);const i={},c=void 0,l={},o=[{value:"\ud83d\udce6 Simple Object Caching with Marshal",id:"-simple-object-caching-with-marshal",level:2}];function h(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-simple-object-caching-with-marshal",children:"\ud83d\udce6 Simple Object Caching with Marshal"}),"\n",(0,r.jsx)(a.p,{children:"Use Marshal to cache frequently used objects in memory or on disk. Because marshaled data is compact, it speeds up loading configurations or computed results. Just remember that only Ruby-built or user\u2011defined serializable classes work out of the box."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:'cache_file = "user_cache.bin"\n\n# Populate cache if missing\ndata = if File.exist?(cache_file)\n  File.open(cache_file, "rb") { |f| Marshal.load(f) }\nelse\n  user_list = fetch_users_from_api()  # expensive call\n  File.open(cache_file, "wb") { |f| f.write(Marshal.dump(user_list)) }\n  user_list\nend\nputs "Loaded #{data.size} users from cache"\n'})})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},65404:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>c});var n=s(36672);const r={},t=n.createContext(r);function i(e){const a=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);