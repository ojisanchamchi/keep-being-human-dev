"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[5727],{50132:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/authentication_and_authorization/beginner/before_action_authentication","title":"before_action_authentication","description":"\ud83d\udee1\ufe0f Protect Routes with before_action","source":"@site/docs/rails/authentication_and_authorization/beginner/before_action_authentication.md","sourceDirName":"rails/authentication_and_authorization/beginner","slug":"/rails/authentication_and_authorization/beginner/before_action_authentication","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/before_action_authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/beginner/before_action_authentication.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bcrypt_user_auth","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/bcrypt_user_auth"},"next":{"title":"sessions_controller_setup","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/sessions_controller_setup"}}');var o=t(23420),r=t(65404);const a={},s=void 0,c={},l=[{value:"\ud83d\udee1\ufe0f Protect Routes with <code>before_action</code>",id:"\ufe0f-protect-routes-with-before_action",level:2}];function u(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"\ufe0f-protect-routes-with-before_action",children:["\ud83d\udee1\ufe0f Protect Routes with ",(0,o.jsx)(n.code,{children:"before_action"})]}),"\n",(0,o.jsxs)(n.p,{children:["Use a ",(0,o.jsx)(n.code,{children:"before_action"})," filter in your controllers to ensure only authenticated users can access certain actions. Define a helper in ",(0,o.jsx)(n.code,{children:"ApplicationController"})," and apply it where needed."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Define the helper methods:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class ApplicationController < ActionController::Base\n  helper_method :current_user, :logged_in?\n\n  def current_user\n    @current_user ||= User.find_by(id: session[:user_id]) if session[:user_id]\n  end\n\n  def logged_in?\n    current_user.present?\n  end\n\n  def require_login\n    unless logged_in?\n      redirect_to login_path, alert: 'Please log in to continue'\n    end\n  end\nend\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"Apply the filter in any controller:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class ArticlesController < ApplicationController\n  before_action :require_login, only: [:new, :create, :edit, :update, :destroy]\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(36672);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);