"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86290],{33473:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/deployment/middle/production_credentials_usage","title":"production_credentials_usage","description":"\ud83d\udd11 Managing Production Credentials with Rails Encrypted Secrets","source":"@site/docs/rails/deployment/middle/production_credentials_usage.md","sourceDirName":"rails/deployment/middle","slug":"/rails/deployment/middle/production_credentials_usage","permalink":"/keep-being-human-dev/docs/rails/deployment/middle/production_credentials_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/deployment/middle/production_credentials_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"local_asset_precompile","permalink":"/keep-being-human-dev/docs/rails/deployment/middle/local_asset_precompile"},"next":{"title":"custom_aws_kms_key_provider","permalink":"/keep-being-human-dev/docs/rails/encryption/advanced/custom_aws_kms_key_provider"}}');var i=s(23420),r=s(65404);const a={},c=void 0,o={},d=[{value:"\ud83d\udd11 Managing Production Credentials with Rails Encrypted Secrets",id:"-managing-production-credentials-with-rails-encrypted-secrets",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-managing-production-credentials-with-rails-encrypted-secrets",children:"\ud83d\udd11 Managing Production Credentials with Rails Encrypted Secrets"}),"\n",(0,i.jsxs)(n.p,{children:["Rails 5.2+ offers encrypted credentials per environment, removing the need for manual ",(0,i.jsx)(n.code,{children:"ENV"})," juggling or ",(0,i.jsx)(n.code,{children:".env"})," files in production. Use the built\u2011in editor to securely store API keys, database URLs, or third\u2011party secrets, then fetch them with ",(0,i.jsx)(n.code,{children:"Rails.application.credentials"}),". This keeps secrets out of your repo and simplifies rotation."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Open the production credentials in your editor\nEDITOR="nano" bin/rails credentials:edit --environment production\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# Inside credentials/production.yml.enc\ndb:\n  url: "postgres://user:pass@db.example.com/my_app_production"\naws:\n  access_key_id: "YOUR_KEY"\n  secret_access_key: "YOUR_SECRET"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Using credentials in your app\nclient = Aws::S3::Client.new(\n  access_key_id: Rails.application.credentials.dig(:aws, :access_key_id),\n  secret_access_key: Rails.application.credentials.dig(:aws, :secret_access_key),\n  region: 'us-east-1'\n)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(36672);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);