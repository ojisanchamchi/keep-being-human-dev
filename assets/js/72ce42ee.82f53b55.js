"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35680],{1331:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"gems/view_component/advanced/system_arguments","title":"system_arguments","description":"\ud83c\udfa8 Using system_arguments for Dynamic CSS and HTML Attributes","source":"@site/docs/gems/view_component/advanced/system_arguments.md","sourceDirName":"gems/view_component/advanced","slug":"/gems/view_component/advanced/system_arguments","permalink":"/keep-being-human-dev/docs/gems/view_component/advanced/system_arguments","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/advanced/system_arguments.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"precompile_and_cache","permalink":"/keep-being-human-dev/docs/gems/view_component/advanced/precompile_and_cache"},"next":{"title":"testing_with_rspec","permalink":"/keep-being-human-dev/docs/gems/view_component/advanced/testing_with_rspec"}}');var a=t(23420),r=t(65404);const o={},c=void 0,m={},i=[{value:"\ud83c\udfa8 Using <code>system_arguments</code> for Dynamic CSS and HTML Attributes",id:"-using-system_arguments-for-dynamic-css-and-html-attributes",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"-using-system_arguments-for-dynamic-css-and-html-attributes",children:["\ud83c\udfa8 Using ",(0,a.jsx)(n.code,{children:"system_arguments"})," for Dynamic CSS and HTML Attributes"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"system_arguments"})," helper in ViewComponent allows you to merge default and user-provided HTML attributes (like classes or data-attributes) seamlessly. This pattern is powerful for building themeable, reusable components without manual ",(0,a.jsx)(n.code,{children:"tag"})," calls."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# app/components/button_component.rb\nclass ButtonComponent < ViewComponent::Base\n  def initialize(**system_arguments)\n    @system_arguments = system_arguments\n    @system_arguments[:class] = class_names(\n      "btn-base",\n      system_arguments[:variant] == :primary ? "btn-primary" : "btn-secondary",\n      system_arguments[:class]\n    )\n  end\n\n  def call\n    tag.button(**@system_arguments) { content }\n  end\nend\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-erb",children:'<%= render(ButtonComponent.new(variant: :primary, data: { action: "click->modal#open" })) do %>\n  Open Modal\n<% end %>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(36672);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);