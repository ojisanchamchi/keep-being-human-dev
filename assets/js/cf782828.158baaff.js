"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61665],{58313:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>u,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"ruby/methods/beginner/splat_arguments","title":"splat_arguments","description":"\u2728 Variable Arguments with Splat","source":"@site/docs/ruby/methods/beginner/splat_arguments.md","sourceDirName":"ruby/methods/beginner","slug":"/ruby/methods/beginner/splat_arguments","permalink":"/keep-being-human-dev/docs/ruby/methods/beginner/splat_arguments","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/beginner/splat_arguments.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_chaining","permalink":"/keep-being-human-dev/docs/ruby/methods/beginner/method_chaining"},"next":{"title":"using_blocks","permalink":"/keep-being-human-dev/docs/ruby/methods/beginner/using_blocks"}}');var s=t(23420),a=t(65404);const o={},u=void 0,i={},l=[{value:"\u2728 Variable Arguments with Splat",id:"-variable-arguments-with-splat",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-variable-arguments-with-splat",children:"\u2728 Variable Arguments with Splat"}),"\n",(0,s.jsxs)(n.p,{children:["Use the splat operator (",(0,s.jsx)(n.code,{children:"*"}),") to accept a variable number of arguments as an array. Great for methods where you don\u2019t know how many inputs you\u2019ll need."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"def sum_all(*numbers)\n  numbers.reduce(0, :+)\nend\n\nputs sum_all(1, 2, 3)    # => 6\nputs sum_all(5, 10, 15)  # => 30\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>u});var r=t(36672);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);