"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69729],{12702:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"ruby/minitest/expert/property_based_with_rantly","title":"property_based_with_rantly","description":"\ud83c\udfb2 Property-Based Testing with Rantly","source":"@site/docs/ruby/minitest/expert/property_based_with_rantly.md","sourceDirName":"ruby/minitest/expert","slug":"/ruby/minitest/expert/property_based_with_rantly","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/property_based_with_rantly","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/minitest/expert/property_based_with_rantly.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parallel_test_sharding","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/parallel_test_sharding"},"next":{"title":"assertion_matchers_refutations","permalink":"/keep-being-human-dev/docs/ruby/minitest/middle/assertion_matchers_refutations"}}');var s=r(23420),i=r(65404);const a={},o=void 0,p={},d=[{value:"\ud83c\udfb2 Property-Based Testing with Rantly",id:"-property-based-testing-with-rantly",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-property-based-testing-with-rantly",children:"\ud83c\udfb2 Property-Based Testing with Rantly"}),"\n",(0,s.jsx)(t.p,{children:"Inject randomness by combining Minitest with Rantly for property-based tests. This helps reveal edge cases that fixed fixtures might miss."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# test/property/test_string_reversibility.rb\nrequire 'test_helper'\nrequire 'rantly'\nrequire 'rantly/shrinks'\n\nclass StringPropertyTest < Minitest::Test\n  def test_reverse_twice_returns_original\n    property_of { string }.check do |random_str|\n      assert_equal random_str, random_str.reverse.reverse\n    end\n  end\nend\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run with a seed for reproducibility:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"SEED=12345 ruby -Itest test/property/test_string_reversibility.rb\n"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(36672);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);