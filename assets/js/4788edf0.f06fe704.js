"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[65753],{65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(36672);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},84641:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/hashes/beginner/working_with_nested_hashes","title":"working_with_nested_hashes","description":"\ud83c\udfd7\ufe0f Working with Nested Hashes","source":"@site/docs/ruby/hashes/beginner/working_with_nested_hashes.md","sourceDirName":"ruby/hashes/beginner","slug":"/ruby/hashes/beginner/working_with_nested_hashes","permalink":"/keep-being-human-dev/docs/ruby/hashes/beginner/working_with_nested_hashes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/beginner/working_with_nested_hashes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"symbol_vs_string_keys","permalink":"/keep-being-human-dev/docs/ruby/hashes/beginner/symbol_vs_string_keys"},"next":{"title":"advanced_keyword_arg_forwarding","permalink":"/keep-being-human-dev/docs/ruby/hashes/expert/advanced_keyword_arg_forwarding"}}');var a=s(23420),r=s(65404);const i={},o=void 0,h={},d=[{value:"\ud83c\udfd7\ufe0f Working with Nested Hashes",id:"\ufe0f-working-with-nested-hashes",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-working-with-nested-hashes",children:"\ud83c\udfd7\ufe0f Working with Nested Hashes"}),"\n",(0,a.jsx)(n.p,{children:"Hashes can contain other hashes, allowing you to build complex data structures. Access nested values by chaining key lookups or using the dig method for safety."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'config = {\n  database: {\n    adapter: "sqlite3",\n    pool: 5\n  }\n}\n# Chained lookup\nadapter = config[:database][:adapter]  # => "sqlite3"\n\n# Safe lookup\ntimeout = config.dig(:database, :timeout) || 5000  # fallback default\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);