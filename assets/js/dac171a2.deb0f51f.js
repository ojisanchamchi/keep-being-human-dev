"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80995],{22021:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/testing/advanced/dynamic_vcr_cassettes","title":"dynamic_vcr_cassettes","description":"\ud83c\udf9e\ufe0f Dynamic VCR Cassettes","source":"@site/docs/rails/testing/advanced/dynamic_vcr_cassettes.md","sourceDirName":"rails/testing/advanced","slug":"/rails/testing/advanced/dynamic_vcr_cassettes","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/dynamic_vcr_cassettes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/advanced/dynamic_vcr_cassettes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"use_signed_encrypted_cookies","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/middle/use_signed_encrypted_cookies"},"next":{"title":"parallel_test_execution","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/parallel_test_execution"}}');var a=s(23420),c=s(65404);const r={},i=void 0,d={},o=[{value:"\ud83c\udf9e\ufe0f Dynamic VCR Cassettes",id:"\ufe0f-dynamic-vcr-cassettes",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-dynamic-vcr-cassettes",children:"\ud83c\udf9e\ufe0f Dynamic VCR Cassettes"}),"\n",(0,a.jsx)(n.p,{children:"Automate cassette naming using RSpec metadata and dynamic interpolation to avoid manual discrepancies and group recordings logically by example or feature flag."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# spec/support/vcr.rb\nVCR.configure do |c|\n  c.cassette_library_dir = 'spec/vcr_cassettes'\n  c.hook_into :webmock\nend\n\nRSpec.configure do |config|\n  config.around(:each, :vcr) do |example|\n    name = example.metadata[:cassette] || example.full_description.underscore.tr(' ', '/')\n    VCR.use_cassette(name, record: :new_episodes) { example.run }\n  end\nend\n\n# Usage in specs:\n# it 'fetches data', :vcr do\n#   # uses cassettes/spec_fetches_data.yml\n# end\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(36672);const a={},c=t.createContext(a);function r(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);