"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26803],{36884:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/metaprogramming/beginner/simple_dsl_blocks","title":"simple_dsl_blocks","description":"\ud83d\udcdc Create a Simple DSL with Blocks","source":"@site/docs/ruby/metaprogramming/beginner/simple_dsl_blocks.md","sourceDirName":"ruby/metaprogramming/beginner","slug":"/ruby/metaprogramming/beginner/simple_dsl_blocks","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/simple_dsl_blocks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/beginner/simple_dsl_blocks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"respond_to_missing","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/respond_to_missing"},"next":{"title":"advanced_method_missing_respond_to","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/advanced_method_missing_respond_to"}}');var r=s(23420),o=s(65404);const i={},a=void 0,c={},l=[{value:"\ud83d\udcdc Create a Simple DSL with Blocks",id:"-create-a-simple-dsl-with-blocks",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-create-a-simple-dsl-with-blocks",children:"\ud83d\udcdc Create a Simple DSL with Blocks"}),"\n",(0,r.jsx)(n.p,{children:"Blocks combined with metaprogramming let you build concise DSLs. You can yield a context object and define methods within that block to read more naturally."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'class QueryBuilder\n  def initialize(&block)\n    @clauses = []\n    instance_eval(&block)\n  end\n\n  def select(columns)\n    @clauses << "SELECT #{columns.join(\', \')}"\n  end\n\n  def where(cond)\n    @clauses << "WHERE #{cond}"\n  end\n\n  def to_sql\n    @clauses.join(\' \')\n  end\nend\n\nsql = QueryBuilder.new do\n  select [:name, :age]\n  where "age > 21"\nend\n\nputs sql.to_sql   # => "SELECT name, age WHERE age > 21"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(36672);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);