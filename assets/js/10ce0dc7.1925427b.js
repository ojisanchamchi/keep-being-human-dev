"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77466],{65404:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>i});var t=o(36672);const s={},r=t.createContext(s);function d(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(r.Provider,{value:n},e.children)}},88535:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"gems/rspec/hooks_and_lifecycle/middle/around_hooks_custom_setup","title":"around_hooks_custom_setup","description":"\ud83d\udd04 Flexible Setup and Teardown with around Hooks","source":"@site/docs/gems/rspec/hooks_and_lifecycle/middle/around_hooks_custom_setup.md","sourceDirName":"gems/rspec/hooks_and_lifecycle/middle","slug":"/gems/rspec/hooks_and_lifecycle/middle/around_hooks_custom_setup","permalink":"/keep-being-human-dev/docs/gems/rspec/hooks_and_lifecycle/middle/around_hooks_custom_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/hooks_and_lifecycle/middle/around_hooks_custom_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prepend_hooks_module","permalink":"/keep-being-human-dev/docs/gems/rspec/hooks_and_lifecycle/expert/prepend_hooks_module"},"next":{"title":"metadata_filtered_hooks","permalink":"/keep-being-human-dev/docs/gems/rspec/hooks_and_lifecycle/middle/metadata_filtered_hooks"}}');var s=o(23420),r=o(65404);const d={},i=void 0,a={},c=[{value:"\ud83d\udd04 Flexible Setup and Teardown with <code>around</code> Hooks",id:"-flexible-setup-and-teardown-with-around-hooks",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-flexible-setup-and-teardown-with-around-hooks",children:["\ud83d\udd04 Flexible Setup and Teardown with ",(0,s.jsx)(n.code,{children:"around"})," Hooks"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"around"})," hook gives you full control over example execution by wrapping setup and teardown logic around ",(0,s.jsx)(n.code,{children:"example.run"}),". This is useful for tasks like timing, logging, or managing external resources in a single place."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'RSpec.configure do |config|\n  config.around(:each) do |example|\n    start_time = Time.now\n    puts "\\n[START] #{example.full_description} at #{start_time}"\n    example.run\n    duration = Time.now - start_time\n    puts "[END] #{example.full_description} (#{duration.round(2)}s)"\n  end\nend\n\nRSpec.describe MyService do\n  it \'performs work efficiently\' do\n    expect(MyService.new.call).to be_truthy\n  end\nend\n'})}),"\n",(0,s.jsx)(n.p,{children:"Here, every example will print its start time and duration, ensuring consistent logging without duplicating code in each spec."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);