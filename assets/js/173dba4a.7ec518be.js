"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35432],{65329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ruby/creating_gems/expert/automated_release_pipeline","title":"automated_release_pipeline","description":"\ud83e\udd16 Automating Releases with GitHub Actions and Bundler Gem Tasks","source":"@site/docs/ruby/creating_gems/expert/automated_release_pipeline.md","sourceDirName":"ruby/creating_gems/expert","slug":"/ruby/creating_gems/expert/automated_release_pipeline","permalink":"/keep-being-human-dev/docs/ruby/creating_gems/expert/automated_release_pipeline","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/creating_gems/expert/automated_release_pipeline.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"initialize_gem_skeleton","permalink":"/keep-being-human-dev/docs/ruby/creating_gems/beginner/initialize_gem_skeleton"},"next":{"title":"custom_gem_scaffold","permalink":"/keep-being-human-dev/docs/ruby/creating_gems/expert/custom_gem_scaffold"}}');var a=t(23420),r=t(65404);const i={},u=void 0,o={},l=[{value:"\ud83e\udd16 Automating Releases with GitHub Actions and Bundler Gem Tasks",id:"-automating-releases-with-github-actions-and-bundler-gem-tasks",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-automating-releases-with-github-actions-and-bundler-gem-tasks",children:"\ud83e\udd16 Automating Releases with GitHub Actions and Bundler Gem Tasks"}),"\n",(0,a.jsxs)(n.p,{children:["Implement a CI pipeline that tags, builds, signs, and pushes gems automatically on ",(0,a.jsx)(n.code,{children:"v*"})," tags. Combine ",(0,a.jsx)(n.code,{children:"bundler/gem_tasks"})," with a minimal GitHub Actions workflow to ensure atomic releases, CHANGELOG updates, and GPG signing for integrity."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/release.yml\nname: Release Gem\non:\n  push:\n    tags:\n      - 'v*'\njobs:\n  release:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: '3.x'\n      - run: gem install bundler\n      - run: bundle install\n      - run: bundle exec rake build\n      - run: |\n          GPG_KEY=$(echo \"$GPG_PRIVATE_KEY\" | base64 -d)\n          echo \"$GPG_KEY\" | gpg --import\n          gem push pkg/*.gem --key MyKey\n        env:\n          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}\n      - run: bundle exec rake changelog:release\n        # Assumes you have a Rake task to append release notes\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>u});var s=t(36672);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);