"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[4237],{65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>r});var t=a(36672);const s={},d=t.createContext(s);function i(e){const n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(d.Provider,{value:n},e.children)}},87114:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/date_time/advanced/business_days_enumeration","title":"business_days_enumeration","description":"\ud83d\ude80 Enumerating Business Days with Custom Holiday Calendar","source":"@site/docs/ruby/date_time/advanced/business_days_enumeration.md","sourceDirName":"ruby/date_time/advanced","slug":"/ruby/date_time/advanced/business_days_enumeration","permalink":"/keep-being-human-dev/docs/ruby/date_time/advanced/business_days_enumeration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/date_time/advanced/business_days_enumeration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"range_iteration_step","permalink":"/keep-being-human-dev/docs/ruby/data_types/middle/range_iteration_step"},"next":{"title":"custom_date_parsing","permalink":"/keep-being-human-dev/docs/ruby/date_time/advanced/custom_date_parsing"}}');var s=a(23420),d=a(65404);const i={},r=void 0,o={},u=[{value:"\ud83d\ude80 Enumerating Business Days with Custom Holiday Calendar",id:"-enumerating-business-days-with-custom-holiday-calendar",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-enumerating-business-days-with-custom-holiday-calendar",children:"\ud83d\ude80 Enumerating Business Days with Custom Holiday Calendar"}),"\n",(0,s.jsxs)(n.p,{children:["Generate a range of business days by filtering out weekends and custom holidays. Using Ruby\u2019s range and ",(0,s.jsx)(n.code,{children:"#select"})," makes the logic declarative and thread\u2011safe."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"require 'date'\n\ndef business_days(start_date, end_date, holidays = [])\n  (start_date..end_date).select do |d|\n    (1..5).cover?(d.wday) && !holidays.include?(d)\n  end\nend\n\nholidays = [Date.new(2022,12,25), Date.new(2023,1,1)]\nrange    = business_days(Date.new(2022,12,20), Date.new(2023,1,5), holidays)\nputs range\n# => [2022-12-20, ..., 2022-12-23, 2022-12-26, ..., 2022-12-30, 2023-01-02, ..., 2023-01-05]\n"})})]})}function l(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);