"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[82557],{35365:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping","title":"multi_tenant_policy_scoping","description":"\ud83d\ude80 Enforce Multi-Tenant Authorization with Pundit Scopes","source":"@site/docs/rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping.md","sourceDirName":"rails/authentication_and_authorization/advanced","slug":"/rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"jwt_refresh_token_rotation","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/jwt_refresh_token_rotation"},"next":{"title":"pundit_policy_caching","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/pundit_policy_caching"}}');var i=t(23420),o=t(65404);const r={},c=void 0,s={},u=[{value:"\ud83d\ude80 Enforce Multi-Tenant Authorization with Pundit Scopes",id:"-enforce-multi-tenant-authorization-with-pundit-scopes",level:2}];function d(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"-enforce-multi-tenant-authorization-with-pundit-scopes",children:"\ud83d\ude80 Enforce Multi-Tenant Authorization with Pundit Scopes"}),"\n",(0,i.jsx)(e.p,{children:"For SaaS applications, isolating each tenant\u2019s data at the policy scope level prevents unauthorized cross\u2011tenant access. By injecting the current tenant into your Pundit policies and default scopes, you ensure all queries are automatically filtered."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ruby",children:"# app/controllers/application_controller.rb\nclass ApplicationController < ActionController::Base\n  before_action :set_current_tenant\n\n  def set_current_tenant\n    @current_tenant = Tenant.find_by!(subdomain: request.subdomain)\n  end\n\n  def pundit_user\n    OpenStruct.new(user: current_user, tenant: @current_tenant)\n  end\nend\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ruby",children:"# app/policies/application_policy.rb\nclass ApplicationPolicy\n  attr_reader :user, :record, :tenant\n\n  def initialize(pundit_user, record)\n    @user = pundit_user.user\n    @tenant = pundit_user.tenant\n    @record = record\n  end\n\n  class Scope\n    def resolve\n      scope.where(tenant_id: tenant.id)\n    end\n  end\nend\n"})}),"\n",(0,i.jsxs)(e.p,{children:["This setup enforces tenant\u2011based scoping globally, so every ",(0,i.jsx)(e.code,{children:"policy_scope(Model)"})," call automatically filters by ",(0,i.jsx)(e.code,{children:"tenant_id"}),"."]})]})}function l(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},65404:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var a=t(36672);const i={},o=a.createContext(i);function r(n){const e=a.useContext(o);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),a.createElement(o.Provider,{value:e},n.children)}}}]);