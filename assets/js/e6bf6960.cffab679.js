"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[92435],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>m});var i=t(36672);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},79667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>m,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/method_missing/beginner/method_missing_dynamic_attributes","title":"method_missing_dynamic_attributes","description":"\u2699\ufe0f Creating Dynamic Attributes","source":"@site/docs/ruby/method_missing/beginner/method_missing_dynamic_attributes.md","sourceDirName":"ruby/method_missing/beginner","slug":"/ruby/method_missing/beginner/method_missing_dynamic_attributes","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_dynamic_attributes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/beginner/method_missing_dynamic_attributes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_basic_setup","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_basic_setup"},"next":{"title":"method_missing_forward_to_super","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_forward_to_super"}}');var s=t(23420),r=t(65404);const a={},m=void 0,o={},d=[{value:"\u2699\ufe0f Creating Dynamic Attributes",id:"\ufe0f-creating-dynamic-attributes",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-creating-dynamic-attributes",children:"\u2699\ufe0f Creating Dynamic Attributes"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"method_missing"})," to dynamically handle getters and setters without defining each attribute. Pair it with a hash to store values. This pattern mimics OpenStruct in a simplified form."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"class DynamicStruct\n  def initialize\n    @attributes = {}\n  end\n\n  def method_missing(name, *args)\n    name_str = name.to_s\n    if name_str.end_with?('=')\n      @attributes[name_str.chop.to_sym] = args.first\n    elsif @attributes.key?(name)\n      @attributes[name]\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, include_private = false)\n    name.to_s.end_with?('=') || @attributes.key?(name) || super\n  end\nend\n\nperson = DynamicStruct.new\nperson.name = 'Alice'\nputs person.name  # => \"Alice\"\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);