"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[67852],{29735:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"rails/assets/expert/inline_critical_css","title":"inline_critical_css","description":"\ud83c\udfa8 Inline Critical CSS on Precompile","source":"@site/docs/rails/assets/expert/inline_critical_css.md","sourceDirName":"rails/assets/expert","slug":"/rails/assets/expert/inline_critical_css","permalink":"/keep-being-human-dev/docs/rails/assets/expert/inline_critical_css","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/assets/expert/inline_critical_css.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"http_cache_invalidation","permalink":"/keep-being-human-dev/docs/rails/assets/expert/http_cache_invalidation"},"next":{"title":"webpack_bundle_splitting","permalink":"/keep-being-human-dev/docs/rails/assets/expert/webpack_bundle_splitting"}}');var s=t(23420),c=t(65404);const a={},r=void 0,l={},o=[{value:"\ud83c\udfa8 Inline Critical CSS on Precompile",id:"-inline-critical-css-on-precompile",level:2}];function p(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"-inline-critical-css-on-precompile",children:"\ud83c\udfa8 Inline Critical CSS on Precompile"}),"\n",(0,s.jsxs)(i.p,{children:["Extract and inline above-the-fold CSS during the ",(0,s.jsx)(i.code,{children:"assets:precompile"})," task to reduce render-blocking requests. This example uses the ",(0,s.jsx)(i.code,{children:"critical"})," gem in a custom Rake task to analyze HTML and embed necessary styles."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ruby",children:"# lib/tasks/critical_css.rake\nnamespace :assets do\n  desc 'Inline critical CSS into application layout'\n  task inline_critical: :environment do\n    require 'critical'\n    css = File.read(Rails.root.join('public','assets','application.css'))\n    critical = Critical.process(html: File.read('app/views/layouts/application.html.erb'),\n                                css: css, width: 1300, height: 900)\n    layout = Rails.root.join('app','views','layouts','application.html.erb')\n    content = File.read(layout).sub('\x3c!-- inline-critical-css --\x3e', \"<style>#{critical.css}</style>\")\n    File.write(layout, content)\n    puts 'Critical CSS inlined!'\n  end\nend\n"})})]})}function d(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var n=t(36672);const s={},c=n.createContext(s);function a(e){const i=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(c.Provider,{value:i},e.children)}}}]);