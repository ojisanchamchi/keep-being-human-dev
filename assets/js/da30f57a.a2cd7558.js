"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43392],{11589:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/active_record_associations/beginner/has_many_through_association","title":"has_many_through_association","description":"\ud83d\udd17\u27a1\ufe0f Use has_many :through for Rich Join Models","source":"@site/docs/rails/active_record_associations/beginner/has_many_through_association.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/has_many_through_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_many_through_association","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/has_many_through_association.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"has_many_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_many_association"},"next":{"title":"has_one_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_one_association"}}');var a=o(23420),t=o(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udd17\u27a1\ufe0f Use <code>has_many :through</code> for Rich Join Models",id:"\ufe0f-use-has_many-through-for-rich-join-models",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"\ufe0f-use-has_many-through-for-rich-join-models",children:["\ud83d\udd17\u27a1\ufe0f Use ",(0,a.jsx)(n.code,{children:"has_many :through"})," for Rich Join Models"]}),"\n",(0,a.jsxs)(n.p,{children:["When you need extra data on the join, use ",(0,a.jsx)(n.code,{children:"has_many :through"})," with a join model. This offers callbacks, validations, and extra attributes."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# app/models/appointment.rb\nclass Appointment < ApplicationRecord\n  belongs_to :doctor\n  belongs_to :patient\nend\n\n# app/models/doctor.rb\nclass Doctor < ApplicationRecord\n  has_many :appointments\n  has_many :patients, through: :appointments\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now ",(0,a.jsx)(n.code,{children:"doctor.patients"})," returns all patients, and you can store appointment details on the join record."]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var s=o(36672);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);