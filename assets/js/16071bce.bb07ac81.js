"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[45548],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(36672);const a={},c=s.createContext(a);function r(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(c.Provider,{value:n},e.children)}},68682:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/ranges/advanced/custom_object_ranges","title":"custom_object_ranges","description":"\ud83e\udde9 Ranges with Custom Objects","source":"@site/docs/ruby/ranges/advanced/custom_object_ranges.md","sourceDirName":"ruby/ranges/advanced","slug":"/ruby/ranges/advanced/custom_object_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/advanced/custom_object_ranges","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/ranges/advanced/custom_object_ranges.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"stackprof_sampling","permalink":"/keep-being-human-dev/docs/ruby/profiling/middle/stackprof_sampling"},"next":{"title":"infinite_beginless_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/advanced/infinite_beginless_ranges"}}');var a=t(23420),c=t(65404);const r={},o=void 0,i={},d=[{value:"\ud83e\udde9 Ranges with Custom Objects",id:"-ranges-with-custom-objects",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-ranges-with-custom-objects",children:"\ud83e\udde9 Ranges with Custom Objects"}),"\n",(0,a.jsxs)(n.p,{children:["By defining ",(0,a.jsx)(n.code,{children:"succ"})," and ",(0,a.jsx)(n.code,{children:"<=>"}),", you can create meaningful ranges of any class. Ruby will call ",(0,a.jsx)(n.code,{children:"succ"})," to walk the sequence and use ",(0,a.jsx)(n.code,{children:"<=>"})," to test bounds."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'class Point\n  include Comparable\n  attr_reader :x, :y\n\n  def initialize(x, y)\n    @x, @y = x, y\n  end\n\n  def succ\n    Point.new(x + 1, y + 1)\n  end\n\n  def <=>(other)\n    x <=> other.x\n  end\n\n  def to_s\n    "Point(#{x},#{y})"\n  end\nend\n\nrange = Point.new(0,0)..Point.new(3,3)\nrange.each { |pt| puts pt }  # prints Point(0,0) \u2192 Point(1,1) \u2192 ... \u2192 Point(3,3)\n'})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);