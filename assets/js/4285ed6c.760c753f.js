"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38370],{55225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>p,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"ruby/tempfiles/advanced/encrypted_tempfile_openssl","title":"encrypted_tempfile_openssl","description":"\ud83d\udd12 Encrypted Tempfile with OpenSSL","source":"@site/docs/ruby/tempfiles/advanced/encrypted_tempfile_openssl.md","sourceDirName":"ruby/tempfiles/advanced","slug":"/ruby/tempfiles/advanced/encrypted_tempfile_openssl","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/advanced/encrypted_tempfile_openssl","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/tempfiles/advanced/encrypted_tempfile_openssl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"atomic_tempfile_replacement","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/advanced/atomic_tempfile_replacement"},"next":{"title":"tempfile_basic_creation","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/beginner/tempfile_basic_creation"}}');var i=t(23420),s=t(65404);const p={},c=void 0,a={},o=[{value:"\ud83d\udd12 Encrypted Tempfile with OpenSSL",id:"-encrypted-tempfile-with-openssl",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-encrypted-tempfile-with-openssl",children:"\ud83d\udd12 Encrypted Tempfile with OpenSSL"}),"\n",(0,i.jsxs)(n.p,{children:["For sensitive data you can write to an in-memory Tempfile (e.g., ",(0,i.jsx)(n.code,{children:"/dev/shm"}),") and encrypt on the fly using OpenSSL ",(0,i.jsx)(n.code,{children:"Cipher"}),". This avoids plaintext touching disk and auto\u2010cleans on process exit. Manage your encryption key and IV securely (e.g., via ENV vars or a secrets manager)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"require 'tempfile'\nrequire 'openssl'\n\ncipher = OpenSSL::Cipher.new('aes-256-cbc')\ncipher.encrypt\nkey = cipher.random_key\niv  = cipher.random_iv\n\nplaintext = \"Very secret information\"\n\n# Use a RAM-backed dir to avoid disk persistence\nTempfile.create(['secret', '.bin'], '/dev/shm') do |temp|\n  temp.binmode\n  encrypted_data = cipher.update(plaintext) + cipher.final\n  temp.write(encrypted_data)\n  temp.flush\n  temp.rewind\n\n  # Pass encrypted temp file to another process\n  system('secure_processor', temp.path)\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>p,x:()=>c});var r=t(36672);const i={},s=r.createContext(i);function p(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:p(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);