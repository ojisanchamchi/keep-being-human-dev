"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43179],{2474:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/logging/expert/implement_correlation_id_tracing","title":"implement_correlation_id_tracing","description":"\ud83d\udd17 Implement Correlation IDs for Distributed Tracing","source":"@site/docs/rails/logging/expert/implement_correlation_id_tracing.md","sourceDirName":"rails/logging/expert","slug":"/rails/logging/expert/implement_correlation_id_tracing","permalink":"/keep-being-human-dev/docs/rails/logging/expert/implement_correlation_id_tracing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/expert/implement_correlation_id_tracing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"enhance_lograge_custom_payloads","permalink":"/keep-being-human-dev/docs/rails/logging/expert/enhance_lograge_custom_payloads"},"next":{"title":"instrument_performance_with_notifications","permalink":"/keep-being-human-dev/docs/rails/logging/expert/instrument_performance_with_notifications"}}');var i=r(23420),a=r(65404);const o={},s=void 0,c={},l=[{value:"\ud83d\udd17 Implement Correlation IDs for Distributed Tracing",id:"-implement-correlation-ids-for-distributed-tracing",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-implement-correlation-ids-for-distributed-tracing",children:"\ud83d\udd17 Implement Correlation IDs for Distributed Tracing"}),"\n",(0,i.jsxs)(n.p,{children:["Inject a unique correlation ID into every request to trace execution across services and background jobs. Use a Rack middleware to generate or propagate an ",(0,i.jsx)(n.code,{children:"X-Request-ID"}),", store it in ",(0,i.jsx)(n.code,{children:"RequestStore"}),", and tag all log entries automatically."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/correlation_id_middleware.rb\nclass CorrelationIdMiddleware\n  def initialize(app)\n    @app = app\n  end\n\n  def call(env)\n    request_id = env['HTTP_X_REQUEST_ID'] || SecureRandom.uuid\n    RequestStore.store[:request_id] = request_id\n    Rails.logger.tagged(request_id) { @app.call(env) }\n  ensure\n    RequestStore.clear!\n  end\nend\n\nRails.application.config.middleware.insert_before Rails::Rack::Logger, CorrelationIdMiddleware\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# anywhere in your code\nRails.logger.info("User created", user_id: current_user.id)\n# => [d290f1ee-6c54-4b01-90e6-d701748f0851] INFO -- : User created {:user_id=>42}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(36672);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);