"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77483],{47904:(e,c,n)=>{n.r(c),n.d(c,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"rails/active_record_callbacks/middle/callbacks_in_concerns","title":"callbacks_in_concerns","description":"\ud83d\udcc2 Extract Callbacks into Concerns","source":"@site/docs/rails/active_record_callbacks/middle/callbacks_in_concerns.md","sourceDirName":"rails/active_record_callbacks/middle","slug":"/rails/active_record_callbacks/middle/callbacks_in_concerns","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/callbacks_in_concerns","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/middle/callbacks_in_concerns.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"callback_ordering","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/callback_ordering"},"next":{"title":"conditional_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/conditional_callbacks"}}');var r=n(23420),t=n(65404);const l={},s=void 0,o={},i=[{value:"\ud83d\udcc2 Extract Callbacks into Concerns",id:"-extract-callbacks-into-concerns",level:2}];function d(e){const c={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(c.h2,{id:"-extract-callbacks-into-concerns",children:"\ud83d\udcc2 Extract Callbacks into Concerns"}),"\n",(0,r.jsx)(c.p,{children:"Keep models clean by moving related callbacks into a module concern, promoting reuse and better organization across multiple models."}),"\n",(0,r.jsx)(c.pre,{children:(0,r.jsx)(c.code,{className:"language-ruby",children:"# app/models/concerns/trackable.rb\nmodule Trackable\n  extend ActiveSupport::Concern\n\n  included do\n    before_update :track_changes\n  end\n\n  private\n\n  def track_changes\n    AuditLog.create!(record: self, changes: saved_changes)\n  end\nend\n\n# app/models/post.rb\nclass Post < ApplicationRecord\n  include Trackable\nend\n"})}),"\n",(0,r.jsxs)(c.p,{children:["This way, any model including ",(0,r.jsx)(c.code,{children:"Trackable"})," will automatically get its update operations audited."]})]})}function u(e={}){const{wrapper:c}={...(0,t.R)(),...e.components};return c?(0,r.jsx)(c,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,c,n)=>{n.d(c,{R:()=>l,x:()=>s});var a=n(36672);const r={},t=a.createContext(r);function l(e){const c=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(c):{...c,...e}},[c,e])}function s(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(t.Provider,{value:c},e.children)}}}]);