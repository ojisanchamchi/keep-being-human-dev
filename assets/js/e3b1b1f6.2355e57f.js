"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[6471],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var a=t(36672);const r={},c=a.createContext(r);function i(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(c.Provider,{value:n},e.children)}},74576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"rails/performance/advanced/http_caching_with_etag","title":"http_caching_with_etag","description":"\ud83d\udcc8 HTTP Caching with ETag and Freshness","source":"@site/docs/rails/performance/advanced/http_caching_with_etag.md","sourceDirName":"rails/performance/advanced","slug":"/rails/performance/advanced/http_caching_with_etag","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/http_caching_with_etag","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/advanced/http_caching_with_etag.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"db_connection_pool_tuning","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/db_connection_pool_tuning"},"next":{"title":"multiple_db_read_routing","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/multiple_db_read_routing"}}');var r=t(23420),c=t(65404);const i={},s=void 0,d={},o=[{value:"\ud83d\udcc8 HTTP Caching with ETag and Freshness",id:"-http-caching-with-etag-and-freshness",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-http-caching-with-etag-and-freshness",children:"\ud83d\udcc8 HTTP Caching with ETag and Freshness"}),"\n",(0,r.jsxs)(n.p,{children:["Leverage ETag and ",(0,r.jsx)(n.code,{children:"Last-Modified"})," headers to enable client-side caching and reduce server load. Use ",(0,r.jsx)(n.code,{children:"fresh_when"})," or ",(0,r.jsx)(n.code,{children:"stale?"})," in controllers to automatically set these headers and return a ",(0,r.jsx)(n.code,{children:"304 Not Modified"})," when appropriate."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"class ArticlesController < ApplicationController\n  def show\n    @article = Article.find(params[:id])\n    # Sets ETag and Last-Modified based on record\n    fresh_when(etag: @article.cache_key_with_version, last_modified: @article.updated_at)\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);