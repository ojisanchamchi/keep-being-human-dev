"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[16049],{36285:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/security/expert/strict_cors_dynamic_origins","title":"strict_cors_dynamic_origins","description":"\ud83c\udf10 Strict CORS with Dynamic Origins","source":"@site/docs/rails/security/expert/strict_cors_dynamic_origins.md","sourceDirName":"rails/security/expert","slug":"/rails/security/expert/strict_cors_dynamic_origins","permalink":"/keep-being-human-dev/docs/rails/security/expert/strict_cors_dynamic_origins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/security/expert/strict_cors_dynamic_origins.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"safe_redirect_whitelist","permalink":"/keep-being-human-dev/docs/rails/security/expert/safe_redirect_whitelist"},"next":{"title":"timing_attack_secure_compare","permalink":"/keep-being-human-dev/docs/rails/security/expert/timing_attack_secure_compare"}}');var n=i(23420),s=i(65404);const c={},o=void 0,a={},d=[{value:"\ud83c\udf10 Strict CORS with Dynamic Origins",id:"-strict-cors-with-dynamic-origins",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-strict-cors-with-dynamic-origins",children:"\ud83c\udf10 Strict CORS with Dynamic Origins"}),"\n",(0,n.jsxs)(t.p,{children:["Open CORS rules can expose your API to unauthorized origins. Use ",(0,n.jsx)(t.code,{children:"rack-cors"})," with a dynamic lambda that validates each request\u2019s ",(0,n.jsx)(t.code,{children:"Origin"})," against your own source-of-truth (DB, ENV, etc.)."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# config/initializers/cors.rb\nRails.application.config.middleware.insert_before 0, Rack::Cors do\n  allow do\n    origins ->(source, _env) { AllowedOriginList.include?(source) }\n    resource '/api/*',\n      headers: :any,\n      methods: [:get, :post, :patch, :delete, :options],\n      credentials: true\n  end\nend\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"AllowedOriginList"})," can be a Redis-backed set or ENV lookup that you maintain separately from code."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>o});var r=i(36672);const n={},s=r.createContext(n);function c(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);