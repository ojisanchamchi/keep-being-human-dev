"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[48074],{44500:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"ruby/arrays/expert/binary_packing_with_pack_unpack.md","title":"binary_packing_with_pack_unpack.md","description":"\ud83d\udce6 Binary Packing with pack/unpack","source":"@site/docs/ruby/arrays/expert/binary_packing_with_pack_unpack.md.md","sourceDirName":"ruby/arrays/expert","slug":"/ruby/arrays/expert/binary_packing_with_pack_unpack.md","permalink":"/keep-being-human-dev/docs/ruby/arrays/expert/binary_packing_with_pack_unpack.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/expert/binary_packing_with_pack_unpack.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"select_filter","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/select_filter"},"next":{"title":"bitset_array_representation.md","permalink":"/keep-being-human-dev/docs/ruby/arrays/expert/bitset_array_representation.md"}}');var t=a(23420),c=a(65404);const i={},s=void 0,p={},o=[{value:"\ud83d\udce6 Binary Packing with pack/unpack",id:"-binary-packing-with-packunpack",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-binary-packing-with-packunpack",children:"\ud83d\udce6 Binary Packing with pack/unpack"}),"\n",(0,t.jsx)(n.p,{children:"Encode and decode numerical arrays efficiently by packing elements into compact binary strings, reducing memory and accelerating bulk I/O. This approach is ideal for streaming data to C extensions or binary protocols."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# Pack array of floats (network byte order)\nfloats = [3.14, 2.71, 1.41]\nbinary = floats.pack('G*')\n# Unpack back to floats\ndecoded = binary.unpack('G*')\nputs decoded.inspect\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# Pack large integer arrays\nints = (1..1000).to_a\npacked_ints = ints.pack('L*')  # 32-bit unsigned\nunpacked = packed_ints.unpack('L*')\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var r=a(36672);const t={},c=r.createContext(t);function i(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);