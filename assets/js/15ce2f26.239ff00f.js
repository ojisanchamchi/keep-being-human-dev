"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[31237],{9924:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"ruby/syntax/beginner/hash_basics","title":"hash_basics","description":"\ud83d\udd27 Hash Basics","source":"@site/docs/ruby/syntax/beginner/hash_basics.md","sourceDirName":"ruby/syntax/beginner","slug":"/ruby/syntax/beginner/hash_basics","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/hash_basics","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/beginner/hash_basics.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"defining_methods","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/defining_methods"},"next":{"title":"iterating_with_each","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/iterating_with_each"}}');var t=s(23420),r=s(65404);const i={},c=void 0,o={},u=[{value:"\ud83d\udd27 Hash Basics",id:"-hash-basics",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-hash-basics",children:"\ud83d\udd27 Hash Basics"}),"\n",(0,t.jsx)(n.p,{children:"Hashes map unique keys to values and are defined with curly braces. Keys can be symbols or strings, and you access values using bracket notation. They are handy for grouping related data."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'person = { name: "Alice", age: 30 }\nputs person[:name]  # => "Alice"\nperson[:city] = "London"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var a=s(36672);const t={},r=a.createContext(t);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);