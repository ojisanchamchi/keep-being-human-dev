"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50163],{27548:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"ruby/regex/expert/unicode_and_posix_properties","title":"unicode_and_posix_properties","description":"\ud83c\udf10 Master Unicode & POSIX Property Escapes","source":"@site/docs/ruby/regex/expert/unicode_and_posix_properties.md","sourceDirName":"ruby/regex/expert","slug":"/ruby/regex/expert/unicode_and_posix_properties","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/unicode_and_posix_properties","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/expert/unicode_and_posix_properties.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"stringscanner_iterative_scans","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/stringscanner_iterative_scans"},"next":{"title":"anchor_validations","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/anchor_validations"}}');var s=n(23420),o=n(65404);const a={},i=void 0,c={},p=[{value:"\ud83c\udf10 Master Unicode &amp; POSIX Property Escapes",id:"-master-unicode--posix-property-escapes",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-master-unicode--posix-property-escapes",children:"\ud83c\udf10 Master Unicode & POSIX Property Escapes"}),"\n",(0,s.jsxs)(r.p,{children:["Use ",(0,s.jsx)(r.code,{children:"\\p{...}"})," and POSIX classes like ",(0,s.jsx)(r.code,{children:"[:Alpha:]"})," to build robust patterns for international text. Combine script and block properties for granular control."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:'# Match any Greek letter\ngreek = /\\p{Greek}+/u\np "\u03b1\u03b2\u03b3".match?(greek)  # => true\n\n# Match any letter or number from any script\nalnum = /[\\p{L}\\p{N}]+/u\np "\u82f1\u6587123".scan(alnum)  # => ["\u82f1\u6587123"]\n'})}),"\n",(0,s.jsx)(r.p,{children:"POSIX shorthand:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# Match ASCII word chars only\nascii_word = /[[:word:]]+/  # equals [A-Za-z0-9_]\n"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var t=n(36672);const s={},o=t.createContext(s);function a(e){const r=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);