"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[8222],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(36672);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},87366:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/testing/expert/mutant_integration","title":"mutant_integration","description":"\ud83d\udd2a Integrate Mutant for True Mutation Testing","source":"@site/docs/rails/testing/expert/mutant_integration.md","sourceDirName":"rails/testing/expert","slug":"/rails/testing/expert/mutant_integration","permalink":"/keep-being-human-dev/docs/rails/testing/expert/mutant_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/expert/mutant_integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"event_driven_testing","permalink":"/keep-being-human-dev/docs/rails/testing/expert/event_driven_testing"},"next":{"title":"parallel_capybara_tests","permalink":"/keep-being-human-dev/docs/rails/testing/expert/parallel_capybara_tests"}}');var s=n(23420),a=n(65404);const i={},o=void 0,c={},l=[{value:"\ud83d\udd2a Integrate Mutant for True Mutation Testing",id:"-integrate-mutant-for-true-mutation-testing",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-integrate-mutant-for-true-mutation-testing",children:"\ud83d\udd2a Integrate Mutant for True Mutation Testing"}),"\n",(0,s.jsxs)(t.p,{children:["Mutation testing ensures your specs catch unintended code changes by applying mutations and verifying failures. Use ",(0,s.jsx)(t.strong,{children:"mutant-rspec"})," to complement coverage tools and reveal blind spots."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# Gemfile\ngroup :development, :test do\n  gem 'mutant-rspec', require: false\nend\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Configure ",(0,s.jsx)(t.code,{children:".mutant.yml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"requires:\n  - './spec/spec_helper.rb'\nintegration:\n  rspec: true\njobs:\n  - {}\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run mutation analysis:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"bundle exec mutant --include lib --require my_app -r 'MyApp::Runner' -j4 Calculator#add\n"})}),"\n",(0,s.jsx)(t.p,{children:"Example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# lib/calculator.rb\nclass Calculator\n  def add(a, b)\n    a + b\n  end\nend\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# spec/calculator_spec.rb\nRSpec.describe Calculator do\n  it { expect(subject.add(2, 3)).to eq(5) }\nend\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Mutant will try to invert ",(0,s.jsx)(t.code,{children:"+"})," to detect missing edge-case specs, guiding you to write more robust tests."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);