"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[7905],{60205:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_storage/beginner/active_storage_validate","title":"active_storage_validate","description":"\u2705 Validating Attachments","source":"@site/docs/rails/active_storage/beginner/active_storage_validate.md","sourceDirName":"rails/active_storage/beginner","slug":"/rails/active_storage/beginner/active_storage_validate","permalink":"/keep-being-human-dev/docs/rails/active_storage/beginner/active_storage_validate","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_storage/beginner/active_storage_validate.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"active_storage_setup","permalink":"/keep-being-human-dev/docs/rails/active_storage/beginner/active_storage_setup"},"next":{"title":"async_variant_generation","permalink":"/keep-being-human-dev/docs/rails/active_storage/expert/async_variant_generation"}}');var r=t(23420),s=t(65404);const i={},o=void 0,c={},d=[{value:"\u2705 Validating Attachments",id:"-validating-attachments",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-validating-attachments",children:"\u2705 Validating Attachments"}),"\n",(0,r.jsxs)(a.p,{children:["Ensure file types and sizes meet your requirements by adding validations. Using the ",(0,r.jsx)(a.code,{children:"content_type"})," and ",(0,r.jsx)(a.code,{children:"size"})," options prevents unwanted uploads."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:'# app/models/user.rb\nclass User < ApplicationRecord\n  has_one_attached :avatar\n\n  validate :avatar_validation\n\n  private\n\n  def avatar_validation\n    return unless avatar.attached?\n    unless avatar.content_type.in?(%w[image/png image/jpeg])\n      errors.add(:avatar, "must be a PNG or JPG")\n    end\n    if avatar.byte_size > 1.megabyte\n      errors.add(:avatar, "size must be less than 1MB")\n    end\n  end\nend\n'})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,a,t)=>{t.d(a,{R:()=>i,x:()=>o});var n=t(36672);const r={},s=n.createContext(r);function i(e){const a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);