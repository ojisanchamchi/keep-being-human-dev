"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[18067],{65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var a=n(36672);const s={},r=a.createContext(s);function c(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(r.Provider,{value:t},e.children)}},65812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_record/advanced/custom_types_and_attributes_api","title":"custom_types_and_attributes_api","description":"\ud83d\uddc3 Custom Types with Attributes API","source":"@site/docs/rails/active_record/advanced/custom_types_and_attributes_api.md","sourceDirName":"rails/active_record/advanced","slug":"/rails/active_record/advanced/custom_types_and_attributes_api","permalink":"/keep-being-human-dev/docs/rails/active_record/advanced/custom_types_and_attributes_api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/advanced/custom_types_and_attributes_api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"common_table_expressions_cte","permalink":"/keep-being-human-dev/docs/rails/active_record/advanced/common_table_expressions_cte"},"next":{"title":"dynamic_parameterized_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record/advanced/dynamic_parameterized_scopes"}}');var s=n(23420),r=n(65404);const c={},i=void 0,o={},d=[{value:"\ud83d\uddc3 Custom Types with Attributes API",id:"-custom-types-with-attributes-api",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-custom-types-with-attributes-api",children:"\ud83d\uddc3 Custom Types with Attributes API"}),"\n",(0,s.jsx)(t.p,{children:"Define custom types for specialized serialization, coercion, and change tracking. Great for encrypted fields, money, or custom parsing logic."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"class MoneyType < ActiveRecord::Type::Value\n  def cast(value)\n    Monetize.parse(value)\n  end\n  def serialize(value)\n    value.to_s\n  end\nend\n\nclass Product < ApplicationRecord\n  attribute :price, MoneyType.new\nend\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This ensures ",(0,s.jsx)(t.code,{children:"product.price"})," returns a ",(0,s.jsx)(t.code,{children:"Money"})," object, transparently handling input and output."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);