"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[3192],{65404:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>o});var n=r(36672);const t={},a=n.createContext(t);function c(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(a.Provider,{value:s},e.children)}},80591:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"ruby/rspec/middle/rspec_shared_examples.md","title":"rspec_shared_examples.md","description":"\ud83d\udce6 Leveraging shared_examples for DRY Tests","source":"@site/docs/ruby/rspec/middle/rspec_shared_examples.md.md","sourceDirName":"ruby/rspec/middle","slug":"/ruby/rspec/middle/rspec_shared_examples.md","permalink":"/keep-being-human-dev/docs/ruby/rspec/middle/rspec_shared_examples.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/rspec/middle/rspec_shared_examples.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rspec_let_vs_let_bang.md","permalink":"/keep-being-human-dev/docs/ruby/rspec/middle/rspec_let_vs_let_bang.md"},"next":{"title":"marshal_custom_versioning","permalink":"/keep-being-human-dev/docs/ruby/serialization/advanced/marshal_custom_versioning"}}');var t=r(23420),a=r(65404);const c={},o=void 0,d={},i=[{value:"\ud83d\udce6 Leveraging <code>shared_examples</code> for DRY Tests",id:"-leveraging-shared_examples-for-dry-tests",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"-leveraging-shared_examples-for-dry-tests",children:["\ud83d\udce6 Leveraging ",(0,t.jsx)(s.code,{children:"shared_examples"})," for DRY Tests"]}),"\n",(0,t.jsxs)(s.p,{children:["Extract common behaviors with ",(0,t.jsx)(s.code,{children:"shared_examples"})," or ",(0,t.jsx)(s.code,{children:"shared_context"})," to avoid duplication across models or controllers. This keeps your specs concise and ensures consistency when testing similar interfaces. Use ",(0,t.jsx)(s.code,{children:"it_behaves_like"})," within nested ",(0,t.jsx)(s.code,{children:"describe"})," blocks to apply shared tests with custom parameters."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'# spec/support/shared_examples/trackable.rb\nshared_examples "a trackable resource" do |factory|\n  let(:resource) { create(factory) }\n\n  it "increments change log" do\n    expect { resource.track! }.to change { resource.logs.count }.by(1)\n  end\nend\n\n# Usage in model spec\ndescribe Post, type: :model do\n  it_behaves_like "a trackable resource", :post\nend\n'})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);