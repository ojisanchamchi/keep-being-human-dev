"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[45801],{65404:(e,r,s)=>{s.d(r,{R:()=>a,x:()=>c});var n=s(36672);const t={},i=n.createContext(t);function a(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:r},e.children)}},90686:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"sql/postgresql/advanced/recursive_cte_hierarchy","title":"recursive_cte_hierarchy","description":"\ud83c\udf00 Recursive CTE for Hierarchical Queries","source":"@site/docs/sql/postgresql/advanced/recursive_cte_hierarchy.md","sourceDirName":"sql/postgresql/advanced","slug":"/sql/postgresql/advanced/recursive_cte_hierarchy","permalink":"/keep-being-human-dev/docs/sql/postgresql/advanced/recursive_cte_hierarchy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/postgresql/advanced/recursive_cte_hierarchy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"partial_expression_index","permalink":"/keep-being-human-dev/docs/sql/postgresql/advanced/partial_expression_index"},"next":{"title":"upsert_on_conflict","permalink":"/keep-being-human-dev/docs/sql/postgresql/advanced/upsert_on_conflict"}}');var t=s(23420),i=s(65404);const a={},c=void 0,o={},u=[{value:"\ud83c\udf00 Recursive CTE for Hierarchical Queries",id:"-recursive-cte-for-hierarchical-queries",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"-recursive-cte-for-hierarchical-queries",children:"\ud83c\udf00 Recursive CTE for Hierarchical Queries"}),"\n",(0,t.jsx)(r.p,{children:"Dive into recursive Common Table Expressions (CTEs) to efficiently traverse tree-like data such as organizational structures or category hierarchies. Recursive CTEs allow you to build queries that reference their own output, making hierarchical queries concise and performant. Use them to fetch entire subtrees in a single query without multiple round-trips."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sql",children:"WITH RECURSIVE subordinates AS (\n  SELECT id, manager_id, name\n  FROM employees\n  WHERE manager_id IS NULL  -- root nodes\n  UNION ALL\n  SELECT e.id, e.manager_id, e.name\n  FROM employees e\n  JOIN subordinates s ON e.manager_id = s.id\n)\nSELECT * FROM subordinates;\n"})})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);