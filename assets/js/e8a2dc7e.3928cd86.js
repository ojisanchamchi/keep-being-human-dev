"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[90946],{64402:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"ruby/metaprogramming/advanced/method_missing_dispatch","title":"method_missing_dispatch","description":"\u2728 Advanced method_missing dispatch for dynamic APIs","source":"@site/docs/ruby/metaprogramming/advanced/method_missing_dispatch.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/method_missing_dispatch","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/method_missing_dispatch","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/method_missing_dispatch.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"macro_with_included_hook","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/macro_with_included_hook"},"next":{"title":"module_prepend_hooks","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/module_prepend_hooks"}}');var i=a(23420),t=a(65404);const s={},o=void 0,r={},c=[{value:"\u2728 Advanced <code>method_missing</code> dispatch for dynamic APIs",id:"-advanced-method_missing-dispatch-for-dynamic-apis",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"-advanced-method_missing-dispatch-for-dynamic-apis",children:["\u2728 Advanced ",(0,i.jsx)(n.code,{children:"method_missing"})," dispatch for dynamic APIs"]}),"\n",(0,i.jsxs)(n.p,{children:["Override ",(0,i.jsx)(n.code,{children:"method_missing"})," and ",(0,i.jsx)(n.code,{children:"respond_to_missing?"})," to route undefined calls to external services or dynamic handlers. This pattern lets you lazily handle arbitrary methods while still integrating smoothly with reflection."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class DynamicClient\n  def method_missing(name, *args, &block)\n    if valid_endpoint?(name)\n      call_api(name, *args)\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, include_all)\n    valid_endpoint?(name) || super\n  end\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var d=a(36672);const i={},t=d.createContext(i);function s(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);