"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27966],{22242:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"gems/view_component/beginner/view_component_slots","title":"view_component_slots","description":"\ud83e\udde9 Using Slots for Flexible Content Insertion","source":"@site/docs/gems/view_component/beginner/view_component_slots.md","sourceDirName":"gems/view_component/beginner","slug":"/gems/view_component/beginner/view_component_slots","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_slots","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/beginner/view_component_slots.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"view_component_rendering","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_rendering"},"next":{"title":"view_component_testing","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_testing"}}');var s=o(23420),i=o(65404);const r={},c=void 0,a={},d=[{value:"\ud83e\udde9 Using Slots for Flexible Content Insertion",id:"-using-slots-for-flexible-content-insertion",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-using-slots-for-flexible-content-insertion",children:"\ud83e\udde9 Using Slots for Flexible Content Insertion"}),"\n",(0,s.jsx)(n.p,{children:"Slots let you pass blocks of markup or other components into specific regions of your component. This pattern is great for building cards, modals, or list items with customizable parts."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# app/components/card_component.rb\nclass CardComponent < ViewComponent::Base\n  renders_one :header\n  renders_one :body\nend\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-erb",children:"\x3c!-- Usage in a view --\x3e\n<%= render CardComponent.new do |c| %>\n  <% c.header do %>\n    <h2>Card Title</h2>\n  <% end %>\n\n  <% c.body do %>\n    <p>This is the card body content.</p>\n  <% end %>\n<% end %>\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var t=o(36672);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);