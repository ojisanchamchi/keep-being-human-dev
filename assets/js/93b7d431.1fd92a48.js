"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49182],{57305:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"ruby/operators/expert/custom_unary_operator_overloads","title":"custom_unary_operator_overloads","description":"\ud83e\udde9 Advanced Unary Operator Overloading (+@, -@)","source":"@site/docs/ruby/operators/expert/custom_unary_operator_overloads.md","sourceDirName":"ruby/operators/expert","slug":"/ruby/operators/expert/custom_unary_operator_overloads","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/custom_unary_operator_overloads","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/operators/expert/custom_unary_operator_overloads.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bitmask_flags_with_operators","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/bitmask_flags_with_operators"},"next":{"title":"deep_safe_navigation_chaining","permalink":"/keep-being-human-dev/docs/ruby/operators/expert/deep_safe_navigation_chaining"}}');var t=o(23420),a=o(65404);const s={},c=void 0,d={},i=[{value:"\ud83e\udde9 Advanced Unary Operator Overloading (<code>+@</code>, <code>-@</code>)",id:"-advanced-unary-operator-overloading---",level:2}];function p(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.h2,{id:"-advanced-unary-operator-overloading---",children:["\ud83e\udde9 Advanced Unary Operator Overloading (",(0,t.jsx)(r.code,{children:"+@"}),", ",(0,t.jsx)(r.code,{children:"-@"}),")"]}),"\n",(0,t.jsxs)(r.p,{children:["Override unary operators to implement domain\u2011specific semantics, such as vector negation or domain object cloning. Use ",(0,t.jsx)(r.code,{children:"+@"})," and ",(0,t.jsx)(r.code,{children:"-@"})," methods for precise control."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ruby",children:"class Vector\n  attr_reader :coords\n  def initialize(*coords); @coords = coords; end\n\n  def +@   # identity\n    self.class.new(*@coords)\n  end\n\n  def -@\n    self.class.new(*@coords.map(&:-@))\n  end\nend\n\nv = Vector.new(1, -2, 3)\nputs (+v).coords.inspect  # \u21d2 [1, -2, 3]\nputs (-v).coords.inspect  # \u21d2 [-1, 2, -3]\n"})})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},65404:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>c});var n=o(36672);const t={},a=n.createContext(t);function s(e){const r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);