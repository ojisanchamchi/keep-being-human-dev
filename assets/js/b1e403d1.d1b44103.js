"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[7649],{60215:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/active_record_migrations/advanced/materialized_views","title":"materialized_views","description":"\ud83d\udca1 Manage Materialized Views","source":"@site/docs/rails/active_record_migrations/advanced/materialized_views.md","sourceDirName":"rails/active_record_migrations/advanced","slug":"/rails/active_record_migrations/advanced/materialized_views","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/advanced/materialized_views","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_migrations/advanced/materialized_views.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"foreign_key_cascade","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/advanced/foreign_key_cascade"},"next":{"title":"partitioned_tables","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/advanced/partitioned_tables"}}');var n=i(23420),r=i(65404);const s={},d=void 0,c={},o=[{value:"\ud83d\udca1 Manage Materialized Views",id:"-manage-materialized-views",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"-manage-materialized-views",children:"\ud83d\udca1 Manage Materialized Views"}),"\n",(0,n.jsxs)(a.p,{children:["Materialized views can speed up complex queries by caching results. Define them in migrations via ",(0,n.jsx)(a.code,{children:"execute"})," and provide a helper to refresh periodically. Remember to drop the view in down migrations to keep the schema reversible."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"class CreateUserStatsMaterializedView < ActiveRecord::Migration[6.1]\n  def up\n    execute <<-SQL\n      CREATE MATERIALIZED VIEW user_stats AS\n      SELECT user_id, COUNT(*) AS posts_count\n      FROM posts\n      GROUP BY user_id;\n    SQL\n  end\n\n  def down\n    execute 'DROP MATERIALIZED VIEW user_stats;'\n  end\nend\n"})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,a,i)=>{i.d(a,{R:()=>s,x:()=>d});var t=i(36672);const n={},r=t.createContext(n);function s(e){const a=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);