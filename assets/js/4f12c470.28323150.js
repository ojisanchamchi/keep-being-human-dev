"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[34008],{65404:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>r});var a=o(36672);const t={},n=a.createContext(t);function i(e){const s=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(n.Provider,{value:s},e.children)}},84601:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_record_associations/middle/has_many_through","title":"has_many_through","description":"\ud83d\udd17 Using has_many :through for multi-step associations","source":"@site/docs/rails/active_record_associations/middle/has_many_through.md","sourceDirName":"rails/active_record_associations/middle","slug":"/rails/active_record_associations/middle/has_many_through","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/has_many_through","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/middle/has_many_through.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"eager_loading_includes","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/eager_loading_includes"},"next":{"title":"inverse_of","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/inverse_of"}}');var t=o(23420),n=o(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udd17 Using <code>has_many :through</code> for multi-step associations",id:"-using-has_many-through-for-multi-step-associations",level:2}];function h(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"-using-has_many-through-for-multi-step-associations",children:["\ud83d\udd17 Using ",(0,t.jsx)(s.code,{children:"has_many :through"})," for multi-step associations"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"has_many :through"})," association allows you to link models via a join model and work with that join record directly. This is ideal when you need to store extra attributes on the join or customize callbacks on the relationship. Use the join model to validate or query association-specific data efficiently."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"class Author < ApplicationRecord\n  has_many :authorships\n  has_many :books, through: :authorships\nend\n\nclass Authorship < ApplicationRecord\n  belongs_to :author\n  belongs_to :book\n  validates :role, presence: true\nend\n\nclass Book < ApplicationRecord\n  has_many :authorships\n  has_many :authors, through: :authorships\nend\n"})})]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);