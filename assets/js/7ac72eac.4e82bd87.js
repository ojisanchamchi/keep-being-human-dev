"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24422],{33435:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rails/assets/expert/dynamic_asset_host_fallback","title":"dynamic_asset_host_fallback","description":"\ud83d\ude80 Dynamic Asset Host with CDN Failover","source":"@site/docs/rails/assets/expert/dynamic_asset_host_fallback.md","sourceDirName":"rails/assets/expert","slug":"/rails/assets/expert/dynamic_asset_host_fallback","permalink":"/keep-being-human-dev/docs/rails/assets/expert/dynamic_asset_host_fallback","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/assets/expert/dynamic_asset_host_fallback.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_sprockets_processor","permalink":"/keep-being-human-dev/docs/rails/assets/expert/custom_sprockets_processor"},"next":{"title":"http_cache_invalidation","permalink":"/keep-being-human-dev/docs/rails/assets/expert/http_cache_invalidation"}}');var a=t(23420),o=t(65404);const c={},r=void 0,i={},l=[{value:"\ud83d\ude80 Dynamic Asset Host with CDN Failover",id:"-dynamic-asset-host-with-cdn-failover",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-dynamic-asset-host-with-cdn-failover",children:"\ud83d\ude80 Dynamic Asset Host with CDN Failover"}),"\n",(0,a.jsxs)(s.p,{children:["Configure ",(0,a.jsx)(s.code,{children:"ActionController.asset_host"})," as a ",(0,a.jsx)(s.code,{children:"Proc"})," to distribute assets across multiple CDNs with optional health checks. This setup enhances resilience and balances load by hashing the asset path."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"# config/environments/production.rb\nconfig.action_controller.asset_host = Proc.new do |source, request|\n  cdns = ['https://cdn1.example.com', 'https://cdn2.example.com']\n  # Select host based on source hash\n  cdns[Zlib.crc32(source) % cdns.size]\nend\n"})})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>r});var n=t(36672);const a={},o=n.createContext(a);function c(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);