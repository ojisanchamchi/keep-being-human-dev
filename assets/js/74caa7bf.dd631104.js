"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13990],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var r=i(36672);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},84961:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/middleware/beginner/custom_middleware_setup","title":"custom_middleware_setup","description":"\ud83d\ude80 Creating and Registering Custom Middleware","source":"@site/docs/rails/middleware/beginner/custom_middleware_setup.md","sourceDirName":"rails/middleware/beginner","slug":"/rails/middleware/beginner/custom_middleware_setup","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/custom_middleware_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/beginner/custom_middleware_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"cors_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/cors_middleware"},"next":{"title":"insert_middleware_position","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/insert_middleware_position"}}');var t=i(23420),a=i(65404);const s={},d=void 0,o={},l=[{value:"\ud83d\ude80 Creating and Registering Custom Middleware",id:"-creating-and-registering-custom-middleware",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-creating-and-registering-custom-middleware",children:"\ud83d\ude80 Creating and Registering Custom Middleware"}),"\n",(0,t.jsxs)(n.p,{children:["Custom middleware lets you hook into every request before it reaches your controllers. You define a class with an ",(0,t.jsx)(n.code,{children:"initialize"})," and ",(0,t.jsx)(n.code,{children:"call"})," method, then insert it into the middleware stack. This is perfect for lightweight logging, request transformations, or condition checks."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# lib/my_custom_middleware.rb\nclass MyCustomMiddleware\n  def initialize(app)\n    @app = app\n  end\n\n  def call(env)\n    Rails.logger.info \"[MyCustomMiddleware] Request Path: #{env['PATH_INFO']}\"\n    @app.call(env)\n  end\nend\n\n# config/application.rb\nmodule YourApp\n  class Application < Rails::Application\n    # Ensure 'lib' is autoloaded\n    config.autoload_paths << Rails.root.join('lib')\n    # Register your middleware\n    config.middleware.use MyCustomMiddleware\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);