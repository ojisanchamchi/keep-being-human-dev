"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[71183],{16393:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/define_method/beginner/capture_external_variable","title":"capture_external_variable","description":"\ud83e\udde0 Capture External Variables in Your Defined Methods","source":"@site/docs/ruby/define_method/beginner/capture_external_variable.md","sourceDirName":"ruby/define_method/beginner","slug":"/ruby/define_method/beginner/capture_external_variable","permalink":"/keep-being-human-dev/docs/ruby/define_method/beginner/capture_external_variable","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/define_method/beginner/capture_external_variable.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"attribute_getter_setter","permalink":"/keep-being-human-dev/docs/ruby/define_method/beginner/attribute_getter_setter"},"next":{"title":"dynamic_method_creation","permalink":"/keep-being-human-dev/docs/ruby/define_method/beginner/dynamic_method_creation"}}');var a=t(23420),i=t(65404);const o={},d=void 0,s={},u=[{value:"\ud83e\udde0 Capture External Variables in Your Defined Methods",id:"-capture-external-variables-in-your-defined-methods",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-capture-external-variables-in-your-defined-methods",children:"\ud83e\udde0 Capture External Variables in Your Defined Methods"}),"\n",(0,a.jsxs)(n.p,{children:["Blocks passed to ",(0,a.jsx)(n.code,{children:"define_method"})," form a closure, so they capture local variables from the surrounding scope. This is handy for customizing behavior based on variables defined outside."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"class Multiplier\n  def initialize(factor)\n    @factor = factor\n  end\n\n  define_method(:multiply) do |x|\n    x * @factor\n  end\nend\n\nm2 = Multiplier.new(2)\nputs m2.multiply(5)   # => 10\n\nm10 = Multiplier.new(10)\nputs m10.multiply(3)  # => 30\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(36672);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);