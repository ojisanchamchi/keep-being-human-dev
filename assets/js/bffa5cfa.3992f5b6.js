"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72411],{20145:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rails/api_mode/middle/json_serialization","title":"json_serialization","description":"\u2699\ufe0f Optimize JSON Responses with ActiveModel::Serializers","source":"@site/docs/rails/api_mode/middle/json_serialization.md","sourceDirName":"rails/api_mode/middle","slug":"/rails/api_mode/middle/json_serialization","permalink":"/keep-being-human-dev/docs/rails/api_mode/middle/json_serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/api_mode/middle/json_serialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_versioning","permalink":"/keep-being-human-dev/docs/rails/api_mode/middle/api_versioning"},"next":{"title":"asset_caching_strategies","permalink":"/keep-being-human-dev/docs/rails/assets/advanced/asset_caching_strategies"}}');var t=s(23420),r=s(65404);const a={},o=void 0,d={},l=[{value:"\u2699\ufe0f Optimize JSON Responses with ActiveModel::Serializers",id:"\ufe0f-optimize-json-responses-with-activemodelserializers",level:2}];function c(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"\ufe0f-optimize-json-responses-with-activemodelserializers",children:"\u2699\ufe0f Optimize JSON Responses with ActiveModel::Serializers"}),"\n",(0,t.jsx)(i.p,{children:"Use ActiveModel::Serializers to control the JSON structure of your API responses. Define serializers for each resource and customize attributes and associations. This approach ensures consistent and efficient payloads."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:"# app/serializers/post_serializer.rb\nclass PostSerializer < ActiveModel::Serializer\n  attributes :id, :title, :body, :created_at\n  belongs_to :user\n  has_many :comments\nend\n\n# In controller\ndef show\n  post = Post.find(params[:id])\n  render json: post, serializer: PostSerializer\nend\n"})})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>o});var n=s(36672);const t={},r=n.createContext(t);function a(e){const i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);