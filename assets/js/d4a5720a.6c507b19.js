"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[73631],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(36672);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}},67380:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"javascript/stimulus/advanced/controller_mixins","title":"controller_mixins","description":"\ud83e\uddea Controller Mixins for Reusable Behavior","source":"@site/docs/javascript/stimulus/advanced/controller_mixins.md","sourceDirName":"javascript/stimulus/advanced","slug":"/javascript/stimulus/advanced/controller_mixins","permalink":"/keep-being-human-dev/docs/javascript/stimulus/advanced/controller_mixins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/advanced/controller_mixins.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"conditional_controller_activation","permalink":"/keep-being-human-dev/docs/javascript/stimulus/advanced/conditional_controller_activation"},"next":{"title":"dynamic_controller_composition","permalink":"/keep-being-human-dev/docs/javascript/stimulus/advanced/dynamic_controller_composition"}}');var r=t(23420),i=t(65404);const s={},a=void 0,l={},c=[{value:"\ud83e\uddea Controller Mixins for Reusable Behavior",id:"-controller-mixins-for-reusable-behavior",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-controller-mixins-for-reusable-behavior",children:"\ud83e\uddea Controller Mixins for Reusable Behavior"}),"\n",(0,r.jsx)(n.p,{children:"Extract shared logic into mixins to compose controllers without inheritance. Merge behaviors at definition time to keep controllers focused on their core responsibilities."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// mixins/toggleable.js\nexport const Toggleable = Base => class extends Base {\n  toggle() { this.element.classList.toggle("is-active") }\n}\n\n// controllers/menu_controller.js\nimport { Controller } from "@hotwired/stimulus"\nimport { Toggleable } from "../mixins/toggleable"\n\nexport default class extends Toggleable(Controller) {\n  toggleMenu() {\n    this.toggle()\n  }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);