"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61292],{25370:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"rails/controllers/expert/strong_params_dynamic_filters","title":"strong_params_dynamic_filters","description":"\ud83d\udd12 Dynamic Strong Parameters with Custom Filters","source":"@site/docs/rails/controllers/expert/strong_params_dynamic_filters.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/strong_params_dynamic_filters","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/strong_params_dynamic_filters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/strong_params_dynamic_filters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"streaming_action_controller_live","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/streaming_action_controller_live"},"next":{"title":"threading_parallel_requests","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/threading_parallel_requests"}}');var s=t(23420),a=t(65404);const i={},o=void 0,l={},c=[{value:"\ud83d\udd12 Dynamic Strong Parameters with Custom Filters",id:"-dynamic-strong-parameters-with-custom-filters",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-dynamic-strong-parameters-with-custom-filters",children:"\ud83d\udd12 Dynamic Strong Parameters with Custom Filters"}),"\n",(0,s.jsx)(r.p,{children:"For APIs handling varying fields, define permit filters dynamically using lambdas or policy objects. This prevents mass-assignment vulnerabilities while keeping parameter logic declarative and adaptive to user roles or request contexts."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"class UsersController < ApplicationController\n  def create\n    user = User.new(permitted_user_params)\n    user.save!\n    render json: user\n  end\n\n  private\n\n  def permitted_user_params\n    base = %i[name email]\n    base << :admin if current_user.admin?\n    params.require(:user).permit(*base, settings: settings_filter)\n  end\n\n  def settings_filter\n    # Dynamically allow nested keys based on feature flags\n    Feature.enabled?(:advanced_settings) ? {} : []\n  end\nend\n"})})]})}function m(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(36672);const s={},a=n.createContext(s);function i(e){const r=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);