"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[1995],{40971:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record_associations/middle/association_extensions","title":"association_extensions","description":"\ud83d\udce6 Extending Associations with Custom Methods","source":"@site/docs/rails/active_record_associations/middle/association_extensions.md","sourceDirName":"rails/active_record_associations/middle","slug":"/rails/active_record_associations/middle/association_extensions","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/association_extensions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/middle/association_extensions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sti_hierarchical_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/sti_hierarchical_associations"},"next":{"title":"association_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/association_scopes"}}');var i=t(23420),o=t(65404);const a={},c=void 0,r={},d=[{value:"\ud83d\udce6 Extending Associations with Custom Methods",id:"-extending-associations-with-custom-methods",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"-extending-associations-with-custom-methods",children:"\ud83d\udce6 Extending Associations with Custom Methods"}),"\n",(0,i.jsx)(s.p,{children:"You can add custom methods to an association using a block. This creates an extension module scoped to that specific relation, keeping helper logic encapsulated and clean. Extended methods work lazily on the association proxy."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:'class User < ApplicationRecord\n  has_many :events do\n    def upcoming\n      where("start_time > ?", Time.current)\n    end\n  end\nend\n\n# Usage:\nuser.events.upcoming\n'})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>c});var n=t(36672);const i={},o=n.createContext(i);function a(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);