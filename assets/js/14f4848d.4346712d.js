"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[40734],{31491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"rails/active_support/beginner/string_inquiry","title":"string_inquiry","description":"\u2753 Convert Strings to Query Objects with String#inquiry","source":"@site/docs/rails/active_support/beginner/string_inquiry.md","sourceDirName":"rails/active_support/beginner","slug":"/rails/active_support/beginner/string_inquiry","permalink":"/keep-being-human-dev/docs/rails/active_support/beginner/string_inquiry","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_support/beginner/string_inquiry.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"string_inflections","permalink":"/keep-being-human-dev/docs/rails/active_support/beginner/string_inflections"},"next":{"title":"try_method","permalink":"/keep-being-human-dev/docs/rails/active_support/beginner/try_method"}}');var r=n(23420),s=n(65404);const o={},a=void 0,c={},u=[{value:"\u2753 Convert Strings to Query Objects with String#inquiry",id:"-convert-strings-to-query-objects-with-stringinquiry",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-convert-strings-to-query-objects-with-stringinquiry",children:"\u2753 Convert Strings to Query Objects with String#inquiry"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"String#inquiry"})," turns a string into an ",(0,r.jsx)(t.code,{children:"ActiveSupport::StringInquirer"}),", allowing elegant predicate methods. This is useful when comparing status or type values."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'status = "active".inquiry\nstatus.active?     # => true\nstatus.inactive?   # => false\n\n# In a controller:\nif params[:mode].inquiry.production?\n  # production logic\nend\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(36672);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);