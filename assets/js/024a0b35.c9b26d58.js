"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22034],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>u});var r=t(36672);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},75926:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>u,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"gems/faker/middle/faker_unique_generator","title":"faker_unique_generator","description":"\ud83d\udd22 Generating Unique Values with Faker","source":"@site/docs/gems/faker/middle/faker_unique_generator.md","sourceDirName":"gems/faker/middle","slug":"/gems/faker/middle/faker_unique_generator","permalink":"/keep-being-human-dev/docs/gems/faker/middle/faker_unique_generator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/faker/middle/faker_unique_generator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"faker_locale_configuration","permalink":"/keep-being-human-dev/docs/gems/faker/middle/faker_locale_configuration"},"next":{"title":"faker_with_factorybot","permalink":"/keep-being-human-dev/docs/gems/faker/middle/faker_with_factorybot"}}');var a=t(23420),i=t(65404);const s={},u=void 0,o={},c=[{value:"\ud83d\udd22 Generating Unique Values with Faker",id:"-generating-unique-values-with-faker",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-generating-unique-values-with-faker",children:"\ud83d\udd22 Generating Unique Values with Faker"}),"\n",(0,a.jsxs)(n.p,{children:["Faker\u2019s ",(0,a.jsx)(n.code,{children:"UniqueGenerator"})," ensures that sequential calls don\u2019t return duplicates, which is crucial when you seed data that requires unique fields (e.g., emails). Remember to clear the unique registry when you need a fresh sequence in a new context (like different test cases)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Generate 5 unique names\ndef generate_unique_names\n  5.times { puts Faker::UniqueGenerator.unique.name }\nend\n\ngenerate_unique_names\n# => \u201cAlice Smith\u201d, \u201cBob Jones\u201d, ... (all guaranteed unique)\n\n# Reset the unique tracker between test runs or seeding tasks\nFaker::UniqueGenerator.clear\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);