"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[3957],{1439:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"rails/benchmarking/middle/benchmark_ips_usage","title":"benchmark_ips_usage","description":"\u26a1\ufe0f Use Benchmark.ips for Iteration\u2011Per\u2011Second Metrics","source":"@site/docs/rails/benchmarking/middle/benchmark_ips_usage.md","sourceDirName":"rails/benchmarking/middle","slug":"/rails/benchmarking/middle/benchmark_ips_usage","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/benchmark_ips_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/benchmarking/middle/benchmark_ips_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"activerecord_n_plus_one_benchmark","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/activerecord_n_plus_one_benchmark"},"next":{"title":"console_benchmark_measure","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/console_benchmark_measure"}}');var i=r(23420),a=r(65404);const t={},c=void 0,o={},m=[{value:"\u26a1\ufe0f Use Benchmark.ips for Iteration\u2011Per\u2011Second Metrics",id:"\ufe0f-use-benchmarkips-for-iterationpersecond-metrics",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-use-benchmarkips-for-iterationpersecond-metrics",children:"\u26a1\ufe0f Use Benchmark.ips for Iteration\u2011Per\u2011Second Metrics"}),"\n",(0,i.jsxs)(n.p,{children:["For more robust performance profiling, use the ",(0,i.jsx)(n.code,{children:"benchmark-ips"})," gem. It measures how many iterations per second your code can execute, smoothing out noise."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Add to Gemfile: gem 'benchmark-ips'\nrequire 'benchmark/ips'\n\nBenchmark.ips do |x|\n  x.report('string concat +') { 10_000.times { 'a' + 'b' } }\n  x.report('string <<') { 10_000.times { s = ''; s << 'a'; s << 'b' } }\n  x.compare!\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"benchmark-ips"})," runs warm\u2011up and measure phases, then prints relative performance. Use this when you need statistically significant comparisons."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(36672);const i={},a=s.createContext(i);function t(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);