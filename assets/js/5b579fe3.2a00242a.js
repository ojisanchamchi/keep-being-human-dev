"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91587],{65404:(e,n,r)=>{r.d(n,{R:()=>u,x:()=>a});var s=r(36672);const t={},o=s.createContext(t);function u(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:u(e.components),s.createElement(o.Provider,{value:n},e.children)}},80756:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>u,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/numbers/beginner/number_comparison","title":"number_comparison","description":"\ud83d\udd0d Comparing Numbers","source":"@site/docs/ruby/numbers/beginner/number_comparison.md","sourceDirName":"ruby/numbers/beginner","slug":"/ruby/numbers/beginner/number_comparison","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/number_comparison","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/beginner/number_comparison.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"integer_vs_float","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/integer_vs_float"},"next":{"title":"rounding_numbers","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/rounding_numbers"}}');var t=r(23420),o=r(65404);const u={},a=void 0,i={},c=[{value:"\ud83d\udd0d Comparing Numbers",id:"-comparing-numbers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-comparing-numbers",children:"\ud83d\udd0d Comparing Numbers"}),"\n",(0,t.jsxs)(n.p,{children:["Use comparison operators to compare numeric values: greater than (",(0,t.jsx)(n.code,{children:">"}),"), less than (",(0,t.jsx)(n.code,{children:"<"}),"), equal (",(0,t.jsx)(n.code,{children:"=="}),"), not equal (",(0,t.jsx)(n.code,{children:"!="}),"), and the spaceship operator (",(0,t.jsx)(n.code,{children:"<=>"}),") which returns ",(0,t.jsx)(n.code,{children:"-1"}),", ",(0,t.jsx)(n.code,{children:"0"}),", or ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"a = 5\nb = 8\n\nputs a > b     # => false\nputs a < b     # => true\nputs a == b    # => false\nputs a != b    # => true\nputs a <=> b   # => -1       # a is less than b\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);