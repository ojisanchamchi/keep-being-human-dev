"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85417],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(36672);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}},97596:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"ruby/matrix/beginner/matrix_element_access","title":"matrix_element_access","description":"\ud83d\udd0d Accessing and Modifying Matrix Elements","source":"@site/docs/ruby/matrix/beginner/matrix_element_access.md","sourceDirName":"ruby/matrix/beginner","slug":"/ruby/matrix/beginner/matrix_element_access","permalink":"/keep-being-human-dev/docs/ruby/matrix/beginner/matrix_element_access","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/matrix/beginner/matrix_element_access.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"matrix_basic_operations","permalink":"/keep-being-human-dev/docs/ruby/matrix/beginner/matrix_basic_operations"},"next":{"title":"matrix_initialization","permalink":"/keep-being-human-dev/docs/ruby/matrix/beginner/matrix_initialization"}}');var r=t(23420),i=t(65404);const s={},o=void 0,c={},m=[{value:"\ud83d\udd0d Accessing and Modifying Matrix Elements",id:"-accessing-and-modifying-matrix-elements",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-accessing-and-modifying-matrix-elements",children:"\ud83d\udd0d Accessing and Modifying Matrix Elements"}),"\n",(0,r.jsxs)(n.p,{children:["You can read individual elements using ",(0,r.jsx)(n.code,{children:"matrix[row, column]"}),". To transpose or modify values, convert the matrix to an array of arrays, change the data, then turn it back into a matrix."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'matrix'\nm = Matrix[[10, 20], [30, 40]]\n\n# Read element at row 0, column 1:\nelem = m[0, 1]  # => 20\n\n# Convert to nested arrays to modify:\ndata = m.to_a\ndata[1][0] = 99\n\n# Back to matrix:\nm2 = Matrix.rows(data)\nputs m2\n# => Matrix[\n#      [10, 20],\n#      [99, 40]\n#    ]\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);