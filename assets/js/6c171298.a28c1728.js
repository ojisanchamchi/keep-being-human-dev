"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[96484],{12671:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ruby/regex/middle/named_capture_groups","title":"named_capture_groups","description":"\ud83c\udff7\ufe0f Leverage Named Capture Groups","source":"@site/docs/ruby/regex/middle/named_capture_groups.md","sourceDirName":"ruby/regex/middle","slug":"/ruby/regex/middle/named_capture_groups","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/named_capture_groups","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/middle/named_capture_groups.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"match_data_usage","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/match_data_usage"},"next":{"title":"non_capturing_groups","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/non_capturing_groups"}}');var a=t(23420),d=t(65404);const s={},o=void 0,u={},c=[{value:"\ud83c\udff7\ufe0f Leverage Named Capture Groups",id:"\ufe0f-leverage-named-capture-groups",level:2}];function i(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"\ufe0f-leverage-named-capture-groups",children:"\ud83c\udff7\ufe0f Leverage Named Capture Groups"}),"\n",(0,a.jsxs)(r.p,{children:["Named captures (",(0,a.jsx)(r.code,{children:"(?<name>\u2026)"}),") make your regex more readable and your matches easier to refer to by name instead of index. Access them via ",(0,a.jsx)(r.code,{children:"MatchData#[]"})," or the returned hash."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ruby",children:"pattern = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/\nmd = pattern.match('2023-07-15')\nmd[:year]   # => \"2023\"\nmd['month'] # => \"07\"\n"})}),"\n",(0,a.jsx)(r.p,{children:"Use named groups when you need clarity on which part of the string you captured."})]})}function p(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>o});var n=t(36672);const a={},d=n.createContext(a);function s(e){const r=n.useContext(d);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(d.Provider,{value:r},e.children)}}}]);