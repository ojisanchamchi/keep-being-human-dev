"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86310],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(36672);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},65964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ruby/date_time/beginner/handling_time_zones","title":"handling_time_zones","description":"\ud83c\udf10 Handling Time Zones","source":"@site/docs/ruby/date_time/beginner/handling_time_zones.md","sourceDirName":"ruby/date_time/beginner","slug":"/ruby/date_time/beginner/handling_time_zones","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/handling_time_zones","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/date_time/beginner/handling_time_zones.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"getting_current_date_time","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/getting_current_date_time"},"next":{"title":"parsing_date_strings","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/parsing_date_strings"}}');var r=t(23420),s=t(65404);const a={},o=void 0,d={},c=[{value:"\ud83c\udf10 Handling Time Zones",id:"-handling-time-zones",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-handling-time-zones",children:"\ud83c\udf10 Handling Time Zones"}),"\n",(0,r.jsxs)(n.p,{children:["Working with time zones ensures your app displays correct local times. Use ",(0,r.jsx)(n.code,{children:"Time.now.getlocal"})," or create a ",(0,r.jsx)(n.code,{children:"Time"}),"/",(0,r.jsx)(n.code,{children:"DateTime"})," object with an offset."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# Current time in local zone\ntime_local = Time.now.getlocal\nputs time_local   # => 2023-03-15 10:30:00 -0400\n\n# Create a Time with specific offset\ntime_with_offset = Time.new(2023, 3, 15, 14, 30, 0, "+02:00")\nputs time_with_offset  # => 2023-03-15 14:30:00 +0200\n\n# DateTime with zone\ndt = DateTime.new(2023,3,15,14,30,0,"-05:00")\nputs dt           # => 2023-03-15T14:30:00-05:00\n'})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);