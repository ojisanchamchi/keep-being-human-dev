"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43653],{65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>r});var s=a(36672);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},66910:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/background_jobs/advanced/sidekiq_batches","title":"sidekiq_batches","description":"\ud83d\udce6 Grouping Jobs with Sidekiq Batches and Callbacks","source":"@site/docs/rails/background_jobs/advanced/sidekiq_batches.md","sourceDirName":"rails/background_jobs/advanced","slug":"/rails/background_jobs/advanced/sidekiq_batches","permalink":"/keep-being-human-dev/docs/rails/background_jobs/advanced/sidekiq_batches","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/background_jobs/advanced/sidekiq_batches.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rate_limiting_middleware","permalink":"/keep-being-human-dev/docs/rails/background_jobs/advanced/rate_limiting_middleware"},"next":{"title":"transactional_enqueue","permalink":"/keep-being-human-dev/docs/rails/background_jobs/advanced/transactional_enqueue"}}');var t=a(23420),o=a(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udce6 Grouping Jobs with Sidekiq Batches and Callbacks",id:"-grouping-jobs-with-sidekiq-batches-and-callbacks",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-grouping-jobs-with-sidekiq-batches-and-callbacks",children:"\ud83d\udce6 Grouping Jobs with Sidekiq Batches and Callbacks"}),"\n",(0,t.jsx)(n.p,{children:"Sidekiq Pro's Batches allow coordination of many jobs and execute callbacks when the group finishes. Use them to orchestrate workflows across multiple worker classes."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# app/services/data_import_service.rb\nclass DataImportService\n  def import_all(records)\n    batch = Sidekiq::Batch.new\n    batch.description = 'Importing CSV rows'\n    batch.on(:success, ImportCallback)\n\n    batch.jobs do\n      records.each { |row| ImportRowJob.perform_async(row.to_h) }\n    end\n  end\nend\n\n# app/workers/import_callback.rb\nclass ImportCallback\n  def on_success(status, options)\n    ReportsMailer.import_finished.deliver_now\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This yields atomic workflows, notifying you when all ",(0,t.jsx)(n.code,{children:"ImportRowJob"})," instances complete."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);