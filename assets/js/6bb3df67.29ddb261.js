"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[36549],{65404:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>r});var t=n(36672);const a={},o=t.createContext(a);function d(e){const s=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(o.Provider,{value:s},e.children)}},93710:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/classes_and_modules/beginner/class_methods","title":"class_methods","description":"\ud83c\udff7\ufe0f Create Class Methods","source":"@site/docs/ruby/classes_and_modules/beginner/class_methods.md","sourceDirName":"ruby/classes_and_modules/beginner","slug":"/ruby/classes_and_modules/beginner/class_methods","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/class_methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/beginner/class_methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"class_constants","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/class_constants"},"next":{"title":"extend_for_class_methods","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/extend_for_class_methods"}}');var a=n(23420),o=n(65404);const d={},r=void 0,c={},l=[{value:"\ud83c\udff7\ufe0f Create Class Methods",id:"\ufe0f-create-class-methods",level:2}];function i(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"\ufe0f-create-class-methods",children:"\ud83c\udff7\ufe0f Create Class Methods"}),"\n",(0,a.jsxs)(s.p,{children:["Class methods perform actions related to the class itself instead of individual instances. Prefix the method name with ",(0,a.jsx)(s.code,{children:"self."})," inside the class definition. You can call class methods directly on the class."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"class Calculator\n  def self.add(a, b)\n    a + b\n  end\nend\n\nresult = Calculator.add(5, 3)  # => 8\n"})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}}}]);