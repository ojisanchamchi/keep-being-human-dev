"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[73892],{10528:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"rails/active_record_migrations/advanced/uuid_primary_keys","title":"uuid_primary_keys","description":"\ud83d\udc18 Use UUID Primary Keys","source":"@site/docs/rails/active_record_migrations/advanced/uuid_primary_keys.md","sourceDirName":"rails/active_record_migrations/advanced","slug":"/rails/active_record_migrations/advanced/uuid_primary_keys","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/advanced/uuid_primary_keys","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_migrations/advanced/uuid_primary_keys.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"reversible_data_migrations","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/advanced/reversible_data_migrations"},"next":{"title":"add_column","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/beginner/add_column"}}');var i=r(23420),t=r(65404);const s={},d=void 0,c={},o=[{value:"\ud83d\udc18 Use UUID Primary Keys",id:"-use-uuid-primary-keys",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-use-uuid-primary-keys",children:"\ud83d\udc18 Use UUID Primary Keys"}),"\n",(0,i.jsxs)(n.p,{children:["Switching primary keys to UUIDs can improve sharding and security. Enable the ",(0,i.jsx)(n.code,{children:"pgcrypto"})," extension and set ",(0,i.jsx)(n.code,{children:"id: :uuid"})," when creating tables. You can also change existing tables by enabling the extension and altering the column type with data backfill."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class CreateOrdersWithUuid < ActiveRecord::Migration[6.1]\n  def change\n    enable_extension 'pgcrypto' unless extension_enabled?('pgcrypto')\n    create_table :orders, id: :uuid do |t|\n      t.string :status\n      t.timestamps\n    end\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var a=r(36672);const i={},t=a.createContext(i);function s(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);