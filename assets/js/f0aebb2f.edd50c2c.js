"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61303],{42033:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/irb/expert/magic_commands_extension","title":"magic_commands_extension","description":"\u2728 Extending IRB with Magic Commands","source":"@site/docs/ruby/irb/expert/magic_commands_extension.md","sourceDirName":"ruby/irb/expert","slug":"/ruby/irb/expert/magic_commands_extension","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/magic_commands_extension","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/irb/expert/magic_commands_extension.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"input_preprocessor","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/input_preprocessor"},"next":{"title":"programmatic_irb_control","permalink":"/keep-being-human-dev/docs/ruby/irb/expert/programmatic_irb_control"}}');var o=t(23420),s=t(65404);const i={},a=void 0,c={},d=[{value:"\u2728 Extending IRB with Magic Commands",id:"-extending-irb-with-magic-commands",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-extending-irb-with-magic-commands",children:"\u2728 Extending IRB with Magic Commands"}),"\n",(0,o.jsxs)(n.p,{children:["Implement custom ",(0,o.jsx)(n.code,{children:"%"}),"-prefixed commands (\xe0 la IPython) for repetitive tasks like reloading, schema introspection, or database queries."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'module IRB\n  module ExtendCommandBundle\n    def reload_models\n      Dir["app/models/*.rb"].each { |f| load f }\n      puts "Models reloaded"\n    end\n    def schema(table)\n      ActiveRecord::Base.connection.columns(table).map(&:name)\n    end\n  end\nend\nIRB.conf[:IRB_RC] = proc do |conf|\n  conf.extend IRB::ExtendCommandBundle\nend\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Now, in IRB, run ",(0,o.jsx)(n.code,{children:"reload_models"})," or ",(0,o.jsx)(n.code,{children:"schema('users')"})," as top-level commands without parentheses."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(36672);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);