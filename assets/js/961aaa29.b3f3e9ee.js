"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[20785],{20533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>g,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/logging/middle/json_structured_logging","title":"json_structured_logging","description":"\ud83d\udee0\ufe0f Emit Structured JSON Logs for Easy Parsing","source":"@site/docs/ruby/logging/middle/json_structured_logging.md","sourceDirName":"ruby/logging/middle","slug":"/ruby/logging/middle/json_structured_logging","permalink":"/keep-being-human-dev/docs/ruby/logging/middle/json_structured_logging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/logging/middle/json_structured_logging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_logger_formatter","permalink":"/keep-being-human-dev/docs/ruby/logging/middle/custom_logger_formatter"},"next":{"title":"tagged_logging","permalink":"/keep-being-human-dev/docs/ruby/logging/middle/tagged_logging"}}');var s=n(23420),o=n(65404);const i={},g=void 0,a={},d=[{value:"\ud83d\udee0\ufe0f Emit Structured JSON Logs for Easy Parsing",id:"\ufe0f-emit-structured-json-logs-for-easy-parsing",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"\ufe0f-emit-structured-json-logs-for-easy-parsing",children:"\ud83d\udee0\ufe0f Emit Structured JSON Logs for Easy Parsing"}),"\n",(0,s.jsx)(t.p,{children:"JSON-formatted logs integrate seamlessly with log management systems like ELK or Datadog. Using a structured logger makes it trivial to query specific fields such as user IDs or transaction statuses."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'require \'json\'\nlogger = Logger.new(STDOUT)\nlogger.formatter = proc do |severity, datetime, progname, msg|\n  JSON.dump({\n    severity: severity,\n    time: datetime.iso8601,\n    progname: progname,\n    message: msg\n  }) + "\\n"\nend\n\nlogger.info("Payment processed", user_id: current_user.id, amount: order.total)\n'})}),"\n",(0,s.jsx)(t.p,{children:"This approach yields one JSON object per line, enabling advanced log searches and metric extraction."})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>g});var r=n(36672);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function g(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);