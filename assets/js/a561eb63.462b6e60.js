"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23242],{16245:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"ruby/syntax/advanced/keyword_splat_destructuring","title":"keyword_splat_destructuring","description":"\ud83c\udf92 Destructure Keyword Args with Splat","source":"@site/docs/ruby/syntax/advanced/keyword_splat_destructuring.md","sourceDirName":"ruby/syntax/advanced","slug":"/ruby/syntax/advanced/keyword_splat_destructuring","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/keyword_splat_destructuring","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/advanced/keyword_splat_destructuring.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"flip_flop_operator","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/flip_flop_operator"},"next":{"title":"numbered_block_parameters","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/numbered_block_parameters"}}');var s=r(23420),a=r(65404);const d={},c=void 0,o={},u=[{value:"\ud83c\udf92 Destructure Keyword Args with Splat",id:"-destructure-keyword-args-with-splat",level:2}];function i(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-destructure-keyword-args-with-splat",children:"\ud83c\udf92 Destructure Keyword Args with Splat"}),"\n",(0,s.jsxs)(t.p,{children:["In Ruby 2.7+, you can capture and destructure unknown keyword arguments using ",(0,s.jsx)(t.code,{children:"**rest"}),", and even apply pattern matching to them. This simplifies complex interfaces that evolve over time."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'def process_data(id:, **rest)\n  case rest\n  in { user_name:, created_at: }\n    puts "ID=#{id}, User=#{user_name}, Created=#{created_at}"\n  else\n    puts "Unknown shape: #{rest.inspect}"\n  end\nend\n\nprocess_data(id: 1, user_name: "Bob", created_at: Time.now)\n'})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>c});var n=r(36672);const s={},a=n.createContext(s);function d(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);