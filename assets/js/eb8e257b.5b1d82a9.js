"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[66391],{30406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"ruby/date_time/middle/handle_time_zones","title":"handle_time_zones","description":"\ud83c\udf10 Managing Time Zones with ActiveSupport","source":"@site/docs/ruby/date_time/middle/handle_time_zones.md","sourceDirName":"ruby/date_time/middle","slug":"/ruby/date_time/middle/handle_time_zones","permalink":"/keep-being-human-dev/docs/ruby/date_time/middle/handle_time_zones","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/date_time/middle/handle_time_zones.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"format_with_strftime","permalink":"/keep-being-human-dev/docs/ruby/date_time/middle/format_with_strftime"},"next":{"title":"parse_custom_strptime","permalink":"/keep-being-human-dev/docs/ruby/date_time/middle/parse_custom_strptime"}}');var o=n(23420),a=n(65404);const r={},s=void 0,d={},m=[{value:"\ud83c\udf10 Managing Time Zones with ActiveSupport",id:"-managing-time-zones-with-activesupport",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-managing-time-zones-with-activesupport",children:"\ud83c\udf10 Managing Time Zones with ActiveSupport"}),"\n",(0,o.jsx)(t.p,{children:"Keep your app\u2019s times consistent by using Rails\u2019 time zone helpers. Store UTC in the DB, then convert to users\u2019 zones for display."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"# config/application.rb\nt config.time_zone = 'Eastern Time (US & Canada)'\nt config.active_record.default_timezone = :utc\n\n# Converting\nutc_time     = Time.current.utc             # Stored in UTC\nlocal_time   = utc_time.in_time_zone        # => in \"Eastern Time (US & Canada)\"\nputs local_time.strftime('%Y-%m-%d %H:%M %Z')\n\n# Parsing in a zone\nTime.find_zone('Tokyo').parse('2023-06-15 08:00')\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var i=n(36672);const o={},a=i.createContext(o);function r(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);