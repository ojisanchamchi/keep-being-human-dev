"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[21544],{65404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var t=s(36672);const r={},a=t.createContext(r);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(a.Provider,{value:n},e.children)}},72442:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"ruby/hashes/advanced/indifferent_access","title":"indifferent_access","description":"\ud83d\udd11 Indifferent Access with ActiveSupport","source":"@site/docs/ruby/hashes/advanced/indifferent_access.md","sourceDirName":"ruby/hashes/advanced","slug":"/ruby/hashes/advanced/indifferent_access","permalink":"/keep-being-human-dev/docs/ruby/hashes/advanced/indifferent_access","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/advanced/indifferent_access.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"hash_to_proc","permalink":"/keep-being-human-dev/docs/ruby/hashes/advanced/hash_to_proc"},"next":{"title":"nested_transform_keys","permalink":"/keep-being-human-dev/docs/ruby/hashes/advanced/nested_transform_keys"}}');var r=s(23420),a=s(65404);const c={},i=void 0,d={},o=[{value:"\ud83d\udd11 Indifferent Access with ActiveSupport",id:"-indifferent-access-with-activesupport",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-indifferent-access-with-activesupport",children:"\ud83d\udd11 Indifferent Access with ActiveSupport"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"HashWithIndifferentAccess"})," from Rails lets you access keys as strings or symbols interchangeably. It\u2019s ideal when handling params or JSON data from external sources."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'active_support/core_ext/hash/indifferent_access'\n\nh = { 'user_id' => 42, token: 'xyz' }.with_indifferent_access\n\nh[:user_id]   # => 42\nh['token']    # => \"xyz\"\nh.fetch('missing', nil) # => nil\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);