"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64093],{57202:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/encryption/middle/active_record_encryption_config","title":"active_record_encryption_config","description":"\ud83d\udd12 Configuring Active Record Encryption","source":"@site/docs/rails/encryption/middle/active_record_encryption_config.md","sourceDirName":"rails/encryption/middle","slug":"/rails/encryption/middle/active_record_encryption_config","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/active_record_encryption_config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/encryption/middle/active_record_encryption_config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rotate_encryption_keys","permalink":"/keep-being-human-dev/docs/rails/encryption/expert/rotate_encryption_keys"},"next":{"title":"custom_message_encryptor","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/custom_message_encryptor"}}');var r=t(23420),c=t(65404);const o={},s=void 0,a={},d=[{value:"\ud83d\udd12 Configuring Active Record Encryption",id:"-configuring-active-record-encryption",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-configuring-active-record-encryption",children:"\ud83d\udd12 Configuring Active Record Encryption"}),"\n",(0,r.jsxs)(n.p,{children:["Rails\xa07+ ships with built\u2011in Active Record Encryption that you can enable with just a few environment variables. This ensures columns marked with ",(0,r.jsx)(n.code,{children:"encrypts"})," are transparently encrypted at rest."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/application.rb\nmodule MyApp\n  class Application < Rails::Application\n    # Use secure keys stored in ENV or credentials\n    config.active_record.encryption.primary_key        = ENV['RAILS_ENCRYPTION_PRIMARY_KEY']\n    config.active_record.encryption.deterministic_key  = ENV['RAILS_ENCRYPTION_DETERMINISTIC_KEY']\n    config.active_record.encryption.key_derivation_salt = ENV['RAILS_ENCRYPTION_KEY_DERIVATION_SALT']\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After restarting, simply add ",(0,r.jsx)(n.code,{children:"encrypts :sensitive_attribute"})," in your model and Rails will handle encryption, decryption, and attribute querying automatically."]})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(36672);const r={},c=i.createContext(r);function o(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);