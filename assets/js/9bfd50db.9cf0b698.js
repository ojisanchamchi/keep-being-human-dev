"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42217],{65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var i=n(36672);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},98763:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"sql/sqlite/middle/timestamp_triggers","title":"timestamp_triggers","description":"\u23f1\ufe0f Automatically Maintaining Timestamps with Triggers","source":"@site/docs/sql/sqlite/middle/timestamp_triggers.md","sourceDirName":"sql/sqlite/middle","slug":"/sql/sqlite/middle/timestamp_triggers","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/timestamp_triggers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/sqlite/middle/timestamp_triggers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"recursive_cte_hierarchy","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/recursive_cte_hierarchy"},"next":{"title":"transaction_batching","permalink":"/keep-being-human-dev/docs/sql/sqlite/middle/transaction_batching"}}');var s=n(23420),a=n(65404);const r={},d=void 0,o={},c=[{value:"\u23f1\ufe0f Automatically Maintaining Timestamps with Triggers",id:"\ufe0f-automatically-maintaining-timestamps-with-triggers",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"\ufe0f-automatically-maintaining-timestamps-with-triggers",children:"\u23f1\ufe0f Automatically Maintaining Timestamps with Triggers"}),"\n",(0,s.jsxs)(t.p,{children:["Use triggers to auto-update ",(0,s.jsx)(t.code,{children:"created_at"})," and ",(0,s.jsx)(t.code,{children:"updated_at"})," columns without repetition in application code. Define ",(0,s.jsx)(t.code,{children:"BEFORE INSERT"})," and ",(0,s.jsx)(t.code,{children:"BEFORE UPDATE"})," triggers on your tables."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE posts (\n  id INTEGER PRIMARY KEY,\n  title TEXT,\n  content TEXT,\n  created_at TEXT,\n  updated_at TEXT\n);\n\nCREATE TRIGGER set_post_timestamps\nBEFORE INSERT ON posts\nFOR EACH ROW\nBEGIN\n  SELECT\n    CASE\n      WHEN NEW.created_at IS NULL THEN NEW.created_at = datetime('now') END,\n    NEW.updated_at = datetime('now');\nEND;\n\nCREATE TRIGGER update_post_timestamp\nBEFORE UPDATE ON posts\nFOR EACH ROW\nBEGIN\n  SELECT NEW.updated_at = datetime('now');\nEND;\n"})})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);