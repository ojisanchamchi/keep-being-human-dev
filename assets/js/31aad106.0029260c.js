"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[81882],{65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(36672);const r={},s=o.createContext(r);function c(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}},87926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"ruby/networking/advanced/custom_tls_context","title":"custom_tls_context","description":"\ud83d\udd10 Custom TLS Context with OpenSSL for Advanced Cipher Control","source":"@site/docs/ruby/networking/advanced/custom_tls_context.md","sourceDirName":"ruby/networking/advanced","slug":"/ruby/networking/advanced/custom_tls_context","permalink":"/keep-being-human-dev/docs/ruby/networking/advanced/custom_tls_context","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/networking/advanced/custom_tls_context.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"timeout_ssl_verify","permalink":"/keep-being-human-dev/docs/ruby/net_http/middle/timeout_ssl_verify"},"next":{"title":"eventmachine_async_io","permalink":"/keep-being-human-dev/docs/ruby/networking/advanced/eventmachine_async_io"}}');var r=n(23420),s=n(65404);const c={},i=void 0,a={},p=[{value:"\ud83d\udd10 Custom TLS Context with OpenSSL for Advanced Cipher Control",id:"-custom-tls-context-with-openssl-for-advanced-cipher-control",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-custom-tls-context-with-openssl-for-advanced-cipher-control",children:"\ud83d\udd10 Custom TLS Context with OpenSSL for Advanced Cipher Control"}),"\n",(0,r.jsxs)(t.p,{children:["Fine-tune your TLS handshake by creating an ",(0,r.jsx)(t.code,{children:"OpenSSL::SSL::SSLContext"}),", specifying ciphers, protocol versions, and certificate verification options. This enables strict security policies and compatibility tweaks (e.g., ALPN for HTTP/2). Inject the context into ",(0,r.jsx)(t.code,{children:"Net::HTTP"})," or raw sockets to take full control of SSL parameters."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"require 'net/http'\nrequire 'openssl'\n\nctx = OpenSSL::SSL::SSLContext.new(:TLSv1_2)\nctx.verify_mode = OpenSSL::SSL::VERIFY_PEER\nctx.ca_file = '/etc/ssl/certs/ca-certificates.crt'\nctx.ciphers = 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384'\nctx.alpn_protocols = ['h2', 'http/1.1']\n\nuri = URI('https://example.com')\nhttp = Net::HTTP.new(uri.host, uri.port)\nhttp.use_ssl = true\nhttp.ssl_version = :TLSv1_2\nhttp.ssl_timeout = 10\nhttp.cert_store = ctx.cert_store\nhttp.verify_mode = ctx.verify_mode\nhttp.ciphers = ctx.ciphers\nhttp.alpn_protocols = ctx.alpn_protocols\n\nresponse = http.get(uri)\nputs response.body\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);