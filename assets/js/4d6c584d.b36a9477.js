"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[54369],{3772:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/configuration/expert/dynamic_config_for","title":"dynamic_config_for","description":"\ud83d\udd27 Leverage config_for and config.x for Dynamic Namespaced Configuration","source":"@site/docs/rails/configuration/expert/dynamic_config_for.md","sourceDirName":"rails/configuration/expert","slug":"/rails/configuration/expert/dynamic_config_for","permalink":"/keep-being-human-dev/docs/rails/configuration/expert/dynamic_config_for","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/configuration/expert/dynamic_config_for.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"skip_generator_files","permalink":"/keep-being-human-dev/docs/rails/configuration/beginner/skip_generator_files"},"next":{"title":"multi_env_encrypted_credentials","permalink":"/keep-being-human-dev/docs/rails/configuration/expert/multi_env_encrypted_credentials"}}');var r=i(23420),t=i(65404);const c={},a=void 0,s={},d=[{value:"\ud83d\udd27 Leverage <code>config_for</code> and <code>config.x</code> for Dynamic Namespaced Configuration",id:"-leverage-config_for-and-configx-for-dynamic-namespaced-configuration",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-leverage-config_for-and-configx-for-dynamic-namespaced-configuration",children:["\ud83d\udd27 Leverage ",(0,r.jsx)(n.code,{children:"config_for"})," and ",(0,r.jsx)(n.code,{children:"config.x"})," for Dynamic Namespaced Configuration"]}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"Rails.application.config_for"})," together with the ",(0,r.jsx)(n.code,{children:"config.x"})," namespace lets you load and merge complex YAML configs per environment, locale, or tenant without polluting your initializers. You can deep symbolize and merge nested data structures to deliver type\u2011safe settings throughout your app."]}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"config/payment.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"common:\n  timeout: 30\n  retries: 3\nproduction:\n  client_id: <%= ENV['PAYMENT_CLIENT_ID'] %>\n  secret: <%= ENV['PAYMENT_SECRET'] %>\ndevelopment:\n  client_id: \"dev_id\"\n  secret: \"dev_secret\"\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"config/application.rb"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"module MyApp\n  class Application < Rails::Application\n    # Load and merge common + environment settings, deep symbolize keys\n    raw = config_for(:payment)\n    config.x.payment = raw.deep_symbolize_keys\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Usage anywhere in your app:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"timeout = Rails.configuration.x.payment[:timeout]\nclient_id = Rails.configuration.x.payment[:client_id]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var o=i(36672);const r={},t=o.createContext(r);function c(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);