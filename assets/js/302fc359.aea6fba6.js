"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[73266],{35110:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>u,toc:()=>c});const u=JSON.parse('{"id":"ruby/uri/beginner/build_url_with_query","title":"build_url_with_query","description":"\ud83c\udfd7\ufe0f Build a URL with Query Parameters","source":"@site/docs/ruby/uri/beginner/build_url_with_query.md","sourceDirName":"ruby/uri/beginner","slug":"/ruby/uri/beginner/build_url_with_query","permalink":"/keep-being-human-dev/docs/ruby/uri/beginner/build_url_with_query","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/beginner/build_url_with_query.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"query_param_merging","permalink":"/keep-being-human-dev/docs/ruby/uri/advanced/query_param_merging"},"next":{"title":"encode_decode_query","permalink":"/keep-being-human-dev/docs/ruby/uri/beginner/encode_decode_query"}}');var t=n(23420),i=n(65404);const a={},s=void 0,o={},c=[{value:"\ud83c\udfd7\ufe0f Build a URL with Query Parameters",id:"\ufe0f-build-a-url-with-query-parameters",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"\ufe0f-build-a-url-with-query-parameters",children:"\ud83c\udfd7\ufe0f Build a URL with Query Parameters"}),"\n",(0,t.jsxs)(r.p,{children:["You can construct URLs programmatically by using ",(0,t.jsx)(r.code,{children:"URI::HTTP.build"})," or ",(0,t.jsx)(r.code,{children:"URI::HTTPS.build"})," and appending a query string handled by ",(0,t.jsx)(r.code,{children:"URI.encode_www_form"}),". This ensures your parameters are properly escaped and avoids manual concatenation errors. For instance:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ruby",children:"require 'uri'\n\nparams = { search: 'ruby uri', page: 2 }\nquery_string = URI.encode_www_form(params)\nuri = URI::HTTPS.build(host: 'www.example.com', path: '/search', query: query_string)\n\nputs uri.to_s  #=> \"https://www.example.com/search?search=ruby+uri&page=2\"\n"})})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var u=n(36672);const t={},i=u.createContext(t);function a(e){const r=u.useContext(i);return u.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),u.createElement(i.Provider,{value:r},e.children)}}}]);