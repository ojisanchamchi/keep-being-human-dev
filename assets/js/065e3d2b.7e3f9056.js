"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11562],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var a=i(36672);const t={},r=a.createContext(t);function s(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(r.Provider,{value:n},e.children)}},79923:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/creating_gems/advanced/cli_plugin_architecture","title":"cli_plugin_architecture","description":"\ud83e\udde9 Design CLI Gems with Thor and Plugin Discovery","source":"@site/docs/ruby/creating_gems/advanced/cli_plugin_architecture.md","sourceDirName":"ruby/creating_gems/advanced","slug":"/ruby/creating_gems/advanced/cli_plugin_architecture","permalink":"/keep-being-human-dev/docs/ruby/creating_gems/advanced/cli_plugin_architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/creating_gems/advanced/cli_plugin_architecture.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"magic_values_constants","permalink":"/keep-being-human-dev/docs/ruby/constants/middle/magic_values_constants"},"next":{"title":"native_extension_setup","permalink":"/keep-being-human-dev/docs/ruby/creating_gems/advanced/native_extension_setup"}}');var t=i(23420),r=i(65404);const s={},c=void 0,l={},d=[{value:"\ud83e\udde9 Design CLI Gems with Thor and Plugin Discovery",id:"-design-cli-gems-with-thor-and-plugin-discovery",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-design-cli-gems-with-thor-and-plugin-discovery",children:"\ud83e\udde9 Design CLI Gems with Thor and Plugin Discovery"}),"\n",(0,t.jsx)(n.p,{children:"Build a flexible CLI gem using Thor and let third\u2011party gems register subcommands by following a naming convention. This turns your tool into a plugin host where additional features live in separate gems."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# bin/mygem\n#!/usr/bin/env ruby\nrequire 'mygem/cli'\nMyGem::CLI.start(ARGV)\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# lib/mygem/cli.rb\nrequire \'thor\'\nmodule MyGem\n  class CLI < Thor\n    # Dynamically require any gems named mygem-plugin-*\n    Gem.find_files(\'mygem-plugin-*/lib/**/*.rb\').each { |f| require f }\n\n    desc "hello NAME", "Prints a greeting"\n    def hello(name)\n      puts "Hello, #{name}!"\n    end\n  end\nend\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Now any gem named ",(0,t.jsx)(n.code,{children:"mygem-plugin-xyz"})," can extend your CLI:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# lib/mygem/plugin/fancy.rb (in mygem-plugin-fancy gem)\nMyGem::CLI.class_eval do\n  desc "fancy", "Run the fancy plugin"\n  def fancy\n    puts "\u2728 Fancy plugin activated!"\n  end\nend\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Install ",(0,t.jsx)(n.code,{children:"mygem-plugin-fancy"})," alongside your CLI gem, and ",(0,t.jsx)(n.code,{children:"bin/mygem fancy"})," will be available automatically."]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);