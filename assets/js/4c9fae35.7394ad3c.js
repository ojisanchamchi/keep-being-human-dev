"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[81167],{10941:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"gems/vcr/expert/vcr_deep_request_matching_and_hooks","title":"vcr_deep_request_matching_and_hooks","description":"\ud83c\udfaf Deep Customization of Request Matching and Hooks","source":"@site/docs/gems/vcr/expert/vcr_deep_request_matching_and_hooks.md","sourceDirName":"gems/vcr/expert","slug":"/gems/vcr/expert/vcr_deep_request_matching_and_hooks","permalink":"/keep-being-human-dev/docs/gems/vcr/expert/vcr_deep_request_matching_and_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/expert/vcr_deep_request_matching_and_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"vcr_custom_persister_and_serializer","permalink":"/keep-being-human-dev/docs/gems/vcr/expert/vcr_custom_persister_and_serializer"},"next":{"title":"custom_request_matchers","permalink":"/keep-being-human-dev/docs/gems/vcr/middle/custom_request_matchers"}}');var s=r(23420),o=r(65404);const a={},i=void 0,c={},u=[{value:"\ud83c\udfaf Deep Customization of Request Matching and Hooks",id:"-deep-customization-of-request-matching-and-hooks",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-deep-customization-of-request-matching-and-hooks",children:"\ud83c\udfaf Deep Customization of Request Matching and Hooks"}),"\n",(0,s.jsxs)(t.p,{children:["When working with complex APIs, default request matching can fail\u2014especially when dynamic query params or timestamps are involved. You can define ",(0,s.jsx)(t.strong,{children:"custom request matchers"})," and leverage ",(0,s.jsx)(t.code,{children:"before_record"}),"/",(0,s.jsx)(t.code,{children:"before_playback"})," hooks to normalize or scrub volatile data, ensuring your cassettes remain stable across runs."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# spec/support/vcr.rb\nVCR.configure do |c|\n  c.cassette_library_dir = \"spec/vcr_cassettes\"\n  c.hook_into :webmock\n\n  # Custom matcher that ignores dynamic timestamp query params\n  c.register_request_matcher :uri_without_timestamp do |request_1, request_2|\n    uri1 = URI(request_1.uri)\n    uri2 = URI(request_2.uri)\n\n    q1 = URI.decode_www_form(uri1.query || \"\").reject { |k, _| k == \"timestamp\" }\n    q2 = URI.decode_www_form(uri2.query || \"\").reject { |k, _| k == \"timestamp\" }\n\n    uri1.path == uri2.path && q1.sort == q2.sort\n  end\n\n  # Use our custom matcher along with default method matcher\n  c.default_cassette_options = {\n    match_requests_on: [:method, :uri_without_timestamp]\n  }\n\n  # Scrub authentication tokens before recording\n  c.before_record do |interaction|\n    if interaction.request.headers['Authorization']\n      interaction.request.headers['Authorization'] = ['REDACTED_TOKEN']\n    end\n  end\n\n  # Restore or transform data before playback if needed\n  c.before_playback do |interaction|\n    # e.g. re-inject a fresh token placeholder\n    interaction.request.headers['Authorization'] = ['LIVE_TOKEN']\n  end\nend\n"})}),"\n",(0,s.jsx)(t.p,{children:"This setup ensures dynamic query params and sensitive headers won't break your tests, while still simulating real API behavior."})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var n=r(36672);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);