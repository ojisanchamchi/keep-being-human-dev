"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[6844],{41606:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record/middle/use_counter_cache","title":"use_counter_cache","description":"\ud83d\udd22 Optimize Counters with counter_cache","source":"@site/docs/rails/active_record/middle/use_counter_cache.md","sourceDirName":"rails/active_record/middle","slug":"/rails/active_record/middle/use_counter_cache","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/use_counter_cache","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/middle/use_counter_cache.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"upsert_records","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/upsert_records"},"next":{"title":"association_callbacks_for_cache_invalidation","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/advanced/association_callbacks_for_cache_invalidation"}}');var o=c(23420),r=c(65404);const s={},a=void 0,i={},d=[{value:"\ud83d\udd22 Optimize Counters with <code>counter_cache</code>",id:"-optimize-counters-with-counter_cache",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.h2,{id:"-optimize-counters-with-counter_cache",children:["\ud83d\udd22 Optimize Counters with ",(0,o.jsx)(t.code,{children:"counter_cache"})]}),"\n",(0,o.jsxs)(t.p,{children:["Enable ",(0,o.jsx)(t.code,{children:"counter_cache"})," on your associations to keep track of related record counts without running a separate ",(0,o.jsx)(t.code,{children:"COUNT"})," query every time."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"class Comment < ApplicationRecord\n  belongs_to :post, counter_cache: true\nend\n\n# In posts table, add a column:\n# t.integer :comments_count, default: 0, null: false\n\n# Usage:\npost = Post.find(1)\npost.comments_count  # returns the cached count\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,t,c)=>{c.d(t,{R:()=>s,x:()=>a});var n=c(36672);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);