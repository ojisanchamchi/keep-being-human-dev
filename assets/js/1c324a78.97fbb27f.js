"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12336],{15465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"ruby/methods/expert/method_hooks_metaprogramming","title":"method_hooks_metaprogramming","description":"\ud83e\uddf0 Meta-Programming with Method Hooks","source":"@site/docs/ruby/methods/expert/method_hooks_metaprogramming.md","sourceDirName":"ruby/methods/expert","slug":"/ruby/methods/expert/method_hooks_metaprogramming","permalink":"/keep-being-human-dev/docs/ruby/methods/expert/method_hooks_metaprogramming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/expert/method_hooks_metaprogramming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_define_method","permalink":"/keep-being-human-dev/docs/ruby/methods/expert/dynamic_define_method"},"next":{"title":"module_prepend_chain","permalink":"/keep-being-human-dev/docs/ruby/methods/expert/module_prepend_chain"}}');var d=t(23420),r=t(65404);const s={},a=void 0,m={},i=[{value:"\ud83e\uddf0 Meta-Programming with Method Hooks",id:"-meta-programming-with-method-hooks",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"-meta-programming-with-method-hooks",children:"\ud83e\uddf0 Meta-Programming with Method Hooks"}),"\n",(0,d.jsxs)(n.p,{children:["Intercept method definitions using ",(0,d.jsx)(n.code,{children:"method_added"})," and ",(0,d.jsx)(n.code,{children:"singleton_method_added"})," for instrumentation, analytics, or automated wrapping. Prepended modules can also hook into these events without polluting the target class."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ruby",children:'module Tracker\n  def self.prepended(base)\n    base.extend ClassMethods\n  end\n\n  module ClassMethods\n    def method_added(name)\n      super\n      puts "Added instance method: #{name}"\n    end\n\n    def singleton_method_added(name)\n      super\n      puts "Added class method: #{name}"\n    end\n  end\nend\n\nclass Service\n  prepend Tracker\n\n  def perform; end\n  def self.run; end\nend\n# Output:\n# Added instance method: perform\n# Added class method: run\n'})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(36672);const d={},r=o.createContext(d);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);