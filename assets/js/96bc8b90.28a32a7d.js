"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28714],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(36672);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},72848:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"sql/general/expert/partition_pruning","title":"partition_pruning","description":"\ud83d\uddc2\ufe0f Declarative Partitioning with Pruning","source":"@site/docs/sql/general/expert/partition_pruning.md","sourceDirName":"sql/general/expert","slug":"/sql/general/expert/partition_pruning","permalink":"/keep-being-human-dev/docs/sql/general/expert/partition_pruning","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/general/expert/partition_pruning.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"materialized_views_refresh","permalink":"/keep-being-human-dev/docs/sql/general/expert/materialized_views_refresh"},"next":{"title":"pivot_unpivot","permalink":"/keep-being-human-dev/docs/sql/general/expert/pivot_unpivot"}}');var i=t(23420),a=t(65404);const o={},s=void 0,p={},l=[{value:"\ud83d\uddc2\ufe0f Declarative Partitioning with Pruning",id:"\ufe0f-declarative-partitioning-with-pruning",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-declarative-partitioning-with-pruning",children:"\ud83d\uddc2\ufe0f Declarative Partitioning with Pruning"}),"\n",(0,i.jsx)(n.p,{children:"Use table partitioning by range or list to improve query performance via automatic partition pruning."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE orders (\n  id SERIAL PRIMARY KEY,\n  order_date DATE NOT NULL,\n  customer_id INT,\n  amount NUMERIC\n) PARTITION BY RANGE (order_date);\n\nCREATE TABLE orders_2023\n  PARTITION OF orders\n  FOR VALUES FROM ('2023-01-01') TO ('2024-01-01');\n\nCREATE TABLE orders_2024\n  PARTITION OF orders\n  FOR VALUES FROM ('2024-01-01') TO ('2025-01-01');\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Queries filtering on ",(0,i.jsx)(n.code,{children:"order_date"})," will only scan relevant partitions. Combine with ",(0,i.jsx)(n.code,{children:"VACUUM"})," on older partitions to reclaim space."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);