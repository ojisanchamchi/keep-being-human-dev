"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[41254],{44951:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/active_record_querying/advanced/common_table_expressions","title":"common_table_expressions","description":"\ud83d\udccb Utilize Common Table Expressions (CTEs)","source":"@site/docs/rails/active_record_querying/advanced/common_table_expressions.md","sourceDirName":"rails/active_record_querying/advanced","slug":"/rails/active_record_querying/advanced/common_table_expressions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/common_table_expressions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/advanced/common_table_expressions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bulk_update_with_case","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/bulk_update_with_case"},"next":{"title":"computed_selects","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/computed_selects"}}');var r=n(23420),a=n(65404);const i={},o=void 0,c={},l=[{value:"\ud83d\udccb Utilize Common Table Expressions (CTEs)",id:"-utilize-common-table-expressions-ctes",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"-utilize-common-table-expressions-ctes",children:"\ud83d\udccb Utilize Common Table Expressions (CTEs)"}),"\n",(0,r.jsxs)(s.p,{children:["CTEs let you break complex queries into named subqueries for clarity and reuse. Rails >=6 supports CTEs via ",(0,r.jsx)(s.code,{children:"relation.with"})," or external gems like ",(0,r.jsx)(s.code,{children:"activerecord-cte"}),". This is invaluable for recursive queries or querying hierarchical data without raw SQL spaghetti."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'# Using Rails built-in with (Rails 6+)\nsales_by_month = Sale.group("DATE_TRUNC(\'month\', created_at)").count\nmonthly = Sale\n  .with(monthly_sales: sales_by_month)\n  .from("monthly_sales as ms")\n  .select("ms.date_trunc, ms.count")\n'})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(36672);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);