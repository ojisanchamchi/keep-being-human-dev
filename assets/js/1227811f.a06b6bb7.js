"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[88895],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(36672);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}},75069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"rails/logging/expert/structure_json_logs_semantic","title":"structure_json_logs_semantic","description":"\ud83d\udce6 Structure JSON Logs with Semantic Fields","source":"@site/docs/rails/logging/expert/structure_json_logs_semantic.md","sourceDirName":"rails/logging/expert","slug":"/rails/logging/expert/structure_json_logs_semantic","permalink":"/keep-being-human-dev/docs/rails/logging/expert/structure_json_logs_semantic","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/expert/structure_json_logs_semantic.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"instrument_performance_with_notifications","permalink":"/keep-being-human-dev/docs/rails/logging/expert/instrument_performance_with_notifications"},"next":{"title":"active_record_sql_logging","permalink":"/keep-being-human-dev/docs/rails/logging/middle/active_record_sql_logging"}}');var r=n(23420),o=n(65404);const i={},c=void 0,a={},l=[{value:"\ud83d\udce6 Structure JSON Logs with Semantic Fields",id:"-structure-json-logs-with-semantic-fields",level:2}];function g(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-structure-json-logs-with-semantic-fields",children:"\ud83d\udce6 Structure JSON Logs with Semantic Fields"}),"\n",(0,r.jsxs)(t.p,{children:["Switch to a structured logger (e.g., ",(0,r.jsx)(t.code,{children:"logstash-logger"})," or ",(0,r.jsx)(t.code,{children:"semantic_logger"}),") to emit JSON with consistent keys like ",(0,r.jsx)(t.code,{children:"@timestamp"}),", ",(0,r.jsx)(t.code,{children:"level"}),", ",(0,r.jsx)(t.code,{children:"service"}),", and custom fields. This enables downstream systems (Elasticsearch, Datadog) to parse and filter logs efficiently."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# Gemfile\ngem 'logstash-logger'\n\n# config/environments/production.rb\nconfig.logger = LogStashLogger.new(\n  type: :udp,\n  host: 'logstash.local',\n  port: 5228,\n  formatter: LogStashLogger::Formatter::Json.new\n)\n\n# add custom metadata\nactive_support: { service: 'payments', environment: Rails.env }\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'# anywhere in app code\ndef process_payment\n  Rails.logger.info(\'charge.initiated\', amount: 129.99, currency: \'USD\')\nend\n# => {"@timestamp":"2023-06-01T12:00:00Z","level":"INFO","message":"charge.initiated","amount":129.99,"currency":"USD","service":"payments"}\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);