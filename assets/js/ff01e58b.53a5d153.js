"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23258],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(36672);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},91745:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/numbers/advanced/prime_factorization","title":"prime_factorization","description":"\ud83e\udd47 Efficient Prime Factorization with the Prime Module","source":"@site/docs/ruby/numbers/advanced/prime_factorization.md","sourceDirName":"ruby/numbers/advanced","slug":"/ruby/numbers/advanced/prime_factorization","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/prime_factorization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/advanced/prime_factorization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"numeric_clamp_bounds","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/numeric_clamp_bounds"},"next":{"title":"rational_usage","permalink":"/keep-being-human-dev/docs/ruby/numbers/advanced/rational_usage"}}');var i=t(23420),a=t(65404);const o={},c=void 0,s={},u=[{value:"\ud83e\udd47 Efficient Prime Factorization with the Prime Module",id:"-efficient-prime-factorization-with-the-prime-module",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-efficient-prime-factorization-with-the-prime-module",children:"\ud83e\udd47 Efficient Prime Factorization with the Prime Module"}),"\n",(0,i.jsx)(n.p,{children:"Ruby\u2019s Prime library provides fast prime enumeration and factorization methods. You can leverage Prime.each for custom factorization logic or use Integer#prime_division to get exponent tuples."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"require 'prime'\n\n# Model prime factorization\ndef prime_factors(n)\n  factors = []\n  Prime.each do |p|\n    break if p * p > n\n    while (n % p).zero?\n      factors << p\n      n /= p\n    end\n  end\n  factors << n if n > 1\n  factors\nend\n\nputs prime_factors(360)         # => [2, 2, 2, 3, 3, 5]\nputs 360.prime_division.inspect # => [[2, 3], [3, 2], [5, 1]]\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);