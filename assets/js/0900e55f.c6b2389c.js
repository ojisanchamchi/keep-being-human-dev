"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[4289],{48543:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"javascript/stimulus/middle/actioncable_integration","title":"actioncable_integration","description":"\ud83d\udce1 Integrating with ActionCable Channels","source":"@site/docs/javascript/stimulus/middle/actioncable_integration.md","sourceDirName":"javascript/stimulus/middle","slug":"/javascript/stimulus/middle/actioncable_integration","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/actioncable_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/middle/actioncable_integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"webworker_integration","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/webworker_integration"},"next":{"title":"async_fetch_requests","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/async_fetch_requests"}}');var s=t(23420),a=t(65404);const c={},r=void 0,o={},l=[{value:"\ud83d\udce1 Integrating with ActionCable Channels",id:"-integrating-with-actioncable-channels",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-integrating-with-actioncable-channels",children:"\ud83d\udce1 Integrating with ActionCable Channels"}),"\n",(0,s.jsxs)(n.p,{children:["Subscribe to Rails ActionCable channels inside Stimulus to handle real-time updates. Place subscription logic in ",(0,s.jsx)(n.code,{children:"connect"})," and clean it up in ",(0,s.jsx)(n.code,{children:"disconnect"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'import { Controller } from "@hotwired/stimulus"\nimport consumer from "../channels/consumer"\n\nexport default class extends Controller {\n  connect() {\n    this.subscription = consumer.subscriptions.create(\n      { channel: "ChatChannel" },\n      { received: data => this.receiveMessage(data) }\n    )\n  }\n\n  disconnect() {\n    consumer.subscriptions.remove(this.subscription)\n  }\n\n  receiveMessage(data) {\n    this.element.insertAdjacentHTML("beforeend", `<p>${data.content}</p>`)\n  }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(36672);const s={},a=i.createContext(s);function c(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);