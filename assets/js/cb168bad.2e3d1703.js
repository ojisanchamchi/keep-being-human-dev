"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79064],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(36672);const c={},r=a.createContext(c);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},89728:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"gems/view_component/expert/advanced_fragment_caching","title":"advanced_fragment_caching","description":"\u26a1 Advanced Fragment Caching with Varying Context","source":"@site/docs/gems/view_component/expert/advanced_fragment_caching.md","sourceDirName":"gems/view_component/expert","slug":"/gems/view_component/expert/advanced_fragment_caching","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/advanced_fragment_caching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/expert/advanced_fragment_caching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"view_component_testing","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_testing"},"next":{"title":"deep_testing_with_matchers","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/deep_testing_with_matchers"}}');var c=t(23420),r=t(65404);const i={},o=void 0,s={},d=[{value:"\u26a1 Advanced Fragment Caching with Varying Context",id:"-advanced-fragment-caching-with-varying-context",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-advanced-fragment-caching-with-varying-context",children:"\u26a1 Advanced Fragment Caching with Varying Context"}),"\n",(0,c.jsxs)(n.p,{children:["Leverage ViewComponent\u2019s built\u2011in caching to drastically reduce render times by scoping caches to locale, current_user, or feature flags. Wrap expensive partials in a ",(0,c.jsx)(n.code,{children:"cache"})," block inside ",(0,c.jsx)(n.code,{children:"#call"})," with custom cache keys and ",(0,c.jsx)(n.code,{children:"version:"})," to bust caches on deploy."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:'# app/components/user_profile_component.rb\nclass UserProfileComponent < ViewComponent::Base\n  def initialize(user:, feature_flag: false)\n    @user = user\n    @feature_flag = feature_flag\n  end\n\n  def call\n    cache(cache_key, version: cache_version) do\n      content_tag :div, class: "user-profile" do\n        render_user_details\n      end\n    end\n  end\n\n  private\n\n  def cache_key\n    [@user.cache_key_with_version, I18n.locale, @feature_flag]\n  end\n\n  def cache_version\n    Rails.application.config.x.profile_version\n  end\nend\n'})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}}}]);