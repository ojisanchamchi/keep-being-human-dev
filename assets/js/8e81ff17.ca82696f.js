"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79783],{58989:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"gems/chartkick/middle/ajax_refresh","title":"ajax_refresh","description":"\ud83d\udd04 Load and refresh data dynamically with AJAX","source":"@site/docs/gems/chartkick/middle/ajax_refresh.md","sourceDirName":"gems/chartkick/middle","slug":"/gems/chartkick/middle/ajax_refresh","permalink":"/keep-being-human-dev/docs/gems/chartkick/middle/ajax_refresh","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/chartkick/middle/ajax_refresh.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sql_cte_aggregation_for_large_datasets","permalink":"/keep-being-human-dev/docs/gems/chartkick/expert/sql_cte_aggregation_for_large_datasets"},"next":{"title":"custom_chart_options","permalink":"/keep-being-human-dev/docs/gems/chartkick/middle/custom_chart_options"}}');var r=t(23420),s=t(65404);const o={},d=void 0,c={},i=[{value:"\ud83d\udd04 Load and refresh data dynamically with AJAX",id:"-load-and-refresh-data-dynamically-with-ajax",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-load-and-refresh-data-dynamically-with-ajax",children:"\ud83d\udd04 Load and refresh data dynamically with AJAX"}),"\n",(0,r.jsxs)(a.p,{children:["Use a JSON endpoint and Chartkick\u2019s ",(0,r.jsx)(a.code,{children:"refresh"})," option to keep your charts up to date without a full page reload. Define a controller action that renders data as JSON, then point Chartkick at that URL and set ",(0,r.jsx)(a.code,{children:"refresh"})," in seconds."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:'# routes.rb\nget \'/sales.json\', to: \'sales#index\'\n\n# Controller (app/controllers/sales_controller.rb)\nclass SalesController < ApplicationController\n  def index\n    data = Sale.group_by_hour(:created_at, last: 24).sum(:amount)\n    render json: data\n  end\nend\n\n# View (ERB)\n<%= line_chart "/sales.json",\n  refresh: 60,\n  xtitle: "Hour",\n  ytitle: "Sales Amount"\n%>\n'})})]})}function h(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>d});var n=t(36672);const r={},s=n.createContext(r);function o(e){const a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);