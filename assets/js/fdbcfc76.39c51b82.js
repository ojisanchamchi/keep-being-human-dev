"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[48158],{65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var r=t(36672);const o={},s=r.createContext(o);function c(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(s.Provider,{value:n},e.children)}},66242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"ruby/blocks/expert/block_instrumentation_with_prepend","title":"block_instrumentation_with_prepend","description":"\u23f1\ufe0f Block Instrumentation with Module#prepend","source":"@site/docs/ruby/blocks/expert/block_instrumentation_with_prepend.md","sourceDirName":"ruby/blocks/expert","slug":"/ruby/blocks/expert/block_instrumentation_with_prepend","permalink":"/keep-being-human-dev/docs/ruby/blocks/expert/block_instrumentation_with_prepend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/blocks/expert/block_instrumentation_with_prepend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_lazy_enumerator_chaining","permalink":"/keep-being-human-dev/docs/ruby/blocks/expert/advanced_lazy_enumerator_chaining"},"next":{"title":"capture_and_rebind_block_context","permalink":"/keep-being-human-dev/docs/ruby/blocks/expert/capture_and_rebind_block_context"}}');var o=t(23420),s=t(65404);const c={},i=void 0,a={},l=[{value:"\u23f1\ufe0f Block Instrumentation with Module#prepend",id:"\ufe0f-block-instrumentation-with-moduleprepend",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-block-instrumentation-with-moduleprepend",children:"\u23f1\ufe0f Block Instrumentation with Module#prepend"}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"Module#prepend"})," to wrap methods that accept blocks, automatically measuring execution times without altering original code. This approach is perfect for profiling, benchmarking, and logging behaviors."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'module Profiling\n  def call(*args, &block)\n    start = Process.clock_gettime(Process::CLOCK_MONOTONIC)\n    result = super(*args, &block)\n    duration = (Process.clock_gettime(Process::CLOCK_MONOTONIC) - start) * 1000\n    puts "#{self.class}##{__callee__} took #{duration.round(2)}ms"\n    result\n  end\nend\n\nclass Task\n  prepend Profiling\n\n  def call(data)\n    # Simulate work\n    sleep(0.01)\n    "Processed #{data}"\n  end\nend\n\nTask.new.call(\'input\') # Logs execution time\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);