"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13343],{65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(36672);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},70246:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_migrations/expert/disable_ddl_transaction_for_concurrent_index","title":"disable_ddl_transaction_for_concurrent_index","description":"\u26a1 Add Index Concurrently Without Transaction","source":"@site/docs/rails/active_record_migrations/expert/disable_ddl_transaction_for_concurrent_index.md","sourceDirName":"rails/active_record_migrations/expert","slug":"/rails/active_record_migrations/expert/disable_ddl_transaction_for_concurrent_index","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/disable_ddl_transaction_for_concurrent_index","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_migrations/expert/disable_ddl_transaction_for_concurrent_index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"deferrable_foreign_keys","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/deferrable_foreign_keys"},"next":{"title":"multi_step_default_column_addition","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/multi_step_default_column_addition"}}');var i=r(23420),a=r(65404);const o={},c=void 0,s={},d=[{value:"\u26a1 Add Index Concurrently Without Transaction",id:"-add-index-concurrently-without-transaction",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-add-index-concurrently-without-transaction",children:"\u26a1 Add Index Concurrently Without Transaction"}),"\n",(0,i.jsxs)(n.p,{children:["By default Rails wraps migrations in a transaction, preventing the use of ",(0,i.jsx)(n.code,{children:"CONCURRENTLY"})," with PostgreSQL. You can disable the DDL transaction for a migration to create indexes without locking writes."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class AddUsersEmailIndexConcurrently < ActiveRecord::Migration[6.1]\n  disable_ddl_transaction!\n\n  def up\n    add_index :users, :email, algorithm: :concurrently, name: 'index_users_on_email_concurrently'\n  end\n\n  def down\n    remove_index :users, name: 'index_users_on_email_concurrently', algorithm: :concurrently\n  end\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"Ensure your app can handle concurrent schema changes and monitor lock behavior."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);