"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[89602],{65404:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>i});var s=r(36672);const n={},a=s.createContext(n);function l(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(a.Provider,{value:t},e.children)}},94687:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"rails/performance/advanced/bulk_upserts_with_upsert_all","title":"bulk_upserts_with_upsert_all","description":"\ud83e\uddf0 Bulk Upserts with insertall/upsertall","source":"@site/docs/rails/performance/advanced/bulk_upserts_with_upsert_all.md","sourceDirName":"rails/performance/advanced","slug":"/rails/performance/advanced/bulk_upserts_with_upsert_all","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/bulk_upserts_with_upsert_all","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/advanced/bulk_upserts_with_upsert_all.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rendering_collections","permalink":"/keep-being-human-dev/docs/rails/partials/middle/rendering_collections"},"next":{"title":"cpu_profiling_with_stackprof","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/cpu_profiling_with_stackprof"}}');var n=r(23420),a=r(65404);const l={},i=void 0,u={},c=[{value:"\ud83e\uddf0 Bulk Upserts with insert_all/upsert_all",id:"-bulk-upserts-with-insert_allupsert_all",level:2}];function o(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-bulk-upserts-with-insert_allupsert_all",children:"\ud83e\uddf0 Bulk Upserts with insert_all/upsert_all"}),"\n",(0,n.jsxs)(t.p,{children:["Rails 6+ provides ",(0,n.jsx)(t.code,{children:"insert_all"})," and ",(0,n.jsx)(t.code,{children:"upsert_all"})," for high\u2011performance bulk inserts and upserts in a single query. This avoids callbacks, validations, and reduces round\u2011trips, ideal for syncing large datasets."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:'# Bulk insert new records\nProduct.insert_all([\n  { sku: "A1", name: "Item A", price: 100 },\n  { sku: "B2", name: "Item B", price: 200 }\n])\n\n# Bulk upsert (insert or update on conflict)\nWidget.upsert_all(\n  [{ id: 1, status: "active" }, { id: 2, status: "archived" }],\n  unique_by: :id\n)\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);