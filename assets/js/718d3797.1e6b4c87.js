"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[46361],{10153:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"gems/chartkick/advanced/custom_tooltips_formatters","title":"custom_tooltips_formatters","description":"\ud83c\udfa8 Custom Tooltips and Formatters","source":"@site/docs/gems/chartkick/advanced/custom_tooltips_formatters.md","sourceDirName":"gems/chartkick/advanced","slug":"/gems/chartkick/advanced/custom_tooltips_formatters","permalink":"/keep-being-human-dev/docs/gems/chartkick/advanced/custom_tooltips_formatters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/chartkick/advanced/custom_tooltips_formatters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"after_render_hook","permalink":"/keep-being-human-dev/docs/gems/chartkick/advanced/after_render_hook"},"next":{"title":"multi_axis_charts","permalink":"/keep-being-human-dev/docs/gems/chartkick/advanced/multi_axis_charts"}}');var n=a(23420),s=a(65404);const r={},c=void 0,i={},l=[{value:"\ud83c\udfa8 Custom Tooltips and Formatters",id:"-custom-tooltips-and-formatters",level:2}];function d(t){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h2,{id:"-custom-tooltips-and-formatters",children:"\ud83c\udfa8 Custom Tooltips and Formatters"}),"\n",(0,n.jsxs)(e.p,{children:["Leverage Chartkick\u2019s ",(0,n.jsx)(e.code,{children:"library"})," option to pass through formatting callbacks (e.g., Chart.js or Highcharts) and display rich, contextual tooltips. This example uses Chart.js callbacks to prefix values and show percentages."]}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-erb",children:'<%= line_chart sales_data,\n  library: {\n    tooltips: {\n      callbacks: {\n        label: ->(tooltipItem, data) {\n          "Revenue: $#{tooltipItem.yLabel.toLocaleString}" + " (#{((tooltipItem.yLabel / data.datasets[0].data.reduce(&:+)) * 100).toFixed(1)}%)"\n        }\n      }\n    }\n  }\n%>\n'})}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-javascript",children:'// If you need to write it in pure JS (e.g., in a pack):\nimport Chartkick from "chartkick"\nimport "chartkick/chart.js"\n\nnew Chartkick.LineChart("custom-tooltip", salesData, {\n  library: {\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          const total = data.datasets[tooltipItem.datasetIndex].data.reduce((a,b) => a+b)\n          return `Revenue: $${tooltipItem.value} (${((tooltipItem.value/total)*100).toFixed(1)}%)`\n        }\n      }\n    }\n  }\n})\n'})})]})}function m(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},65404:(t,e,a)=>{a.d(e,{R:()=>r,x:()=>c});var o=a(36672);const n={},s=o.createContext(n);function r(t){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:r(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);