"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2361],{65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(36672);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}},94101:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"ruby/yaml/beginner/safe_parse_yaml_string","title":"safe_parse_yaml_string","description":"\ud83d\udee1\ufe0f Safely Parsing YAML Strings","source":"@site/docs/ruby/yaml/beginner/safe_parse_yaml_string.md","sourceDirName":"ruby/yaml/beginner","slug":"/ruby/yaml/beginner/safe_parse_yaml_string","permalink":"/keep-being-human-dev/docs/ruby/yaml/beginner/safe_parse_yaml_string","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/yaml/beginner/safe_parse_yaml_string.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"load_yaml_file","permalink":"/keep-being-human-dev/docs/ruby/yaml/beginner/load_yaml_file"},"next":{"title":"custom_psych_domain_type","permalink":"/keep-being-human-dev/docs/ruby/yaml/expert/custom_psych_domain_type"}}');var a=r(23420),t=r(65404);const i={},l=void 0,o={},u=[{value:"\ud83d\udee1\ufe0f Safely Parsing YAML Strings",id:"\ufe0f-safely-parsing-yaml-strings",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-safely-parsing-yaml-strings",children:"\ud83d\udee1\ufe0f Safely Parsing YAML Strings"}),"\n",(0,a.jsxs)(n.p,{children:["When parsing YAML from external sources, untrusted data can lead to security risks. Using ",(0,a.jsx)(n.code,{children:"YAML.safe_load"})," helps prevent arbitrary object deserialization by limiting loaded types to simple primitives. You can then work with the resulting Hash just like any other Ruby data structure."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'yaml'\n\nyaml_str = <<~YAML\n  user:\n    name: Alice\n    admin: true\nYAML\n\n# Safely load the YAML string into a Ruby Hash\nparsed = YAML.safe_load(yaml_str)\n\nputs \"User: #{parsed['user']['name']} (Admin: #{parsed['user']['admin']})\"\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);