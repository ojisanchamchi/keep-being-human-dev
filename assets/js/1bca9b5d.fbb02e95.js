"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[18548],{65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>i});var r=s(36672);const a={},o=r.createContext(a);function t(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(o.Provider,{value:n},e.children)}},94812:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/controllers/advanced/versioned_api_namespaces","title":"versioned_api_namespaces","description":"\u26a1 Handle Versioned APIs with Namespaced Controllers","source":"@site/docs/rails/controllers/advanced/versioned_api_namespaces.md","sourceDirName":"rails/controllers/advanced","slug":"/rails/controllers/advanced/versioned_api_namespaces","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/versioned_api_namespaces","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/advanced/versioned_api_namespaces.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"strong_params_nested_attributes","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/strong_params_nested_attributes"},"next":{"title":"accessing_params","permalink":"/keep-being-human-dev/docs/rails/controllers/beginner/accessing_params"}}');var a=s(23420),o=s(65404);const t={},i=void 0,c={},l=[{value:"\u26a1 Handle Versioned APIs with Namespaced Controllers",id:"-handle-versioned-apis-with-namespaced-controllers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-handle-versioned-apis-with-namespaced-controllers",children:"\u26a1 Handle Versioned APIs with Namespaced Controllers"}),"\n",(0,a.jsx)(n.p,{children:"Maintain backward compatibility by namespacing controllers under version modules. This pattern allows evolving your API without breaking existing clients."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# config/routes.rb\nnamespace :api do\n  namespace :v1 do\n    resources :users, only: [:index, :show]\n  end\n\n  namespace :v2 do\n    resources :users, only: [:index, :show, :update]\n  end\nend\n"})}),"\n",(0,a.jsx)(n.p,{children:"Controllers:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/api/v1/users_controller.rb\nmodule Api::V1\n  class UsersController < ApplicationController\n    def index\n      render json: User.all\n    end\n  end\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);