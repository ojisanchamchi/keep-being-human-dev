"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38389],{37794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"gems/devise/expert/dynamic_failure_app_handling","title":"dynamic_failure_app_handling","description":"\ud83d\udea8 Dynamic Devise::FailureApp for JSON and HTML Fallbacks","source":"@site/docs/gems/devise/expert/dynamic_failure_app_handling.md","sourceDirName":"gems/devise/expert","slug":"/gems/devise/expert/dynamic_failure_app_handling","permalink":"/keep-being-human-dev/docs/gems/devise/expert/dynamic_failure_app_handling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/devise/expert/dynamic_failure_app_handling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_warden_2fa","permalink":"/keep-being-human-dev/docs/gems/devise/expert/custom_warden_2fa"},"next":{"title":"jwt_stateless_api","permalink":"/keep-being-human-dev/docs/gems/devise/expert/jwt_stateless_api"}}');var r=s(23420),i=s(65404);const t={},o=void 0,d={},c=[{value:"\ud83d\udea8 Dynamic Devise::FailureApp for JSON and HTML Fallbacks",id:"-dynamic-devisefailureapp-for-json-and-html-fallbacks",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-dynamic-devisefailureapp-for-json-and-html-fallbacks",children:"\ud83d\udea8 Dynamic Devise::FailureApp for JSON and HTML Fallbacks"}),"\n",(0,r.jsxs)(n.p,{children:["Customize ",(0,r.jsx)(n.code,{children:"Devise::FailureApp"})," to intelligently redirect or render JSON error responses based on ",(0,r.jsx)(n.code,{children:"Accept"})," headers or user roles. This allows APIs and web clients to share Devise authentication flows without duplicating controllers. Override ",(0,r.jsx)(n.code,{children:"respond"})," and ",(0,r.jsx)(n.code,{children:"route"})," methods to dispatch correctly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# lib/custom_failure.rb\nclass CustomFailure < Devise::FailureApp\n  def respond\n    if request.format.json?\n      json_error\n    else\n      super\n    end\n  end\n\n  def json_error\n    self.status = :unauthorized\n    self.content_type = 'application/json'\n    self.response_body = { error: i18n_message }.to_json\n  end\nend\n\n# config/initializers/devise.rb\nDevise.setup do |config|\n  config.warden do |manager|\n    manager.failure_app = CustomFailure\n  end\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var a=s(36672);const r={},i=a.createContext(r);function t(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);