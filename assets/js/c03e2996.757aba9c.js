"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[88188],{65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(36672);const i={},l=t.createContext(i);function a(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(l.Provider,{value:n},e.children)}},67555:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"sql/postgresql/expert/dynamic_sql_in_plpgsql","title":"dynamic_sql_in_plpgsql","description":"\ud83c\udfaf Build Dynamic Queries Safely in PL/pgSQL","source":"@site/docs/sql/postgresql/expert/dynamic_sql_in_plpgsql.md","sourceDirName":"sql/postgresql/expert","slug":"/sql/postgresql/expert/dynamic_sql_in_plpgsql","permalink":"/keep-being-human-dev/docs/sql/postgresql/expert/dynamic_sql_in_plpgsql","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/postgresql/expert/dynamic_sql_in_plpgsql.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"autovacuum_and_bloat_analysis","permalink":"/keep-being-human-dev/docs/sql/postgresql/expert/autovacuum_and_bloat_analysis"},"next":{"title":"jsonb_gin_expression_indexes","permalink":"/keep-being-human-dev/docs/sql/postgresql/expert/jsonb_gin_expression_indexes"}}');var i=s(23420),l=s(65404);const a={},r=void 0,o={},c=[{value:"\ud83c\udfaf Build Dynamic Queries Safely in PL/pgSQL",id:"-build-dynamic-queries-safely-in-plpgsql",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-build-dynamic-queries-safely-in-plpgsql",children:"\ud83c\udfaf Build Dynamic Queries Safely in PL/pgSQL"}),"\n",(0,i.jsxs)(n.p,{children:["When you need flexible table or column names at runtime, use ",(0,i.jsx)(n.code,{children:"format()"}),", ",(0,i.jsx)(n.code,{children:"quote_ident()"}),", and ",(0,i.jsx)(n.code,{children:"quote_literal()"})," in PL/pgSQL to construct safe dynamic SQL, avoiding SQL injection while retaining performance."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE OR REPLACE FUNCTION search_dynamic(\n  tbl text, col text, val text\n) RETURNS SETOF RECORD AS $$\nBEGIN\n  RETURN QUERY EXECUTE format(\n    'SELECT * FROM %I WHERE %I = %L',\n    tbl, col, val\n  );\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Usage (return type must be defined by caller)\nSELECT * FROM search_dynamic('users', 'email', 'alice@example.com') AS t(id int, email text);\n"})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);