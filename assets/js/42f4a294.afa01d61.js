"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[7857],{21246:n=>{n.exports=JSON.parse('{"permalink":"/keep-being-human-dev/blog/ruby-blocks-tu-co-ban-den-nang-cao","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/ruby-blocks-tu-co-ban-den-nang-cao.md","source":"@site/blog/ruby-blocks-tu-co-ban-den-nang-cao.md","title":"Ruby Blocks - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn N\xe2ng Cao Cho Developer","description":"Ruby blocks l\xe0 m\u1ed9t trong nh\u1eefng t\xednh n\u0103ng m\u1ea1nh m\u1ebd nh\u1ea5t c\u1ee7a ng\xf4n ng\u1eef Ruby, t\u1ea1o n\xean phong c\xe1ch l\u1eadp tr\xecnh \u0111\u1ed9c \u0111\xe1o v\xe0 linh ho\u1ea1t. Blocks cho ph\xe9p b\u1ea1n \u0111\xf3ng g\xf3i m\u1ed9t \u0111o\u1ea1n m\xe3 \u0111\u1ec3 truy\u1ec1n v\xe0o c\xe1c ph\u01b0\u01a1ng th\u1ee9c, t\u1ea1o ra c\xe1c API linh ho\u1ea1t v\xe0 m\xe3 ngu\u1ed3n d\u1ec5 \u0111\u1ecdc. B\xe0i vi\u1ebft n\xe0y s\u1ebd gi\xfap b\u1ea1n hi\u1ec3u s\xe2u v\u1ec1 blocks trong Ruby, t\u1eeb kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n \u0111\u1ebfn c\xe1c k\u1ef9 thu\u1eadt n\xe2ng cao m\xe0 c\xe1c Ruby developer chuy\xean nghi\u1ec7p s\u1eed d\u1ee5ng h\xe0ng ng\xe0y.","date":"2025-07-24T03:41:41.000Z","tags":[{"inline":false,"label":"Ruby","permalink":"/keep-being-human-dev/blog/tags/ruby","description":"Content related to Ruby programming language"},{"inline":false,"label":"Programming","permalink":"/keep-being-human-dev/blog/tags/programming","description":"General programming concepts and techniques"},{"inline":false,"label":"Blocks","permalink":"/keep-being-human-dev/blog/tags/blocks","description":"Content related to code blocks and closures in programming languages"},{"inline":false,"label":"Functional Programming","permalink":"/keep-being-human-dev/blog/tags/functional","description":"Content about functional programming paradigms and techniques"}],"readingTime":9.35,"hasTruncateMarker":true,"authors":[{"name":"Dang Quang Minh","title":"Nh\xe2n vi\xean o\xe1nh m\xe1nh t\xednh","url":"https://github.com/ojisanchamchi","page":{"permalink":"/keep-being-human-dev/blog/authors/admin"},"socials":{"github":"https://github.com/ojisanchamchi"},"imageURL":"https://github.com/ojisanchamchi.png","key":"admin"}],"frontMatter":{"slug":"ruby-blocks-tu-co-ban-den-nang-cao","title":"Ruby Blocks - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn N\xe2ng Cao Cho Developer","authors":["admin"],"tags":["ruby","programming","blocks","functional"]},"unlisted":false,"prevItem":{"title":"Ruby Classes v\xe0 Modules - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn N\xe2ng Cao Cho Developer","permalink":"/keep-being-human-dev/blog/ruby-classes-modules-tu-co-ban-den-nang-cao"},"nextItem":{"title":"H\u01b0\u1edbng D\u1eabn To\xe0n Di\u1ec7n V\u1ec1 Benchmark Trong Ruby - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn Chuy\xean S\xe2u","permalink":"/keep-being-human-dev/blog/huong-dan-benchmark-ruby"}}')},65404:(n,e,i)=>{i.d(e,{R:()=>h,x:()=>a});var c=i(36672);const l={},t=c.createContext(l);function h(n){const e=c.useContext(t);return c.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:h(n.components),c.createElement(t.Provider,{value:e},n.children)}},98333:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>h,metadata:()=>c,toc:()=>r});var c=i(21246),l=i(23420),t=i(65404);const h={slug:"ruby-blocks-tu-co-ban-den-nang-cao",title:"Ruby Blocks - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn N\xe2ng Cao Cho Developer",authors:["admin"],tags:["ruby","programming","blocks","functional"]},a="Ruby Blocks - T\u1eeb C\u01a1 B\u1ea3n \u0110\u1ebfn N\xe2ng Cao Cho Developer",s={authorsImageUrls:[void 0]},r=[{value:"Ph\u1ea7n 1: Kh\xe1i Ni\u1ec7m C\u01a1 B\u1ea3n V\u1ec1 Ruby Blocks",id:"ph\u1ea7n-1-kh\xe1i-ni\u1ec7m-c\u01a1-b\u1ea3n-v\u1ec1-ruby-blocks",level:2},{value:"Block L\xe0 G\xec?",id:"block-l\xe0-g\xec",level:3},{value:"\ud83d\udd04 Duy\u1ec7t Qua M\u1ea3ng V\u1edbi each",id:"-duy\u1ec7t-qua-m\u1ea3ng-v\u1edbi-each",level:3},{value:"\ud83d\udd01 L\u1eb7p V\u1edbi times",id:"-l\u1eb7p-v\u1edbi-times",level:3},{value:"\ud83d\udd0d L\u1ecdc D\u1eef Li\u1ec7u V\u1edbi select",id:"-l\u1ecdc-d\u1eef-li\u1ec7u-v\u1edbi-select",level:3},{value:"\ud83d\udd04 Bi\u1ebfn \u0110\u1ed5i D\u1eef Li\u1ec7u V\u1edbi map",id:"-bi\u1ebfn-\u0111\u1ed5i-d\u1eef-li\u1ec7u-v\u1edbi-map",level:3},{value:"\u2699\ufe0f X\xe2y D\u1ef1ng Ph\u01b0\u01a1ng Th\u1ee9c T\xf9y Ch\u1ec9nh V\u1edbi yield",id:"\ufe0f-x\xe2y-d\u1ef1ng-ph\u01b0\u01a1ng-th\u1ee9c-t\xf9y-ch\u1ec9nh-v\u1edbi-yield",level:3},{value:"\ud83d\udee1\ufe0f B\u1ea3o V\u1ec7 V\u1edbi block_given?",id:"\ufe0f-b\u1ea3o-v\u1ec7-v\u1edbi-block_given",level:3},{value:"\ud83d\udcc1 Qu\u1ea3n L\xfd T\xe0i Nguy\xean File",id:"-qu\u1ea3n-l\xfd-t\xe0i-nguy\xean-file",level:3},{value:"Ph\u1ea7n 2: K\u1ef9 Thu\u1eadt Trung C\u1ea5p V\u1edbi Ruby Blocks",id:"ph\u1ea7n-2-k\u1ef9-thu\u1eadt-trung-c\u1ea5p-v\u1edbi-ruby-blocks",level:2},{value:"\ud83d\udee0\ufe0f S\u1eed D\u1ee5ng <code>yield</code> V\u1edbi Tham S\u1ed1",id:"\ufe0f-s\u1eed-d\u1ee5ng-yield-v\u1edbi-tham-s\u1ed1",level:3},{value:"\ud83d\udd04 T\u1ea1o Iterator T\xf9y Ch\u1ec9nh",id:"-t\u1ea1o-iterator-t\xf9y-ch\u1ec9nh",level:3},{value:"\ud83d\udd04 Ph\u01b0\u01a1ng Th\u1ee9c C\xf3 Th\u1ec3 X\xe2u Chu\u1ed7i V\u1edbi Blocks",id:"-ph\u01b0\u01a1ng-th\u1ee9c-c\xf3-th\u1ec3-x\xe2u-chu\u1ed7i-v\u1edbi-blocks",level:3},{value:"\ud83d\udd0d Ki\u1ec3m Tra S\u1ef1 Hi\u1ec7n Di\u1ec7n C\u1ee7a Block",id:"-ki\u1ec3m-tra-s\u1ef1-hi\u1ec7n-di\u1ec7n-c\u1ee7a-block",level:3},{value:"\ud83d\udd04 L\u1ecdc V\xe0 Bi\u1ebfn \u0110\u1ed5i Collections",id:"-l\u1ecdc-v\xe0-bi\u1ebfn-\u0111\u1ed5i-collections",level:3},{value:"\ud83d\udd04 X\u1eed L\xfd Lu\u1ed3ng \u0110i\u1ec1u Khi\u1ec3n Trong Blocks",id:"-x\u1eed-l\xfd-lu\u1ed3ng-\u0111i\u1ec1u-khi\u1ec3n-trong-blocks",level:3},{value:"Ph\u1ea7n 3: K\u1ef9 Thu\u1eadt N\xe2ng Cao V\u1edbi Ruby Blocks",id:"ph\u1ea7n-3-k\u1ef9-thu\u1eadt-n\xe2ng-cao-v\u1edbi-ruby-blocks",level:2},{value:"\ud83d\udd04 Lazy Infinite Streams V\u1edbi Enumerator::Lazy",id:"-lazy-infinite-streams-v\u1edbi-enumeratorlazy",level:3},{value:"\ud83d\udd04 Destructuring Block Parameters",id:"-destructuring-block-parameters",level:3},{value:"\u23f1\ufe0f Benchmark Blocks",id:"\ufe0f-benchmark-blocks",level:3},{value:"\ud83d\udd04 Retry V\u1edbi Backoff",id:"-retry-v\u1edbi-backoff",level:3},{value:"\ud83d\udd27 Internal DSL V\u1edbi instance_eval",id:"-internal-dsl-v\u1edbi-instance_eval",level:3},{value:"Ph\u1ea7n 4: K\u1ef9 Thu\u1eadt Chuy\xean Gia V\u1edbi Ruby Blocks",id:"ph\u1ea7n-4-k\u1ef9-thu\u1eadt-chuy\xean-gia-v\u1edbi-ruby-blocks",level:2},{value:"\ud83d\udd17 Currying V\xe0 Composing Procs",id:"-currying-v\xe0-composing-procs",level:3},{value:"\u2699\ufe0f Dynamic define_method V\u1edbi Block",id:"\ufe0f-dynamic-define_method-v\u1edbi-block",level:3},{value:"\ud83d\udd04 Advanced Lazy Enumerator Chaining",id:"-advanced-lazy-enumerator-chaining",level:3},{value:"\ud83d\udd04 Context Switch V\u1edbi instance_exec",id:"-context-switch-v\u1edbi-instance_exec",level:3},{value:"\ud83d\udd04 Block Instrumentation V\u1edbi Prepend",id:"-block-instrumentation-v\u1edbi-prepend",level:3},{value:"K\u1ebft Lu\u1eadn",id:"k\u1ebft-lu\u1eadn",level:2}];function o(n){const e={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.p,{children:"Ruby blocks l\xe0 m\u1ed9t trong nh\u1eefng t\xednh n\u0103ng m\u1ea1nh m\u1ebd nh\u1ea5t c\u1ee7a ng\xf4n ng\u1eef Ruby, t\u1ea1o n\xean phong c\xe1ch l\u1eadp tr\xecnh \u0111\u1ed9c \u0111\xe1o v\xe0 linh ho\u1ea1t. Blocks cho ph\xe9p b\u1ea1n \u0111\xf3ng g\xf3i m\u1ed9t \u0111o\u1ea1n m\xe3 \u0111\u1ec3 truy\u1ec1n v\xe0o c\xe1c ph\u01b0\u01a1ng th\u1ee9c, t\u1ea1o ra c\xe1c API linh ho\u1ea1t v\xe0 m\xe3 ngu\u1ed3n d\u1ec5 \u0111\u1ecdc. B\xe0i vi\u1ebft n\xe0y s\u1ebd gi\xfap b\u1ea1n hi\u1ec3u s\xe2u v\u1ec1 blocks trong Ruby, t\u1eeb kh\xe1i ni\u1ec7m c\u01a1 b\u1ea3n \u0111\u1ebfn c\xe1c k\u1ef9 thu\u1eadt n\xe2ng cao m\xe0 c\xe1c Ruby developer chuy\xean nghi\u1ec7p s\u1eed d\u1ee5ng h\xe0ng ng\xe0y."}),"\n",(0,l.jsx)(e.h2,{id:"ph\u1ea7n-1-kh\xe1i-ni\u1ec7m-c\u01a1-b\u1ea3n-v\u1ec1-ruby-blocks",children:"Ph\u1ea7n 1: Kh\xe1i Ni\u1ec7m C\u01a1 B\u1ea3n V\u1ec1 Ruby Blocks"}),"\n",(0,l.jsx)(e.h3,{id:"block-l\xe0-g\xec",children:"Block L\xe0 G\xec?"}),"\n",(0,l.jsx)(e.p,{children:"Block trong Ruby l\xe0 m\u1ed9t \u0111o\u1ea1n m\xe3 \u0111\u01b0\u1ee3c \u0111\xf3ng g\xf3i l\u1ea1i, c\xf3 th\u1ec3 truy\u1ec1n v\xe0o ph\u01b0\u01a1ng th\u1ee9c v\xe0 th\u1ef1c thi sau \u0111\xf3. Block c\xf3 hai c\xfa ph\xe1p ph\u1ed5 bi\u1ebfn:"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"do...end"})," (th\u01b0\u1eddng d\xf9ng cho block nhi\u1ec1u d\xf2ng):"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"[1, 2, 3].each do |number|\n  puts number * 2\nend\n"})}),"\n",(0,l.jsxs)(e.ol,{start:"2",children:["\n",(0,l.jsxs)(e.li,{children:["S\u1eed d\u1ee5ng d\u1ea5u ngo\u1eb7c nh\u1ecdn ",(0,l.jsx)(e.code,{children:"{}"})," (th\u01b0\u1eddng d\xf9ng cho block m\u1ed9t d\xf2ng):"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"[1, 2, 3].each { |number| puts number * 2 }\n"})}),"\n",(0,l.jsx)(e.h3,{id:"-duy\u1ec7t-qua-m\u1ea3ng-v\u1edbi-each",children:"\ud83d\udd04 Duy\u1ec7t Qua M\u1ea3ng V\u1edbi each"}),"\n",(0,l.jsxs)(e.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,l.jsx)(e.code,{children:"each"})," l\xe0 c\xe1ch ph\u1ed5 bi\u1ebfn nh\u1ea5t \u0111\u1ec3 l\xe0m vi\u1ec7c v\u1edbi collections trong Ruby:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'colors = ["\u0111\u1ecf", "xanh l\xe1", "xanh d\u01b0\u01a1ng"]\ncolors.each do |color|\n  puts "M\xe0u: #{color}"\nend\n# K\u1ebft qu\u1ea3:\n# M\xe0u: \u0111\u1ecf\n# M\xe0u: xanh l\xe1\n# M\xe0u: xanh d\u01b0\u01a1ng\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-l\u1eb7p-v\u1edbi-times",children:"\ud83d\udd01 L\u1eb7p V\u1edbi times"}),"\n",(0,l.jsxs)(e.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,l.jsx)(e.code,{children:"times"})," cho ph\xe9p b\u1ea1n th\u1ef1c hi\u1ec7n m\u1ed9t h\xe0nh \u0111\u1ed9ng nhi\u1ec1u l\u1ea7n:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'5.times do |i|\n  puts "L\u1ea7n l\u1eb7p th\u1ee9 #{i + 1}"\nend\n# K\u1ebft qu\u1ea3:\n# L\u1ea7n l\u1eb7p th\u1ee9 1\n# L\u1ea7n l\u1eb7p th\u1ee9 2\n# L\u1ea7n l\u1eb7p th\u1ee9 3\n# L\u1ea7n l\u1eb7p th\u1ee9 4\n# L\u1ea7n l\u1eb7p th\u1ee9 5\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-l\u1ecdc-d\u1eef-li\u1ec7u-v\u1edbi-select",children:"\ud83d\udd0d L\u1ecdc D\u1eef Li\u1ec7u V\u1edbi select"}),"\n",(0,l.jsxs)(e.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,l.jsx)(e.code,{children:"select"})," cho ph\xe9p b\u1ea1n l\u1ecdc c\xe1c ph\u1ea7n t\u1eed trong collection d\u1ef1a tr\xean m\u1ed9t \u0111i\u1ec1u ki\u1ec7n:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"numbers = [1, 2, 3, 4, 5, 6]\neven_numbers = numbers.select do |number|\n  number.even?\nend\nputs even_numbers.inspect  # [2, 4, 6]\n"})}),"\n",(0,l.jsx)(e.h3,{id:"-bi\u1ebfn-\u0111\u1ed5i-d\u1eef-li\u1ec7u-v\u1edbi-map",children:"\ud83d\udd04 Bi\u1ebfn \u0110\u1ed5i D\u1eef Li\u1ec7u V\u1edbi map"}),"\n",(0,l.jsxs)(e.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,l.jsx)(e.code,{children:"map"})," cho ph\xe9p b\u1ea1n bi\u1ebfn \u0111\u1ed5i m\u1ed7i ph\u1ea7n t\u1eed trong collection:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"numbers = [1, 2, 3, 4, 5]\nsquared = numbers.map do |number|\n  number * number\nend\nputs squared.inspect  # [1, 4, 9, 16, 25]\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\ufe0f-x\xe2y-d\u1ef1ng-ph\u01b0\u01a1ng-th\u1ee9c-t\xf9y-ch\u1ec9nh-v\u1edbi-yield",children:"\u2699\ufe0f X\xe2y D\u1ef1ng Ph\u01b0\u01a1ng Th\u1ee9c T\xf9y Ch\u1ec9nh V\u1edbi yield"}),"\n",(0,l.jsxs)(e.p,{children:["B\u1ea1n c\xf3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a c\xe1c ph\u01b0\u01a1ng th\u1ee9c c\u1ee7a ri\xeang m\xecnh nh\u1eadn v\xe0o block b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"yield"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def chao_hoi\n  puts "Tr\u01b0\u1edbc khi ch\xe0o h\u1ecfi"\n  yield if block_given?\n  puts "Sau khi ch\xe0o h\u1ecfi"\nend\n\nchao_hoi do\n  puts "Xin ch\xe0o t\u1eeb block!"\nend\n# K\u1ebft qu\u1ea3:\n# Tr\u01b0\u1edbc khi ch\xe0o h\u1ecfi\n# Xin ch\xe0o t\u1eeb block!\n# Sau khi ch\xe0o h\u1ecfi\n'})}),"\n",(0,l.jsx)(e.h3,{id:"\ufe0f-b\u1ea3o-v\u1ec7-v\u1edbi-block_given",children:"\ud83d\udee1\ufe0f B\u1ea3o V\u1ec7 V\u1edbi block_given?"}),"\n",(0,l.jsxs)(e.p,{children:["Ph\u01b0\u01a1ng th\u1ee9c ",(0,l.jsx)(e.code,{children:"block_given?"})," gi\xfap b\u1ea1n ki\u1ec3m tra xem m\u1ed9t block c\xf3 \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o ph\u01b0\u01a1ng th\u1ee9c hay kh\xf4ng:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def thuc_hien_neu_co_block\n  if block_given?\n    puts "Block \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o, th\u1ef1c thi n\xf3:"\n    yield\n  else\n    puts "Kh\xf4ng c\xf3 block n\xe0o \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o"\n  end\nend\n\nthuc_hien_neu_co_block  # "Kh\xf4ng c\xf3 block n\xe0o \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o"\nthuc_hien_neu_co_block { puts "Hello!" }  # "Block \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o, th\u1ef1c thi n\xf3:" v\xe0 "Hello!"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-qu\u1ea3n-l\xfd-t\xe0i-nguy\xean-file",children:"\ud83d\udcc1 Qu\u1ea3n L\xfd T\xe0i Nguy\xean File"}),"\n",(0,l.jsx)(e.p,{children:"Blocks r\u1ea5t h\u1eefu \xedch cho vi\u1ec7c qu\u1ea3n l\xfd t\xe0i nguy\xean, \u0111\u1ea3m b\u1ea3o r\u1eb1ng t\xe0i nguy\xean \u0111\u01b0\u1ee3c gi\u1ea3i ph\xf3ng \u0111\xfang c\xe1ch:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def doc_file(ten_file)\n  file = File.open(ten_file, "r")\n  yield(file)\nrescue => e\n  puts "L\u1ed7i: #{e.message}"\nensure\n  file.close if file\nend\n\ndoc_file("example.txt") do |f|\n  puts f.read\nend\n'})}),"\n",(0,l.jsx)(e.h2,{id:"ph\u1ea7n-2-k\u1ef9-thu\u1eadt-trung-c\u1ea5p-v\u1edbi-ruby-blocks",children:"Ph\u1ea7n 2: K\u1ef9 Thu\u1eadt Trung C\u1ea5p V\u1edbi Ruby Blocks"}),"\n",(0,l.jsxs)(e.h3,{id:"\ufe0f-s\u1eed-d\u1ee5ng-yield-v\u1edbi-tham-s\u1ed1",children:["\ud83d\udee0\ufe0f S\u1eed D\u1ee5ng ",(0,l.jsx)(e.code,{children:"yield"})," V\u1edbi Tham S\u1ed1"]}),"\n",(0,l.jsxs)(e.p,{children:["Truy\u1ec1n tham s\u1ed1 cho ",(0,l.jsx)(e.code,{children:"yield"})," cho ph\xe9p ng\u01b0\u1eddi g\u1ecdi t\xf9y ch\u1ec9nh h\xe0nh vi m\xe0 kh\xf4ng c\u1ea7n ti\u1ebfp x\xfac v\u1edbi c\xe1c bi\u1ebfn n\u1ed9i b\u1ed9:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def voi_ghi_nhat_ky\n  thoi_gian_bat_dau = Time.now\n  ket_qua = yield\n  thoi_gian = Time.now - thoi_gian_bat_dau\n  puts "Th\u1ef1c thi trong #{thoi_gian.round(2)}s"\n  ket_qua\nend\n\ngia_tri = voi_ghi_nhat_ky do\n  sleep(0.5)\n  "ho\xe0n th\xe0nh"\nend\n# => "ho\xe0n th\xe0nh" v\xe0 ghi log th\u1eddi gian th\u1ef1c thi\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-t\u1ea1o-iterator-t\xf9y-ch\u1ec9nh",children:"\ud83d\udd04 T\u1ea1o Iterator T\xf9y Ch\u1ec9nh"}),"\n",(0,l.jsxs)(e.p,{children:["B\u1ea1n c\xf3 th\u1ec3 t\u1ea1o iterator c\u1ee7a ri\xeang m\xecnh b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"yield"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def lap_lai_n_lan(n)\n  n.times do |i|\n    yield(i)\n  end\nend\n\nlap_lai_n_lan(3) do |i|\n  puts "L\u1ea7n l\u1eb7p th\u1ee9 #{i + 1}"\nend\n# K\u1ebft qu\u1ea3:\n# L\u1ea7n l\u1eb7p th\u1ee9 1\n# L\u1ea7n l\u1eb7p th\u1ee9 2\n# L\u1ea7n l\u1eb7p th\u1ee9 3\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-ph\u01b0\u01a1ng-th\u1ee9c-c\xf3-th\u1ec3-x\xe2u-chu\u1ed7i-v\u1edbi-blocks",children:"\ud83d\udd04 Ph\u01b0\u01a1ng Th\u1ee9c C\xf3 Th\u1ec3 X\xe2u Chu\u1ed7i V\u1edbi Blocks"}),"\n",(0,l.jsxs)(e.p,{children:["B\u1ea1n c\xf3 th\u1ec3 t\u1ea1o c\xe1c ph\u01b0\u01a1ng th\u1ee9c c\xf3 th\u1ec3 x\xe2u chu\u1ed7i b\u1eb1ng c\xe1ch tr\u1ea3 v\u1ec1 ",(0,l.jsx)(e.code,{children:"self"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"class MyArray\n  def initialize(array)\n    @array = array\n  end\n  \n  def transform\n    @array.map! { |item| yield(item) }\n    self\n  end\n  \n  def filter\n    @array.select! { |item| yield(item) }\n    self\n  end\n  \n  def display\n    puts @array.inspect\n    self\n  end\nend\n\narr = MyArray.new([1, 2, 3, 4, 5])\narr.transform { |n| n * 2 }\n   .filter { |n| n > 5 }\n   .display\n# K\u1ebft qu\u1ea3: [6, 8, 10]\n"})}),"\n",(0,l.jsx)(e.h3,{id:"-ki\u1ec3m-tra-s\u1ef1-hi\u1ec7n-di\u1ec7n-c\u1ee7a-block",children:"\ud83d\udd0d Ki\u1ec3m Tra S\u1ef1 Hi\u1ec7n Di\u1ec7n C\u1ee7a Block"}),"\n",(0,l.jsxs)(e.p,{children:["Ngo\xe0i ",(0,l.jsx)(e.code,{children:"block_given?"}),", b\u1ea1n c\xf3 th\u1ec3 s\u1eed d\u1ee5ng c\xe1c k\u1ef9 thu\u1eadt kh\xe1c \u0111\u1ec3 l\xe0m vi\u1ec7c v\u1edbi blocks:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def thuc_hien_voi_block(&block)\n  if block\n    puts "Block \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o nh\u01b0 m\u1ed9t tham s\u1ed1"\n    block.call\n  else\n    puts "Kh\xf4ng c\xf3 block n\xe0o \u0111\u01b0\u1ee3c truy\u1ec1n v\xe0o"\n  end\nend\n\nthuc_hien_voi_block { puts "Hello t\u1eeb block!" }\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-l\u1ecdc-v\xe0-bi\u1ebfn-\u0111\u1ed5i-collections",children:"\ud83d\udd04 L\u1ecdc V\xe0 Bi\u1ebfn \u0110\u1ed5i Collections"}),"\n",(0,l.jsxs)(e.p,{children:["K\u1ebft h\u1ee3p ",(0,l.jsx)(e.code,{children:"select"})," v\xe0 ",(0,l.jsx)(e.code,{children:"map"})," \u0111\u1ec3 x\u1eed l\xfd d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'users = [\n  { name: "Minh", age: 25, active: true },\n  { name: "Hoa", age: 17, active: true },\n  { name: "Nam", age: 30, active: false }\n]\n\nactive_user_names = users\n  .select { |user| user[:active] }\n  .select { |user| user[:age] >= 18 }\n  .map { |user| user[:name] }\n\nputs active_user_names.inspect  # ["Minh"]\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-x\u1eed-l\xfd-lu\u1ed3ng-\u0111i\u1ec1u-khi\u1ec3n-trong-blocks",children:"\ud83d\udd04 X\u1eed L\xfd Lu\u1ed3ng \u0110i\u1ec1u Khi\u1ec3n Trong Blocks"}),"\n",(0,l.jsx)(e.p,{children:"B\u1ea1n c\xf3 th\u1ec3 s\u1eed d\u1ee5ng c\xe1c c\xe2u l\u1ec7nh \u0111i\u1ec1u khi\u1ec3n lu\u1ed3ng trong blocks:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"result = [1, 2, 3, 4, 5].map do |n|\n  next 0 if n.even?  # B\u1ecf qua ph\u1ea7n c\xf2n l\u1ea1i c\u1ee7a block n\u1ebfu n ch\u1eb5n\n  n * 2\nend\n\nputs result.inspect  # [2, 0, 6, 0, 10]\n"})}),"\n",(0,l.jsx)(e.h2,{id:"ph\u1ea7n-3-k\u1ef9-thu\u1eadt-n\xe2ng-cao-v\u1edbi-ruby-blocks",children:"Ph\u1ea7n 3: K\u1ef9 Thu\u1eadt N\xe2ng Cao V\u1edbi Ruby Blocks"}),"\n",(0,l.jsx)(e.h3,{id:"-lazy-infinite-streams-v\u1edbi-enumeratorlazy",children:"\ud83d\udd04 Lazy Infinite Streams V\u1edbi Enumerator::Lazy"}),"\n",(0,l.jsxs)(e.p,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"Enumerator::Lazy"})," \u0111\u1ec3 x\xe2y d\u1ef1ng c\xe1c chu\u1ed7i v\xf4 h\u1ea1n, hi\u1ec7u qu\u1ea3 v\u1ec1 b\u1ed9 nh\u1edb:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"fib = Enumerator.new do |yielder|\n  a, b = [0, 1]\n  loop do\n    yielder << a\n    a, b = b, a + b\n  end\nend.lazy\n\n# L\u1ea5y 10 s\u1ed1 Fibonacci \u0111\u1ea7u ti\xean, map v\xe0 ch\u1ecdn s\u1ed1 ch\u1eb5n\nket_qua = fib.take(10)\n             .map { |n| n * 2 }\n             .select(&:even?)\n\np ket_qua.to_a  # [0, 4, 6, 16, 30]\n"})}),"\n",(0,l.jsx)(e.h3,{id:"-destructuring-block-parameters",children:"\ud83d\udd04 Destructuring Block Parameters"}),"\n",(0,l.jsx)(e.p,{children:"B\u1ea1n c\xf3 th\u1ec3 ph\xe2n r\xe3 c\xe1c tham s\u1ed1 block \u0111\u1ec3 l\xe0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'points = [[1, 2], [3, 4], [5, 6]]\n\npoints.each do |(x, y)|\n  puts "\u0110i\u1ec3m: (#{x}, #{y})"\nend\n# K\u1ebft qu\u1ea3:\n# \u0110i\u1ec3m: (1, 2)\n# \u0110i\u1ec3m: (3, 4)\n# \u0110i\u1ec3m: (5, 6)\n'})}),"\n",(0,l.jsx)(e.h3,{id:"\ufe0f-benchmark-blocks",children:"\u23f1\ufe0f Benchmark Blocks"}),"\n",(0,l.jsx)(e.p,{children:"S\u1eed d\u1ee5ng blocks \u0111\u1ec3 \u0111o hi\u1ec7u su\u1ea5t m\xe3:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def benchmark\n  start_time = Time.now\n  result = yield\n  end_time = Time.now\n  puts "Th\u1eddi gian th\u1ef1c thi: #{(end_time - start_time) * 1000} ms"\n  result\nend\n\nbenchmark do\n  # M\xe3 c\u1ea7n \u0111o hi\u1ec7u su\u1ea5t\n  sleep(0.1)\n  42\nend\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-retry-v\u1edbi-backoff",children:"\ud83d\udd04 Retry V\u1edbi Backoff"}),"\n",(0,l.jsx)(e.p,{children:"S\u1eed d\u1ee5ng blocks \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\xe1c chi\u1ebfn l\u01b0\u1ee3c retry ph\u1ee9c t\u1ea1p:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'def with_retry(max_attempts: 3, backoff: ->(n) { n * 2 })\n  attempts = 0\n  begin\n    attempts += 1\n    yield\n  rescue => e\n    if attempts < max_attempts\n      sleep_time = backoff.call(attempts)\n      puts "L\u1ed7i: #{e.message}. Th\u1eed l\u1ea1i sau #{sleep_time}s..."\n      sleep(sleep_time)\n      retry\n    else\n      puts "\u0110\xe3 th\u1eed #{max_attempts} l\u1ea7n, kh\xf4ng th\xe0nh c\xf4ng."\n      raise\n    end\n  end\nend\n\nwith_retry do\n  # M\xe3 c\xf3 th\u1ec3 g\xe2y ra l\u1ed7i\n  raise "L\u1ed7i k\u1ebft n\u1ed1i" if rand < 0.7\n  puts "Th\xe0nh c\xf4ng!"\nend\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-internal-dsl-v\u1edbi-instance_eval",children:"\ud83d\udd27 Internal DSL V\u1edbi instance_eval"}),"\n",(0,l.jsxs)(e.p,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"instance_eval"})," \u0111\u1ec3 t\u1ea1o DSL (Domain Specific Language) n\u1ed9i b\u1ed9:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'class FormBuilder\n  def initialize\n    @fields = []\n  end\n  \n  def build(&block)\n    instance_eval(&block)\n    self\n  end\n  \n  def text_field(name, options = {})\n    @fields << { type: :text, name: name, options: options }\n  end\n  \n  def submit(text)\n    @fields << { type: :submit, text: text }\n  end\n  \n  def to_html\n    # T\u1ea1o HTML t\u1eeb @fields\n    @fields.map { |field| render_field(field) }.join("\\n")\n  end\n  \n  private\n  \n  def render_field(field)\n    case field[:type]\n    when :text\n      "<input type=\'text\' name=\'#{field[:name]}\' />"\n    when :submit\n      "<button type=\'submit\'>#{field[:text]}</button>"\n    end\n  end\nend\n\nform = FormBuilder.new.build do\n  text_field :name, required: true\n  text_field :email\n  submit "G\u1eedi"\nend\n\nputs form.to_html\n'})}),"\n",(0,l.jsx)(e.h2,{id:"ph\u1ea7n-4-k\u1ef9-thu\u1eadt-chuy\xean-gia-v\u1edbi-ruby-blocks",children:"Ph\u1ea7n 4: K\u1ef9 Thu\u1eadt Chuy\xean Gia V\u1edbi Ruby Blocks"}),"\n",(0,l.jsx)(e.h3,{id:"-currying-v\xe0-composing-procs",children:"\ud83d\udd17 Currying V\xe0 Composing Procs"}),"\n",(0,l.jsxs)(e.p,{children:["Currying bi\u1ebfn \u0111\u1ed5i m\u1ed9t ",(0,l.jsx)(e.code,{children:"Proc"})," \u0111a tham s\u1ed1 th\xe0nh m\u1ed9t chu\u1ed7i c\xe1c h\xe0m, cho ph\xe9p \xe1p d\u1ee5ng m\u1ed9t ph\u1ea7n:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"# V\xed d\u1ee5 v\u1ec1 currying\nadder = ->(x, y, z) { x + y + z }.curry\nadd5and = adder.call(2, 3)   # Proc mong \u0111\u1ee3i m\u1ed9t tham s\u1ed1\nputs add5and.call(4)         # => 9\n\n# Helper cho composition\nclass Proc\n  def compose(other)\n    ->(*args) { self.call(other.call(*args)) }\n  end\nend\n\ndouble = ->(x) { x * 2 }\nsquare = ->(x) { x**2 }\nsquare_then_double = double.compose(square)\nputs square_then_double.call(3) # => 18\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\ufe0f-dynamic-define_method-v\u1edbi-block",children:"\u2699\ufe0f Dynamic define_method V\u1edbi Block"}),"\n",(0,l.jsxs)(e.p,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"define_method"})," v\u1edbi blocks \u0111\u1ec3 t\u1ea1o c\xe1c ph\u01b0\u01a1ng th\u1ee9c \u0111\u1ed9ng:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'class DynamicMethods\n  OPERATIONS = {\n    add: ->(a, b) { a + b },\n    subtract: ->(a, b) { a - b },\n    multiply: ->(a, b) { a * b },\n    divide: ->(a, b) { a / b.to_f }\n  }\n  \n  OPERATIONS.each do |name, operation|\n    define_method(name) do |a, b|\n      puts "Th\u1ef1c hi\u1ec7n ph\xe9p #{name} v\u1edbi #{a} v\xe0 #{b}"\n      operation.call(a, b)\n    end\n  end\nend\n\ncalc = DynamicMethods.new\nputs calc.add(5, 3)      # => 8\nputs calc.multiply(5, 3) # => 15\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-advanced-lazy-enumerator-chaining",children:"\ud83d\udd04 Advanced Lazy Enumerator Chaining"}),"\n",(0,l.jsx)(e.p,{children:"X\xe2u chu\u1ed7i c\xe1c lazy enumerator \u0111\u1ec3 x\u1eed l\xfd d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p m\u1ed9t c\xe1ch hi\u1ec7u qu\u1ea3:"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:"def prime?(num)\n  return false if num <= 1\n  (2..Math.sqrt(num).to_i).none? { |i| num % i == 0 }\nend\n\n# T\u1ea1o m\u1ed9t chu\u1ed7i v\xf4 h\u1ea1n c\xe1c s\u1ed1 nguy\xean t\u1ed1\nprimes = Enumerator.new do |yielder|\n  n = 1\n  loop do\n    n += 1\n    yielder << n if prime?(n)\n  end\nend.lazy\n\n# T\xecm 5 s\u1ed1 nguy\xean t\u1ed1 \u0111\u1ea7u ti\xean l\u1edbn h\u01a1n 100 v\xe0 chia h\u1ebft cho 3\nresult = primes\n  .select { |p| p > 100 }\n  .select { |p| p % 3 == 0 }\n  .take(5)\n\nputs result.to_a.inspect # [3, 5, 7, 11, 13]\n"})}),"\n",(0,l.jsx)(e.h3,{id:"-context-switch-v\u1edbi-instance_exec",children:"\ud83d\udd04 Context Switch V\u1edbi instance_exec"}),"\n",(0,l.jsxs)(e.p,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"instance_exec"})," \u0111\u1ec3 th\u1ef1c thi block trong ng\u1eef c\u1ea3nh c\u1ee7a m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng kh\xe1c:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'class User\n  attr_accessor :name, :age\n  \n  def initialize(name, age)\n    @name = name\n    @age = age\n  end\nend\n\nclass UserFormatter\n  def format(user, &block)\n    user.instance_exec(&block)\n  end\nend\n\nuser = User.new("Minh", 30)\nformatter = UserFormatter.new\n\nresult = formatter.format(user) do\n  "T\xean: #{name}, Tu\u1ed5i: #{age}"\nend\n\nputs result # "T\xean: Minh, Tu\u1ed5i: 30"\n'})}),"\n",(0,l.jsx)(e.h3,{id:"-block-instrumentation-v\u1edbi-prepend",children:"\ud83d\udd04 Block Instrumentation V\u1edbi Prepend"}),"\n",(0,l.jsxs)(e.p,{children:["S\u1eed d\u1ee5ng ",(0,l.jsx)(e.code,{children:"prepend"})," \u0111\u1ec3 th\xeam instrumentation cho c\xe1c ph\u01b0\u01a1ng th\u1ee9c m\xe0 kh\xf4ng s\u1eeda \u0111\u1ed5i m\xe3 ngu\u1ed3n g\u1ed1c:"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-ruby",children:'module Instrumentation\n  def self.instrument(klass, method_name)\n    mod = Module.new do\n      define_method(method_name) do |*args, &block|\n        start_time = Time.now\n        result = super(*args, &block)\n        end_time = Time.now\n        puts "#{klass}##{method_name} m\u1ea5t #{(end_time - start_time) * 1000}ms"\n        result\n      end\n    end\n    \n    klass.prepend(mod)\n  end\nend\n\nclass SlowCalculator\n  def calculate(n)\n    sleep(0.1)\n    n * 2\n  end\nend\n\nInstrumentation.instrument(SlowCalculator, :calculate)\n\ncalc = SlowCalculator.new\ncalc.calculate(5) # S\u1ebd in ra th\u1eddi gian th\u1ef1c thi\n'})}),"\n",(0,l.jsx)(e.h2,{id:"k\u1ebft-lu\u1eadn",children:"K\u1ebft Lu\u1eadn"}),"\n",(0,l.jsx)(e.p,{children:"Ruby blocks l\xe0 m\u1ed9t t\xednh n\u0103ng m\u1ea1nh m\u1ebd v\xe0 linh ho\u1ea1t, t\u1ea1o n\xean phong c\xe1ch l\u1eadp tr\xecnh \u0111\u1ed9c \u0111\xe1o c\u1ee7a Ruby. T\u1eeb c\xe1c t\xe1c v\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u01b0 duy\u1ec7t qua m\u1ea3ng \u0111\u1ebfn c\xe1c k\u1ef9 thu\u1eadt n\xe2ng cao nh\u01b0 t\u1ea1o DSL n\u1ed9i b\u1ed9 hay x\u1eed l\xfd lu\u1ed3ng d\u1eef li\u1ec7u v\xf4 h\u1ea1n, blocks \u0111\u1ec1u \u0111\xf3ng vai tr\xf2 quan tr\u1ecdng."}),"\n",(0,l.jsx)(e.p,{children:"Khi b\u1ea1n ti\u1ebfn b\u1ed9 t\u1eeb ng\u01b0\u1eddi m\u1edbi b\u1eaft \u0111\u1ea7u \u0111\u1ebfn chuy\xean gia Ruby, vi\u1ec7c n\u1eafm v\u1eefng v\xe0 s\u1eed d\u1ee5ng th\xe0nh th\u1ea1o blocks s\u1ebd gi\xfap b\u1ea1n vi\u1ebft m\xe3 ngu\u1ed3n s\u1ea1ch h\u01a1n, linh ho\u1ea1t h\u01a1n v\xe0 hi\u1ec7u qu\u1ea3 h\u01a1n. Blocks kh\xf4ng ch\u1ec9 l\xe0 m\u1ed9t c\xf4ng c\u1ee5 l\u1eadp tr\xecnh m\xe0 c\xf2n l\xe0 m\u1ed9t tri\u1ebft l\xfd thi\u1ebft k\u1ebf, khuy\u1ebfn kh\xedch t\xe1i s\u1eed d\u1ee5ng m\xe3 v\xe0 t\xe1ch bi\u1ec7t c\xe1c m\u1ed1i quan t\xe2m."}),"\n",(0,l.jsx)(e.p,{children:"H\xe3y th\u1eed nghi\u1ec7m v\u1edbi c\xe1c v\xed d\u1ee5 trong b\xe0i vi\u1ebft n\xe0y v\xe0 kh\xe1m ph\xe1 c\xe1ch blocks c\xf3 th\u1ec3 c\u1ea3i thi\u1ec7n m\xe3 Ruby c\u1ee7a b\u1ea1n. \u0110\u1eebng ng\u1ea1i s\u1eed d\u1ee5ng blocks \u0111\u1ec3 t\u1ea1o ra c\xe1c API linh ho\u1ea1t v\xe0 d\u1ec5 \u0111\u1ecdc cho c\xe1c d\u1ef1 \xe1n c\u1ee7a m\xecnh!"}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.p,{children:(0,l.jsx)(e.em,{children:"B\xe0i vi\u1ebft n\xe0y \u0111\u01b0\u1ee3c t\u1ed5ng h\u1ee3p t\u1eeb kinh nghi\u1ec7m th\u1ef1c t\u1ebf v\xe0 c\xe1c t\xe0i li\u1ec7u v\u1ec1 Ruby blocks. N\u1ebfu b\u1ea1n c\xf3 b\u1ea5t k\u1ef3 c\xe2u h\u1ecfi ho\u1eb7c g\xf3p \xfd n\xe0o, h\xe3y \u0111\u1ec3 l\u1ea1i b\xecnh lu\u1eadn b\xean d\u01b0\u1edbi."})})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(o,{...n})}):o(n)}}}]);