"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83457],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(36672);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},73338:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ruby/strings/beginner/string_interpolation","title":"string_interpolation","description":"\ud83d\ude80 String Interpolation","source":"@site/docs/ruby/strings/beginner/string_interpolation.md","sourceDirName":"ruby/strings/beginner","slug":"/ruby/strings/beginner/string_interpolation","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_interpolation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/beginner/string_interpolation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"string_indexing","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_indexing"},"next":{"title":"string_slicing","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_slicing"}}');var i=t(23420),s=t(65404);const o={},a=void 0,l={},c=[{value:"\ud83d\ude80 String Interpolation",id:"-string-interpolation",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-string-interpolation",children:"\ud83d\ude80 String Interpolation"}),"\n",(0,i.jsxs)(n.p,{children:["Ruby lets you embed expressions directly into double-quoted strings using ",(0,i.jsx)(n.code,{children:"#{}"})," syntax. This is more readable and safer than concatenation, especially when inserting variables or method calls. It only works in double-quoted or ",(0,i.jsx)(n.code,{children:"%Q"})," strings, not single-quoted ones."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'name = "Alice"\nage = 30\nputs "Hello, #{name}! You are #{age} years old."  # => Hello, Alice! You are 30 years old.\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);