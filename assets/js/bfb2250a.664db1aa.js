"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11837],{7815:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"gems/rspec/expert/hook_order_customization","title":"hook_order_customization","description":"\u2699\ufe0f Control Hook Order with around and Metadata","source":"@site/docs/gems/rspec/expert/hook_order_customization.md","sourceDirName":"gems/rspec/expert","slug":"/gems/rspec/expert/hook_order_customization","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/hook_order_customization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/expert/hook_order_customization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_formatters","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/custom_formatters"},"next":{"title":"metadata_dynamic_test_generation","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/metadata_dynamic_test_generation"}}');var n=o(23420),a=o(65404);const s={},c=void 0,d={},i=[{value:"\u2699\ufe0f Control Hook Order with <code>around</code> and Metadata",id:"\ufe0f-control-hook-order-with-around-and-metadata",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:"\ufe0f-control-hook-order-with-around-and-metadata",children:["\u2699\ufe0f Control Hook Order with ",(0,n.jsx)(t.code,{children:"around"})," and Metadata"]}),"\n",(0,n.jsxs)(t.p,{children:["Fine-tune your setup/teardown by leveraging ",(0,n.jsx)(t.code,{children:"around"})," hooks and custom metadata. Wrap your examples to orchestrate complex fixtures or external service lifecycles, ensuring deterministic teardown."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"RSpec.configure do |config|\n  config.around(:each, :custom_gateway) do |example|\n    gateway = ExternalGateway.setup(mode: :test)\n    example.run\n    gateway.teardown\n  end\nend\n\nRSpec.describe PaymentProcessor, :custom_gateway do\n  it 'processes with external gateway stubbed' do\n    expect(ExternalGateway).to receive(:process).and_return(true)\n    expect(processor.charge(amount)).to be_truthy\n  end\nend\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>c});var r=o(36672);const n={},a=r.createContext(n);function s(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);