"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[76779],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>d});var r=i(36672);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},76609:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/engines_and_plugins/expert/railtie_middleware_hooks","title":"railtie_middleware_hooks","description":"\ud83e\udde9 Inject and Reorder Middleware via Engine Railties","source":"@site/docs/rails/engines_and_plugins/expert/railtie_middleware_hooks.md","sourceDirName":"rails/engines_and_plugins/expert","slug":"/rails/engines_and_plugins/expert/railtie_middleware_hooks","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/expert/railtie_middleware_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/engines_and_plugins/expert/railtie_middleware_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"optimize_engine_loading","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/expert/optimize_engine_loading"},"next":{"title":"configuring_engine_initializers","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/middle/configuring_engine_initializers"}}');var t=i(23420),a=i(65404);const s={},d=void 0,o={},l=[{value:"\ud83e\udde9 Inject and Reorder Middleware via Engine Railties",id:"-inject-and-reorder-middleware-via-engine-railties",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-inject-and-reorder-middleware-via-engine-railties",children:"\ud83e\udde9 Inject and Reorder Middleware via Engine Railties"}),"\n",(0,t.jsxs)(n.p,{children:["Expert engines can hook into the middleware stack of the host app to add or reorder middleware. Inside your engine\u2019s Railtie, use ",(0,t.jsx)(n.code,{children:"config.app_middleware"})," to precisely position your middleware relative to existing ones."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# lib/my_engine/railtie.rb\nmodule MyEngine\n  class Railtie < ::Rails::Railtie\n    initializer "my_engine.insert_middleware" do |app|\n      # Insert before Rack::Runtime\n      app.config.app_middleware.insert_before ActionDispatch::Static, "MyEngine::CustomLogger"\n\n      # Swap out a default middleware\n      app.config.app_middleware.swap ActionDispatch::Cookies, MyEngine::EncryptedCookies\n    end\n  end\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:"This approach lets you add cross-cutting concerns like logging, rate limiting, or feature flag checks exactly where needed in the stack."})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);