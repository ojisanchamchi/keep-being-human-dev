"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50858],{4105:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"ruby/compression/beginner/create_zip_archive","title":"create_zip_archive","description":"\ud83d\udddc\ufe0f Create a Zip Archive with Rubyzip","source":"@site/docs/ruby/compression/beginner/create_zip_archive.md","sourceDirName":"ruby/compression/beginner","slug":"/ruby/compression/beginner/create_zip_archive","permalink":"/keep-being-human-dev/docs/ruby/compression/beginner/create_zip_archive","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/compression/beginner/create_zip_archive.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"compress_with_gzip","permalink":"/keep-being-human-dev/docs/ruby/compression/beginner/compress_with_gzip"},"next":{"title":"streaming_chunked_gzip_compression","permalink":"/keep-being-human-dev/docs/ruby/compression/expert/streaming_chunked_gzip_compression"}}');var t=n(23420),s=n(65404);const c={},o=void 0,a={},p=[{value:"\ud83d\udddc\ufe0f Create a Zip Archive with Rubyzip",id:"\ufe0f-create-a-zip-archive-with-rubyzip",level:2}];function u(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"\ufe0f-create-a-zip-archive-with-rubyzip",children:"\ud83d\udddc\ufe0f Create a Zip Archive with Rubyzip"}),"\n",(0,t.jsxs)(i.p,{children:["The ",(0,t.jsx)(i.code,{children:"rubyzip"})," gem lets you bundle multiple files into a single ZIP. First install it with ",(0,t.jsx)(i.code,{children:"gem install rubyzip"}),". Then open a ",(0,t.jsx)(i.code,{children:"Zip::File"})," and add files one by one."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:"require 'zip'\n\nfiles_to_zip = ['file1.txt', 'file2.txt']\noutput_zip  = 'archive.zip'\n\nZip::File.open(output_zip, Zip::File::CREATE) do |zipfile|\n  files_to_zip.each do |filename|\n    zipfile.add(File.basename(filename), filename)\n  end\nend\n"})})]})}function l(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var r=n(36672);const t={},s=r.createContext(t);function c(e){const i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);