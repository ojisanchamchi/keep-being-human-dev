"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83970],{65404:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var a=s(36672);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},74076:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"ruby/json/middle/json_schema_validation","title":"json_schema_validation","description":"\u2705 Validate JSON with json-schema Gem","source":"@site/docs/ruby/json/middle/json_schema_validation.md","sourceDirName":"ruby/json/middle","slug":"/ruby/json/middle/json_schema_validation","permalink":"/keep-being-human-dev/docs/ruby/json/middle/json_schema_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/json/middle/json_schema_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"customize_model_serialization","permalink":"/keep-being-human-dev/docs/ruby/json/middle/customize_model_serialization"},"next":{"title":"streaming_json_parsing","permalink":"/keep-being-human-dev/docs/ruby/json/middle/streaming_json_parsing"}}');var t=s(23420),i=s(65404);const o={},r=void 0,d={},c=[{value:"\u2705 Validate JSON with json-schema Gem",id:"-validate-json-with-json-schema-gem",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-validate-json-with-json-schema-gem",children:"\u2705 Validate JSON with json-schema Gem"}),"\n",(0,t.jsxs)(n.p,{children:["To enforce payload structure, use the ",(0,t.jsx)(n.code,{children:"json-schema"})," gem for schema validation. Define a JSON Schema file and validate incoming data against it, responding with clear error messages on mismatches."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# Gemfile\ngem \'json-schema\'\n\n# Define schema in JSON\nschema = {\n  "type" => "object",\n  "required" => ["name","age"],\n  "properties" => {\n    "name" => {"type" => "string"},\n    "age" => {"type" => "integer","minimum" => 0}\n  }\n}\n\n# Validate payload\nbegin\n  JSON::Validator.validate!(schema, payload)\n  # proceed if valid\nrescue JSON::Schema::ValidationError => e\n  render json: { error: e.message }, status: :unprocessable_entity\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:"This ensures your Ruby app only processes well-formed JSON, reducing runtime errors and data inconsistencies."})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);