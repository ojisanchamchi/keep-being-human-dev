"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50874],{57797:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/profiling/expert/thread_wall_time_profiling","title":"thread_wall_time_profiling","description":"\ud83e\uddf5 Profiling Thread & Fiber CPU Contention via ThreadWallTimePrinter","source":"@site/docs/ruby/profiling/expert/thread_wall_time_profiling.md","sourceDirName":"ruby/profiling/expert","slug":"/ruby/profiling/expert/thread_wall_time_profiling","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/thread_wall_time_profiling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/profiling/expert/thread_wall_time_profiling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"stackprof_flamegraph","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/stackprof_flamegraph"},"next":{"title":"benchmark_bm_usage","permalink":"/keep-being-human-dev/docs/ruby/profiling/middle/benchmark_bm_usage"}}');var i=n(23420),a=n(65404);const o={},l=void 0,s={},d=[{value:"\ud83e\uddf5 Profiling Thread &amp; Fiber CPU Contention via ThreadWallTimePrinter",id:"-profiling-thread--fiber-cpu-contention-via-threadwalltimeprinter",level:2}];function p(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"-profiling-thread--fiber-cpu-contention-via-threadwalltimeprinter",children:"\ud83e\uddf5 Profiling Thread & Fiber CPU Contention via ThreadWallTimePrinter"}),"\n",(0,i.jsx)(r.p,{children:"RubyProf supports THREAD_WALL_TIME mode to attribute time spent in threads and fibers, revealing contention or GIL\u2011induced waits. Use ThreadFlatPrinter for a concise table of hot methods across threads."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"require 'ruby-prof'\n\nRubyProf.measure_mode = RubyProf::THREAD_WALL_TIME\nresult = RubyProf.profile do\n  threads = 5.times.map do\n    Thread.new { heavy_workload }  # CPU\u2011bound tasks\n  end\n  threads.each(&:join)\nend\n\nprinter = RubyProf::ThreadFlatPrinter.new(result)\nprinter.print(STDOUT, {})\n"})})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var t=n(36672);const i={},a=t.createContext(i);function o(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);