"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61291],{28784:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"ruby/benchmarking/middle/benchmark_bmbm","title":"benchmark_bmbm","description":"\ud83e\uddea Leveraging Benchmark.bmbm for Accurate Comparisons","source":"@site/docs/ruby/benchmarking/middle/benchmark_bmbm.md","sourceDirName":"ruby/benchmarking/middle","slug":"/ruby/benchmarking/middle/benchmark_bmbm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_bmbm","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/middle/benchmark_bmbm.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_bm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_bm"},"next":{"title":"benchmark_realtime","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_realtime"}}');var t=r(23420),m=r(65404);const c={},i=void 0,o={},s=[{value:"\ud83e\uddea Leveraging Benchmark.bmbm for Accurate Comparisons",id:"-leveraging-benchmarkbmbm-for-accurate-comparisons",level:2}];function b(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,m.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-leveraging-benchmarkbmbm-for-accurate-comparisons",children:"\ud83e\uddea Leveraging Benchmark.bmbm for Accurate Comparisons"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"bmbm"})," method runs each block twice\u2014first in a rehearsal phase and then for real\u2014to help eliminate first-run anomalies like JIT warm-up or GC overhead. This yields more reliable comparison results when benchmarking multiple implementations. You can use it just like ",(0,t.jsx)(n.code,{children:"bm"})," but get better consistency."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\nBenchmark.bmbm(12) do |x|\n  x.report('string +')     { 100_000.times { 'a' + 'b' } }\n  x.report('interpolation'){ 100_000.times { \"\x7f{\"a\"}\"{\"b\"}\" } }\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,m.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(b,{...e})}):b(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var a=r(36672);const t={},m=a.createContext(t);function c(e){const n=a.useContext(m);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(m.Provider,{value:n},e.children)}}}]);