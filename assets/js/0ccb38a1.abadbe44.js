"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[52924],{65404:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var a=r(36672);const n={},s=a.createContext(n);function c(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),a.createElement(s.Provider,{value:t},e.children)}},88272:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/active_record_callbacks/beginner/before_create_default_status","title":"before_create_default_status","description":"\ud83d\ude80 Setting Defaults with before_create","source":"@site/docs/rails/active_record_callbacks/beginner/before_create_default_status.md","sourceDirName":"rails/active_record_callbacks/beginner","slug":"/rails/active_record_callbacks/beginner/before_create_default_status","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_create_default_status","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/beginner/before_create_default_status.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"after_save_cache_clear","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/after_save_cache_clear"},"next":{"title":"before_save_callback","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_save_callback"}}');var n=r(23420),s=r(65404);const c={},i=void 0,o={},l=[{value:"\ud83d\ude80 Setting Defaults with <code>before_create</code>",id:"-setting-defaults-with-before_create",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:"-setting-defaults-with-before_create",children:["\ud83d\ude80 Setting Defaults with ",(0,n.jsx)(t.code,{children:"before_create"})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"before_create"})," runs only on new records before the first insert. Use it to assign default statuses or tokens that should never change afterward."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"class Subscription < ApplicationRecord\n  before_create :assign_uuid\n\n  private\n\n  def assign_uuid\n    self.uuid = SecureRandom.uuid\n  end\nend\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This ensures every subscription gets a unique ",(0,n.jsx)(t.code,{children:"uuid"})," only once at creation."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);