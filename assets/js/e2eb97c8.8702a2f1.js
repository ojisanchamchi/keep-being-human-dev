"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[51874],{65404:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var r=n(36672);const t={},a=r.createContext(t);function i(e){const s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:s},e.children)}},99749:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"gems/rspec/beginner/rspec_shared_examples","title":"rspec_shared_examples","description":"\ud83d\udd04 Sharing Behavior with shared_examples","source":"@site/docs/gems/rspec/beginner/rspec_shared_examples.md","sourceDirName":"gems/rspec/beginner","slug":"/gems/rspec/beginner/rspec_shared_examples","permalink":"/keep-being-human-dev/docs/gems/rspec/beginner/rspec_shared_examples","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/beginner/rspec_shared_examples.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rspec_setup","permalink":"/keep-being-human-dev/docs/gems/rspec/beginner/rspec_setup"},"next":{"title":"rspec_subject_definition","permalink":"/keep-being-human-dev/docs/gems/rspec/beginner/rspec_subject_definition"}}');var t=n(23420),a=n(65404);const i={},c=void 0,o={},d=[{value:"\ud83d\udd04 Sharing Behavior with shared_examples",id:"-sharing-behavior-with-shared_examples",level:2}];function p(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-sharing-behavior-with-shared_examples",children:"\ud83d\udd04 Sharing Behavior with shared_examples"}),"\n",(0,t.jsxs)(s.p,{children:["Use ",(0,t.jsx)(s.code,{children:"shared_examples"})," to define common tests that can be reused across multiple contexts. This avoids duplication when you're testing similar behavior in different classes."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"RSpec.shared_examples 'a timestamped model' do\n  it 'has created_at set' do\n    expect(record.created_at).not_to be_nil\n  end\nend\n\nRSpec.describe Post do\n  let(:record) { Post.create }\n  it_behaves_like 'a timestamped model'\nend\n"})})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);