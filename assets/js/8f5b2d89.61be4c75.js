"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27211],{13386:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"gems/image_processing/middle/variants_resizing_format","title":"variants_resizing_format","description":"\ud83d\uddbc\ufe0f Resize and Convert Image Variants","source":"@site/docs/gems/image_processing/middle/variants_resizing_format.md","sourceDirName":"gems/image_processing/middle","slug":"/gems/image_processing/middle/variants_resizing_format","permalink":"/keep-being-human-dev/docs/gems/image_processing/middle/variants_resizing_format","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/image_processing/middle/variants_resizing_format.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"chain_transformations","permalink":"/keep-being-human-dev/docs/gems/image_processing/middle/chain_transformations"},"next":{"title":"composite_with_masks","permalink":"/keep-being-human-dev/docs/gems/mini_magick/advanced/composite_with_masks"}}');var i=a(23420),s=a(65404);const r={},o=void 0,c={},m=[{value:"\ud83d\uddbc\ufe0f Resize and Convert Image Variants",id:"\ufe0f-resize-and-convert-image-variants",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-resize-and-convert-image-variants",children:"\ud83d\uddbc\ufe0f Resize and Convert Image Variants"}),"\n",(0,i.jsx)(n.p,{children:"ActiveStorage\u2019s variants leverage the image_processing gem under the hood to resize, crop, and convert formats on-the-fly. Defining a variant in your model keeps view code clean and DRY. Here\u2019s how to generate a JPEG thumbnail with quality settings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# app/models/photo.rb\nclass Photo < ApplicationRecord\n  has_one_attached :image\n\n  def thumbnail\n    image.variant(\n      resize_to_limit: [150, 150],\n      format: :jpeg,\n      saver: { quality: 80 }\n    )\n  end\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then render in your view:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erb",children:'<%= image_tag @photo.thumbnail, alt: "Photo thumbnail" %>\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var t=a(36672);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);