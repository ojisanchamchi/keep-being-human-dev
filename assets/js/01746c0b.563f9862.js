"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97324],{141:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_support/middle/hash_with_indifferent_access","title":"hash_with_indifferent_access","description":"\ud83d\uddc2\ufe0f HashWithIndifferentAccess for Symbol/String Keys","source":"@site/docs/rails/active_support/middle/hash_with_indifferent_access.md","sourceDirName":"rails/active_support/middle","slug":"/rails/active_support/middle/hash_with_indifferent_access","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/hash_with_indifferent_access","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_support/middle/hash_with_indifferent_access.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"enumerable_in_groups_of","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/enumerable_in_groups_of"},"next":{"title":"notifications_instrumentation","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/notifications_instrumentation"}}');var i=t(23420),r=t(65404);const o={},a=void 0,c={},d=[{value:"\ud83d\uddc2\ufe0f <code>HashWithIndifferentAccess</code> for Symbol/String Keys",id:"\ufe0f-hashwithindifferentaccess-for-symbolstring-keys",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h2,{id:"\ufe0f-hashwithindifferentaccess-for-symbolstring-keys",children:["\ud83d\uddc2\ufe0f ",(0,i.jsx)(s.code,{children:"HashWithIndifferentAccess"})," for Symbol/String Keys"]}),"\n",(0,i.jsxs)(s.p,{children:["Rails provides ",(0,i.jsx)(s.code,{children:"with_indifferent_access"})," to allow both string and symbol key access on hashes. This is especially handy when merging params or configuration hashes from mixed sources."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:'config = { "host" => "localhost", port: 3000 }.with_indifferent_access\nconfig[:host]   # => "localhost"\nconfig["port"] # => 3000\n'})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(36672);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);