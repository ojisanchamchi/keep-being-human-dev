"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24639],{20216:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/exceptions/advanced/exception_notification_integration","title":"exception_notification_integration","description":"\ud83d\udea8 Integrate Exception Notifications","source":"@site/docs/ruby/exceptions/advanced/exception_notification_integration.md","sourceDirName":"ruby/exceptions/advanced","slug":"/ruby/exceptions/advanced/exception_notification_integration","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/exception_notification_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/exceptions/advanced/exception_notification_integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"exception_cause_chaining","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/exception_cause_chaining"},"next":{"title":"retry_with_exponential_backoff","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/retry_with_exponential_backoff"}}');var o=i(23420),a=i(65404);const c={},r=void 0,s={},d=[{value:"\ud83d\udea8 Integrate Exception Notifications",id:"-integrate-exception-notifications",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-integrate-exception-notifications",children:"\ud83d\udea8 Integrate Exception Notifications"}),"\n",(0,o.jsx)(n.p,{children:"Automatically alert on critical exceptions in web requests or background jobs by integrating exception_notification. This ensures your team is notified via email, Slack, or other channels whenever a failure occurs. Configure notifier middleware and customize filters to avoid noise."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'exception_notification'\n\n# config/initializers/exception_notification.rb\nRails.application.config.middleware.use ExceptionNotification::Rack,\n  email: {\n    email_prefix: \"[Error] \",\n    sender_address: %{\"Notifier\" <notifier@example.com>},\n    exception_recipients: %w{devs@example.com}\n  },\n  ignore_exceptions: ExceptionNotifier.ignored_exceptions + ['Payments::CurrencyMismatch']\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now any unhandled exceptions will trigger an email notification, filtered by your ignore list."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(36672);const o={},a=t.createContext(o);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);