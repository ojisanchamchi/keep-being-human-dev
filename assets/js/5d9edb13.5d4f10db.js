"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[88988],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(36672);const a={},c=s.createContext(a);function i(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(c.Provider,{value:n},e.children)}},74943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"gems/vcr/middle/dynamic_cassette_naming","title":"dynamic_cassette_naming","description":"\ud83c\udfac Dynamic Cassette Naming in RSpec","source":"@site/docs/gems/vcr/middle/dynamic_cassette_naming.md","sourceDirName":"gems/vcr/middle","slug":"/gems/vcr/middle/dynamic_cassette_naming","permalink":"/keep-being-human-dev/docs/gems/vcr/middle/dynamic_cassette_naming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/middle/dynamic_cassette_naming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_request_matchers","permalink":"/keep-being-human-dev/docs/gems/vcr/middle/custom_request_matchers"},"next":{"title":"nested_slots","permalink":"/keep-being-human-dev/docs/gems/view_component/advanced/nested_slots"}}');var a=t(23420),c=t(65404);const i={},r=void 0,d={},o=[{value:"\ud83c\udfac Dynamic Cassette Naming in RSpec",id:"-dynamic-cassette-naming-in-rspec",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-dynamic-cassette-naming-in-rspec",children:"\ud83c\udfac Dynamic Cassette Naming in RSpec"}),"\n",(0,a.jsx)(n.p,{children:"When you have many examples hitting external APIs, static cassette names can collide or become hard to track. Leveraging RSpec example metadata lets you generate unique, descriptive cassette names automatically. This approach keeps your recordings organized and simplifies debugging when a specific test fails."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# spec/support/vcr.rb\nRSpec.configure do |config|\n  config.around(:each, :vcr) do |example|\n    cassette_name = example.metadata[:full_description]\n                       .underscore\n                       .gsub(/[^a-z0-9_]+/, \"_\")\n                       .gsub(/(^_|_$)/, \"\")\n\n    VCR.use_cassette(cassette_name) do\n      example.run\n    end\n  end\nend\n\n# spec/my_service_spec.rb\nRSpec.describe MyService do\n  it 'fetches data from API', :vcr do\n    result = MyService.fetch_data\n    expect(result).to include('status' => 'ok')\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);