"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97593],{65404:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(36672);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},97042:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/syntax/beginner/understanding_blocks","title":"understanding_blocks","description":"\ud83d\udd01 Understanding Blocks","source":"@site/docs/ruby/syntax/beginner/understanding_blocks.md","sourceDirName":"ruby/syntax/beginner","slug":"/ruby/syntax/beginner/understanding_blocks","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/understanding_blocks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/beginner/understanding_blocks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"symbols_vs_strings","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/symbols_vs_strings"},"next":{"title":"using_variables","permalink":"/keep-being-human-dev/docs/ruby/syntax/beginner/using_variables"}}');var r=s(23420),i=s(65404);const o={},a=void 0,c={},d=[{value:"\ud83d\udd01 Understanding Blocks",id:"-understanding-blocks",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-understanding-blocks",children:"\ud83d\udd01 Understanding Blocks"}),"\n",(0,r.jsxs)(n.p,{children:["Blocks are anonymous functions you can pass to methods. They capture surrounding context and can be invoked with ",(0,r.jsx)(n.code,{children:"yield"}),". Use blocks for simple callbacks or custom iteration logic."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'def repeat(times)\n  times.times { yield }\nend\n\nrepeat(3) { puts "Hi!" }\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);