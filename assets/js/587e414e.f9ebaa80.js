"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26020],{29263:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/classes_and_modules/expert/proxy_method_missing","title":"proxy_method_missing","description":"\ud83d\udd2e Building Dynamic Proxies with methodmissing and respondto_missing?","source":"@site/docs/ruby/classes_and_modules/expert/proxy_method_missing.md","sourceDirName":"ruby/classes_and_modules/expert","slug":"/ruby/classes_and_modules/expert/proxy_method_missing","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/proxy_method_missing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/expert/proxy_method_missing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"prepend_method_wrappers","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/prepend_method_wrappers"},"next":{"title":"refinements_scoped_monkey_patches","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/refinements_scoped_monkey_patches"}}');var i=s(23420),o=s(65404);const r={},d=void 0,a={},c=[{value:"\ud83d\udd2e Building Dynamic Proxies with <code>method_missing</code> and <code>respond_to_missing?</code>",id:"-building-dynamic-proxies-with-method_missing-and-respond_to_missing",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"-building-dynamic-proxies-with-method_missing-and-respond_to_missing",children:["\ud83d\udd2e Building Dynamic Proxies with ",(0,i.jsx)(n.code,{children:"method_missing"})," and ",(0,i.jsx)(n.code,{children:"respond_to_missing?"})]}),"\n",(0,i.jsxs)(n.p,{children:["Implement ",(0,i.jsx)(n.code,{children:"method_missing"})," alongside ",(0,i.jsx)(n.code,{children:"respond_to_missing?"})," to craft transparent proxies or delegators. This pattern underpins ORMs or RPC clients that map arbitrary method names to remote calls."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class RemoteProxy\n  def initialize(client)\n    @client = client\n  end\n\n  def method_missing(name, *args)\n    if name.to_s.start_with?('get_')\n      @client.call_api(name.to_s.sub('get_', ''), *args)\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, _)\n    name.to_s.start_with?('get_') || super\n  end\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Always implement ",(0,i.jsx)(n.code,{children:"respond_to_missing?"})," to keep introspection libraries happy."]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(36672);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);