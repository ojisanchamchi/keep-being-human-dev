"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[71759],{18686:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/syntax/advanced/numbered_block_parameters","title":"numbered_block_parameters","description":"\ud83d\udd22 Leverage Numbered Block Parameters","source":"@site/docs/ruby/syntax/advanced/numbered_block_parameters.md","sourceDirName":"ruby/syntax/advanced","slug":"/ruby/syntax/advanced/numbered_block_parameters","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/numbered_block_parameters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/advanced/numbered_block_parameters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"keyword_splat_destructuring","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/keyword_splat_destructuring"},"next":{"title":"pattern_matching_destructuring","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/pattern_matching_destructuring"}}');var a=n(23420),s=n(65404);const c={},o=void 0,d={},u=[{value:"\ud83d\udd22 Leverage Numbered Block Parameters",id:"-leverage-numbered-block-parameters",level:2}];function i(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"-leverage-numbered-block-parameters",children:"\ud83d\udd22 Leverage Numbered Block Parameters"}),"\n",(0,a.jsxs)(r.p,{children:["Ruby 2.7+ lets you use numbered parameters (",(0,a.jsx)(r.code,{children:"_1"}),", ",(0,a.jsx)(r.code,{children:"_2"}),", etc.) in blocks without naming arguments. This is ideal for short iterators where naming each parameter is verbose."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ruby",children:'# Map an array of coordinates to strings\ncoords = [ [10, 20], [30, 40], [50, 60] ]\nstrings = coords.map { "x=#{_1}, y=#{_2}" }\nputs strings\n# => ["x=10, y=20", "x=30, y=40", "x=50, y=60"]\n\n# Chaining with enumerable methods\n[1, 2, 3].select { _1.odd? }.map { _1 * 10 }\n# => [10, 30]\n'})})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>o});var t=n(36672);const a={},s=t.createContext(a);function c(e){const r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);