"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79703],{19300:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/variables/middle/parallel_assignment_and_splat","title":"parallel_assignment_and_splat","description":"\ud83d\udd04 Use Parallel Assignment and the Splat Operator","source":"@site/docs/ruby/variables/middle/parallel_assignment_and_splat.md","sourceDirName":"ruby/variables/middle","slug":"/ruby/variables/middle/parallel_assignment_and_splat","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/parallel_assignment_and_splat","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/variables/middle/parallel_assignment_and_splat.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"memoization_with_or_equal","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/memoization_with_or_equal"},"next":{"title":"high_performance_ox","permalink":"/keep-being-human-dev/docs/ruby/xml/advanced/high_performance_ox"}}');var s=n(23420),r=n(65404);const l={},i=void 0,o={},d=[{value:"\ud83d\udd04 Use Parallel Assignment and the Splat Operator",id:"-use-parallel-assignment-and-the-splat-operator",level:2}];function p(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h2,{id:"-use-parallel-assignment-and-the-splat-operator",children:"\ud83d\udd04 Use Parallel Assignment and the Splat Operator"}),"\n",(0,s.jsxs)(a.p,{children:["Parallel assignment lets you assign multiple variables in one line, and the splat operator (",(0,s.jsx)(a.code,{children:"*"}),") handles remaining values or collects arguments. This makes your code more concise and expressive when working with arrays or method parameters."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ruby",children:'# Parallel assignment\nfirst, second, third = ["Alice", "Bob", "Charlie"]\nputs first   # => "Alice"\nputs second  # => "Bob"\nputs third   # => "Charlie"\n\n# Using splat to grab the rest\nhead, *tail = [1, 2, 3, 4]\nputs head    # => 1\nputs tail    # => [2, 3, 4]\n\n# Swapping variables without a temp\na, b = b, a\n'})})]})}function c(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>i});var t=n(36672);const s={},r=t.createContext(s);function l(e){const a=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);