"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[114],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var c=t(36672);const r={},a=c.createContext(r);function o(e){const n=c.useContext(a);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),c.createElement(a.Provider,{value:n},e.children)}},70964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});const c=JSON.parse('{"id":"rails/performance/beginner/counter_cache_usage","title":"counter_cache_usage","description":"\ud83d\udcca Leverage counter_cache","source":"@site/docs/rails/performance/beginner/counter_cache_usage.md","sourceDirName":"rails/performance/beginner","slug":"/rails/performance/beginner/counter_cache_usage","permalink":"/keep-being-human-dev/docs/rails/performance/beginner/counter_cache_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/beginner/counter_cache_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"add_database_indexes","permalink":"/keep-being-human-dev/docs/rails/performance/beginner/add_database_indexes"},"next":{"title":"eager_loading_includes","permalink":"/keep-being-human-dev/docs/rails/performance/beginner/eager_loading_includes"}}');var r=t(23420),a=t(65404);const o={},s=void 0,i={},u=[{value:"\ud83d\udcca Leverage counter_cache",id:"-leverage-counter_cache",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-leverage-counter_cache",children:"\ud83d\udcca Leverage counter_cache"}),"\n",(0,r.jsxs)(n.p,{children:["Counting associated records repeatedly is inefficient. Use Rails\u2019 ",(0,r.jsx)(n.code,{children:"counter_cache"})," to maintain a count column on the parent model, avoiding ",(0,r.jsx)(n.code,{children:"COUNT(*)"})," queries."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# Migration to add comments_count to posts\nadd_column :posts, :comments_count, :integer, default: 0, null: false\n\n# Comment model\nclass Comment < ApplicationRecord\n  belongs_to :post, counter_cache: true\nend\n\n# Now you can display post.comments_count directly\n<%= @post.comments_count %> comments\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);