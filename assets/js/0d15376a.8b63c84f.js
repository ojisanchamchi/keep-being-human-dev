"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23244],{45921:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"ruby/metaprogramming/middle/scoped_refinements","title":"scoped_refinements","description":"\ud83d\udee1 Scoped Monkey Patching with Refinements","source":"@site/docs/ruby/metaprogramming/middle/scoped_refinements.md","sourceDirName":"ruby/metaprogramming/middle","slug":"/ruby/metaprogramming/middle/scoped_refinements","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/scoped_refinements","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/middle/scoped_refinements.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_fallback","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/method_missing_fallback"},"next":{"title":"caching_missing_methods","permalink":"/keep-being-human-dev/docs/ruby/method_missing/advanced/caching_missing_methods"}}');var s=t(23420),r=t(65404);const o={},d=void 0,a={},m=[{value:"\ud83d\udee1 Scoped Monkey Patching with Refinements",id:"-scoped-monkey-patching-with-refinements",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-scoped-monkey-patching-with-refinements",children:"\ud83d\udee1 Scoped Monkey Patching with Refinements"}),"\n",(0,s.jsx)(n.p,{children:"Refinements let you apply monkey patches in a limited scope. This avoids global side effects while still leveraging core extensions when needed."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'module StringExtensions\n  refine String do\n    def shout\n      upcase + "!"\n    end\n  end\nend\n\nclass Greeter\n  using StringExtensions\n\n  def greet(name)\n    name.shout\n  end\nend\n\nputs Greeter.new.greet(\'hello\')  # => "HELLO!"\n# Outside Greeter, "hello".shout is undefined\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(36672);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);