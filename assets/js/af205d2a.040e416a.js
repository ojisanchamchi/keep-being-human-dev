"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[63116],{23252:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rails/command_line/expert/custom-rails-cli-commands-railtie","title":"custom-rails-cli-commands-railtie","description":"\u2699\ufe0f Creating Custom Rails CLI Commands with Railties","source":"@site/docs/rails/command_line/expert/custom-rails-cli-commands-railtie.md","sourceDirName":"rails/command_line/expert","slug":"/rails/command_line/expert/custom-rails-cli-commands-railtie","permalink":"/keep-being-human-dev/docs/rails/command_line/expert/custom-rails-cli-commands-railtie","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/command_line/expert/custom-rails-cli-commands-railtie.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"run_local_server","permalink":"/keep-being-human-dev/docs/rails/command_line/beginner/run_local_server"},"next":{"title":"spring-custom-commands","permalink":"/keep-being-human-dev/docs/rails/command_line/expert/spring-custom-commands"}}');var s=i(23420),l=i(65404);const r={},t=void 0,o={},c=[{value:"\u2699\ufe0f Creating Custom Rails CLI Commands with Railties",id:"\ufe0f-creating-custom-rails-cli-commands-with-railties",level:2}];function m(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-creating-custom-rails-cli-commands-with-railties",children:"\u2699\ufe0f Creating Custom Rails CLI Commands with Railties"}),"\n",(0,s.jsx)(n.p,{children:"Extend Rails\u2019 command-line interface by defining your own commands via a Railtie. This approach lets you ship reusable, versioned commands in gems or engines and hook into Rails\u2019 boot process."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a gem (e.g. ",(0,s.jsx)(n.code,{children:"rails-cli-ext"}),") and add a Railtie:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# lib/rails_cli_ext/railtie.rb\nrequire 'rails'\nmodule RailsCliExt\n  class Railtie < Rails::Railtie\n    railtie_name :rails_cli_ext\n\n    # Register a new command: bin/rails hello_world\n    rake_tasks do\n      require_relative 'commands/hello_world'\n      Rails::Command::Registry.register(:hello_world, Rails::Command::HelloWorldCommand)\n    end\n  end\nend\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Define the command behavior:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# lib/rails_cli_ext/commands/hello_world.rb\nrequire 'rails/command'\nmodule Rails::Command\n  class HelloWorldCommand < Base\n    def perform\n      say \"\ud83d\udc4b Hello, Rails CLI expert!\"\n    end\n  end\nend\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Install your gem and run:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"gem install rails-cli-ext\nbin/rails hello_world\n"})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var a=i(36672);const s={},l=a.createContext(s);function r(e){const n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);