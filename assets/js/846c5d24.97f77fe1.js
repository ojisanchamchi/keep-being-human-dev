"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97559],{65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var a=n(36672);const s={},i=a.createContext(s);function c(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(i.Provider,{value:t},e.children)}},90539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>l,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_support/expert/cache_key_generation_extensibility","title":"cache_key_generation_extensibility","description":"\ud83d\udd11 Extend Cache Key Generation for Complex Objects","source":"@site/docs/rails/active_support/expert/cache_key_generation_extensibility.md","sourceDirName":"rails/active_support/expert","slug":"/rails/active_support/expert/cache_key_generation_extensibility","permalink":"/keep-being-human-dev/docs/rails/active_support/expert/cache_key_generation_extensibility","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_support/expert/cache_key_generation_extensibility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_hashdeep_merge","permalink":"/keep-being-human-dev/docs/rails/active_support/expert/advanced_hashdeep_merge"},"next":{"title":"callbacks_building_custom_chains","permalink":"/keep-being-human-dev/docs/rails/active_support/expert/callbacks_building_custom_chains"}}');var s=n(23420),i=n(65404);const c={},r=void 0,o={},d=[{value:"\ud83d\udd11 Extend Cache Key Generation for Complex Objects",id:"-extend-cache-key-generation-for-complex-objects",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-extend-cache-key-generation-for-complex-objects",children:"\ud83d\udd11 Extend Cache Key Generation for Complex Objects"}),"\n",(0,s.jsxs)(t.p,{children:["Override ",(0,s.jsx)(t.code,{children:"cache_key"})," on domain objects to incorporate nested associations or attributes. This ensures fine-grained invalidation without bloating fragment stores."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'class Catalog\n  def cache_key\n    timestamp = products.maximum(:updated_at).try(:utc).try(:to_s, :number)\n    "#{self.class.name.downcase}/#{id}-#{timestamp}"\n  end\nend\n\n# Usage in view\n<%= cache @catalog do %>\n  \x3c!-- cached content --\x3e\n<% end %>\n'})}),"\n",(0,s.jsx)(t.p,{children:"This approach yields cache keys sensitive to associated changes, reducing stale fragments."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);