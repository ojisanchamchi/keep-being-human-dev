"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[75357],{2663:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"ruby/metaprogramming/expert/runtime_extension_with_fiddle","title":"runtime_extension_with_fiddle","description":"\ud83d\udec2 Runtime Extension via Fiddle","source":"@site/docs/ruby/metaprogramming/expert/runtime_extension_with_fiddle.md","sourceDirName":"ruby/metaprogramming/expert","slug":"/ruby/metaprogramming/expert/runtime_extension_with_fiddle","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/runtime_extension_with_fiddle","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/expert/runtime_extension_with_fiddle.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"proxy_pattern_with_basicobject","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/proxy_pattern_with_basicobject"},"next":{"title":"runtime_instrumentation_tracepoint","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/runtime_instrumentation_tracepoint"}}');var r=n(23420),o=n(65404);const a={},s=void 0,d={},u=[{value:"\ud83d\udec2 Runtime Extension via Fiddle",id:"-runtime-extension-via-fiddle",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-runtime-extension-via-fiddle",children:"\ud83d\udec2 Runtime Extension via Fiddle"}),"\n",(0,r.jsxs)(t.p,{children:["Dynamically link against C libraries at runtime with ",(0,r.jsx)(t.code,{children:"Fiddle"})," to extend Ruby\u2019s capabilities without writing a C extension. This is ideal for quick prototypes or one-off performance-critical calls."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"require 'fiddle'\nrequire 'fiddle/import'\n\nmodule LibC\n  extend Fiddle::Importer\n  dlload Fiddle.dlopen(nil)\n  extern 'int puts(char*)'\nend\n\nLibC.puts('Hello from libc via Fiddle!')\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(36672);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);