"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72355],{13921:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rails/encryption/middle/migrate_existing_to_encrypted","title":"migrate_existing_to_encrypted","description":"\ud83d\udd04 Migrating Existing Data to Encrypted Columns","source":"@site/docs/rails/encryption/middle/migrate_existing_to_encrypted.md","sourceDirName":"rails/encryption/middle","slug":"/rails/encryption/middle/migrate_existing_to_encrypted","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/migrate_existing_to_encrypted","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/encryption/middle/migrate_existing_to_encrypted.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_message_encryptor","permalink":"/keep-being-human-dev/docs/rails/encryption/middle/custom_message_encryptor"},"next":{"title":"asset_pipeline_and_migrations_railtie","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/asset_pipeline_and_migrations_railtie"}}');var r=t(23420),a=t(65404);const s={},d=void 0,o={},c=[{value:"\ud83d\udd04 Migrating Existing Data to Encrypted Columns",id:"-migrating-existing-data-to-encrypted-columns",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-migrating-existing-data-to-encrypted-columns",children:"\ud83d\udd04 Migrating Existing Data to Encrypted Columns"}),"\n",(0,r.jsx)(n.p,{children:"When adding encryption to a live app, migrate current plaintext data into the new encrypted columns via a one\u2011off migration or rake task. This ensures consistency and atomicity."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# db/migrate/20240101000000_add_encrypted_email_to_users.rb\nclass AddEncryptedEmailToUsers < ActiveRecord::Migration[7.0]\n  def change\n    add_column :users, :encrypted_email, :string\n  end\nend\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# lib/tasks/encrypt_existing_data.rake\nnamespace :db do\n  desc 'Encrypt existing user emails'\n  task encrypt_emails: :environment do\n    User.find_each do |user|\n      user.update!(email: user.email) # triggers encrypts :email in model\n    end\n  end\nend\n\n# Run:\n# rails db:migrate && rails db:encrypt_emails\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var i=t(36672);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);