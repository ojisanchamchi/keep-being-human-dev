"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[99324],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var s=t(36672);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},65913:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"ruby/minitest/middle/setup_teardown_hooks","title":"setup_teardown_hooks","description":"\ud83d\udee0\ufe0f Use setup and teardown Hooks","source":"@site/docs/ruby/minitest/middle/setup_teardown_hooks.md","sourceDirName":"ruby/minitest/middle","slug":"/ruby/minitest/middle/setup_teardown_hooks","permalink":"/keep-being-human-dev/docs/ruby/minitest/middle/setup_teardown_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/minitest/middle/setup_teardown_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parallel_test_execution","permalink":"/keep-being-human-dev/docs/ruby/minitest/middle/parallel_test_execution"},"next":{"title":"concurrent_requests_with_threads","permalink":"/keep-being-human-dev/docs/ruby/net_http/advanced/concurrent_requests_with_threads"}}');var r=t(23420),o=t(65404);const a={},d=void 0,i={},u=[{value:"\ud83d\udee0\ufe0f Use setup and teardown Hooks",id:"\ufe0f-use-setup-and-teardown-hooks",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\ufe0f-use-setup-and-teardown-hooks",children:"\ud83d\udee0\ufe0f Use setup and teardown Hooks"}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"setup"})," and ",(0,r.jsx)(n.code,{children:"teardown"})," helps you DRY up your tests by extracting common initialization and cleanup logic. This ensures each test starts with a known state and frees resources afterward."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'minitest/autorun'\n\nclass UserTest < Minitest::Test\n  def setup\n    @user = User.new(name: \"Alice\", admin: false)\n  end\n\n  def teardown\n    # e.g., clear temp files or reset environment\n    FileUtils.rm_rf(Dir['tmp/test_*'])\n  end\n\n  def test_default_role\n    assert_equal false, @user.admin\n  end\n\n  def test_name_presence\n    refute_nil @user.name\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Place shared objects in ",(0,r.jsx)(n.code,{children:"setup"})," and cleanup in ",(0,r.jsx)(n.code,{children:"teardown"})," to keep tests concise and maintainable."]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);