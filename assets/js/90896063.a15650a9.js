"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22854],{28523:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/yaml/beginner/dump_to_yaml","title":"dump_to_yaml","description":"\ud83d\udce4 Dumping Ruby Objects to YAML","source":"@site/docs/ruby/yaml/beginner/dump_to_yaml.md","sourceDirName":"ruby/yaml/beginner","slug":"/ruby/yaml/beginner/dump_to_yaml","permalink":"/keep-being-human-dev/docs/ruby/yaml/beginner/dump_to_yaml","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/yaml/beginner/dump_to_yaml.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"streaming_yaml_parsing","permalink":"/keep-being-human-dev/docs/ruby/yaml/advanced/streaming_yaml_parsing"},"next":{"title":"load_yaml_file","permalink":"/keep-being-human-dev/docs/ruby/yaml/beginner/load_yaml_file"}}');var r=t(23420),o=t(65404);const s={},i=void 0,u={},l=[{value:"\ud83d\udce4 Dumping Ruby Objects to YAML",id:"-dumping-ruby-objects-to-yaml",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-dumping-ruby-objects-to-yaml",children:"\ud83d\udce4 Dumping Ruby Objects to YAML"}),"\n",(0,r.jsxs)(n.p,{children:["Ruby objects like Hashes, Arrays, and Strings can be serialized to YAML with ",(0,r.jsx)(n.code,{children:"to_yaml"}),". This is useful for saving structured data to a file in a human\u2011readable format. Simply call ",(0,r.jsx)(n.code,{children:"to_yaml"})," on your object and write the result to disk or output it to the console."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'yaml'\n\n# Create a Ruby Hash containing application settings\ndata = {\n  'app' => {\n    'name'    => 'MyApp',\n    'version' => '1.0.0',\n    'features' => ['login', 'reports', 'api']\n  }\n}\n\n# Convert to YAML and save to a file\nFile.write('settings.yml', data.to_yaml)\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(36672);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);