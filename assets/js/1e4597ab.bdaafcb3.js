"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[41005],{32871:(s,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>e,toc:()=>d});const e=JSON.parse('{"id":"rails/active_record_associations/advanced/through_association_with_conditions","title":"through_association_with_conditions","description":"\ud83d\udd0d Through Associations with Custom Conditions","source":"@site/docs/rails/active_record_associations/advanced/through_association_with_conditions.md","sourceDirName":"rails/active_record_associations/advanced","slug":"/rails/active_record_associations/advanced/through_association_with_conditions","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/advanced/through_association_with_conditions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/advanced/through_association_with_conditions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sti_associations_with_default_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/advanced/sti_associations_with_default_scopes"},"next":{"title":"belongs_to_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/belongs_to_association"}}');var i=o(23420),n=o(65404);const a={},c=void 0,r={},d=[{value:"\ud83d\udd0d Through Associations with Custom Conditions",id:"-through-associations-with-custom-conditions",level:2}];function h(s){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...s.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"-through-associations-with-custom-conditions",children:"\ud83d\udd0d Through Associations with Custom Conditions"}),"\n",(0,i.jsxs)(t.p,{children:["Enhance ",(0,i.jsx)(t.code,{children:"has_many :through"})," by embedding query conditions directly into the association. This approach yields focused subsets (e.g., active tasks) without manual scopes at call time. It also plays nicely with eager loading to cut down on ad-hoc filtering."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ruby",children:"class Project < ApplicationRecord\n  has_many :tasks\n  has_many :active_tasks,\n           -> { where(status: 'active').order(:due_date) },\n           through: :tasks,\n           source: :task\nend\n\nclass Task < ApplicationRecord\n  belongs_to :project\nend\n"})})]})}function u(s={}){const{wrapper:t}={...(0,n.R)(),...s.components};return t?(0,i.jsx)(t,{...s,children:(0,i.jsx)(h,{...s})}):h(s)}},65404:(s,t,o)=>{o.d(t,{R:()=>a,x:()=>c});var e=o(36672);const i={},n=e.createContext(i);function a(s){const t=e.useContext(n);return e.useMemo(function(){return"function"==typeof s?s(t):{...t,...s}},[t,s])}function c(s){let t;return t=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:a(s.components),e.createElement(n.Provider,{value:t},s.children)}}}]);