"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11659],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(36672);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},88144:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"ruby/tempfiles/expert/secure_wipe_tempfile","title":"secure_wipe_tempfile","description":"\ud83d\udd12 Securely Wiping Tempfile Contents on Unlink","source":"@site/docs/ruby/tempfiles/expert/secure_wipe_tempfile.md","sourceDirName":"ruby/tempfiles/expert","slug":"/ruby/tempfiles/expert/secure_wipe_tempfile","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/expert/secure_wipe_tempfile","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/tempfiles/expert/secure_wipe_tempfile.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"otmpfile_anonymous","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/expert/otmpfile_anonymous"},"next":{"title":"tempfile_auto_cleanup","permalink":"/keep-being-human-dev/docs/ruby/tempfiles/middle/tempfile_auto_cleanup"}}');var r=t(23420),s=t(65404);const o={},l=void 0,c={},u=[{value:"\ud83d\udd12 Securely Wiping Tempfile Contents on Unlink",id:"-securely-wiping-tempfile-contents-on-unlink",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-securely-wiping-tempfile-contents-on-unlink",children:"\ud83d\udd12 Securely Wiping Tempfile Contents on Unlink"}),"\n",(0,r.jsxs)(n.p,{children:["Ensure no data remnants by subclassing ",(0,r.jsx)(n.code,{children:"Tempfile"})," to overwrite its data with zeros before unlinking. This approach combines overriding ",(0,r.jsx)(n.code,{children:"unlink"})," with a ",(0,r.jsx)(n.code,{children:"close"})," hook, guaranteeing both manual and garbage-collected teardown wipe the contents securely."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'tempfile'\n\nclass SecureTempfile < Tempfile\n  alias_method :close_without_wipe, :close\n\n  # Override unlink to zero out data first\n  def unlink\n    rewind\n    write(\"\\0\" * size)\n    flush\n    super\n  end\n\n  # Ensure wipe on close\n  def close\n    close_without_wipe\n    unlink rescue nil\n  end\n\n  private\n\n  # Determine current file size\n  def size\n    current = pos\n    rewind\n    length = read.length\n    rewind\n    seek(current)\n    length\n  end\nend\n\n# Usage example\nsecure = SecureTempfile.new('secret')\nsecure.write(\"Top secret credentials\")\nsecure.close  # Data is overwritten then unlinked\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);