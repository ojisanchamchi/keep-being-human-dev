"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47840],{44127:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/background_jobs/middle/integrate_active_job_sidekiq","title":"integrate_active_job_sidekiq","description":"\ud83d\ude80 Use Active Job with Sidekiq Adapter","source":"@site/docs/rails/background_jobs/middle/integrate_active_job_sidekiq.md","sourceDirName":"rails/background_jobs/middle","slug":"/rails/background_jobs/middle/integrate_active_job_sidekiq","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/integrate_active_job_sidekiq","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/background_jobs/middle/integrate_active_job_sidekiq.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"configure_retry_and_discard","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/configure_retry_and_discard"},"next":{"title":"schedule_jobs_with_active_job","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/schedule_jobs_with_active_job"}}');var a=n(23420),t=n(65404);const o={},d=void 0,s={},c=[{value:"\ud83d\ude80 Use Active Job with Sidekiq Adapter",id:"-use-active-job-with-sidekiq-adapter",level:2}];function u(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h2,{id:"-use-active-job-with-sidekiq-adapter",children:"\ud83d\ude80 Use Active Job with Sidekiq Adapter"}),"\n",(0,a.jsxs)(i.p,{children:["Active Job provides a unified interface for various queue adapters, and Sidekiq is a popular choice for Redis-backed concurrency. Configure your Rails app to use Sidekiq in ",(0,a.jsx)(i.code,{children:"config/application.rb"}),", then define jobs inheriting from ",(0,a.jsx)(i.code,{children:"ApplicationJob"})," and enqueue them with ",(0,a.jsx)(i.code,{children:"perform_later"}),"."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ruby",children:"# config/application.rb\nmodule MyApp\n  class Application < Rails::Application\n    config.load_defaults 7.0\n    config.active_job.queue_adapter = :sidekiq\n  end\nend\n"})}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ruby",children:"# app/jobs/hard_work_job.rb\nclass HardWorkJob < ApplicationJob\n  queue_as :default\n\n  def perform(*args)\n    # long-running task\n  end\nend\n\n# Enqueue from anywhere in your app\nHardWorkJob.perform_later(arg1, arg2)\n"})})]})}function l(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>d});var r=n(36672);const a={},t=r.createContext(a);function o(e){const i=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);