"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[4936],{65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(36672);const a={},r=t.createContext(a);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},73716:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/method_missing/expert/advanced_signature_handling","title":"advanced_signature_handling","description":"\ud83e\udde9 Advanced Signature Handling for Blocks and Keywords","source":"@site/docs/ruby/method_missing/expert/advanced_signature_handling.md","sourceDirName":"ruby/method_missing/expert","slug":"/ruby/method_missing/expert/advanced_signature_handling","permalink":"/keep-being-human-dev/docs/ruby/method_missing/expert/advanced_signature_handling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/expert/advanced_signature_handling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_respond_to","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_respond_to"},"next":{"title":"caching_method_missing_responses","permalink":"/keep-being-human-dev/docs/ruby/method_missing/expert/caching_method_missing_responses"}}');var a=s(23420),r=s(65404);const i={},o=void 0,d={},c=[{value:"\ud83e\udde9 Advanced Signature Handling for Blocks and Keywords",id:"-advanced-signature-handling-for-blocks-and-keywords",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-advanced-signature-handling-for-blocks-and-keywords",children:"\ud83e\udde9 Advanced Signature Handling for Blocks and Keywords"}),"\n",(0,a.jsxs)(n.p,{children:["Ensure ",(0,a.jsx)(n.code,{children:"method_missing"})," can accept positional, keyword, and block arguments seamlessly. Use Ruby\u2019s parameter decomposition to avoid losing invocation context when delegating or dynamically handling calls."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"class SignatureAware\n  def method_missing(name, *args, **kwargs, &block)\n    if name.to_s.start_with?('run_')\n      action = name.to_s.sub('run_', '')\n      execute(action, *args, **kwargs, &block)\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, include_private = false)\n    name.to_s.start_with?('run_') || super\n  end\n\n  private\n\n  def execute(action, *args, **kwargs, &block)\n    puts \"Executing \\\\#{action} with args=#{args.inspect}, kwargs=#{kwargs.inspect}\"\n    block&.call\n  end\nend\n\nobj = SignatureAware.new\nobj.run_task(1, 2, mode: :fast) { puts 'done' }\n# => Executing task with args=[1,2], kwargs={:mode=>:fast}\n# => done\n"})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);