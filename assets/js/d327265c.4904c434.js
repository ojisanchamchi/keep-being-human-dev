"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83381],{65404:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var s=o(36672);const t={},c=s.createContext(t);function a(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(c.Provider,{value:n},e.children)}},93013:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ruby/symbols/expert/symbol_garbage_collection_inspection","title":"symbol_garbage_collection_inspection","description":"\ud83d\uddd1\ufe0f Inspect and Manage Symbol Garbage Collection","source":"@site/docs/ruby/symbols/expert/symbol_garbage_collection_inspection.md","sourceDirName":"ruby/symbols/expert","slug":"/ruby/symbols/expert/symbol_garbage_collection_inspection","permalink":"/keep-being-human-dev/docs/ruby/symbols/expert/symbol_garbage_collection_inspection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/symbols/expert/symbol_garbage_collection_inspection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"secure_dynamic_symbol_creation","permalink":"/keep-being-human-dev/docs/ruby/symbols/expert/secure_dynamic_symbol_creation"},"next":{"title":"dynamic_method_definition","permalink":"/keep-being-human-dev/docs/ruby/symbols/middle/dynamic_method_definition"}}');var t=o(23420),c=o(65404);const a={},i=void 0,r={},l=[{value:"\ud83d\uddd1\ufe0f Inspect and Manage Symbol Garbage Collection",id:"\ufe0f-inspect-and-manage-symbol-garbage-collection",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-inspect-and-manage-symbol-garbage-collection",children:"\ud83d\uddd1\ufe0f Inspect and Manage Symbol Garbage Collection"}),"\n",(0,t.jsxs)(n.p,{children:["Ruby 2.2+ introduced GC for dynamically created symbols, but understanding its behavior is crucial for long\u2010running processes. Use ",(0,t.jsx)(n.code,{children:"Symbol.all_symbols"})," in combination with ",(0,t.jsx)(n.code,{children:"GC.start"})," and ",(0,t.jsx)(n.code,{children:"GC.stat"})," to measure the effect of symbol creation and GC sweeps, identifying leaks in symbol-heavy workloads."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# Before creating dynamic symbols\nputs GC.stat[:symbol_count]\n\n1000.times { |i| "temp_").to_sym }\n\n# Force a GC cycle\nGC.start\nputs GC.stat[:symbol_count]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["By comparing ",(0,t.jsx)(n.code,{children:":symbol_count"})," before and after GC, you can detect excessive symbol churn. In cases where dynamic symbol generation is unavoidable, consider using string-based keys or a symbol cache with controlled eviction to minimize memory pressure."]})]})}function m(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);