"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[330],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(36672);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},97040:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/xml/middle/parse_xml_with_namespaces","title":"parse_xml_with_namespaces","description":"\ud83d\udd0d Parsing XML with Namespaces","source":"@site/docs/ruby/xml/middle/parse_xml_with_namespaces.md","sourceDirName":"ruby/xml/middle","slug":"/ruby/xml/middle/parse_xml_with_namespaces","permalink":"/keep-being-human-dev/docs/ruby/xml/middle/parse_xml_with_namespaces","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/xml/middle/parse_xml_with_namespaces.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"modify_xml_nodes_nokogiri","permalink":"/keep-being-human-dev/docs/ruby/xml/middle/modify_xml_nodes_nokogiri"},"next":{"title":"custom_yaml_serialization","permalink":"/keep-being-human-dev/docs/ruby/yaml/advanced/custom_yaml_serialization"}}');var i=t(23420),a=t(65404);const r={},o=void 0,m={},c=[{value:"\ud83d\udd0d Parsing XML with Namespaces",id:"-parsing-xml-with-namespaces",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-parsing-xml-with-namespaces",children:"\ud83d\udd0d Parsing XML with Namespaces"}),"\n",(0,i.jsx)(n.p,{children:"When working with XML from different sources, namespaces can complicate element lookups. Nokogiri makes it straightforward to register and use namespaces when searching documents, ensuring you target the correct nodes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require \'nokogiri\'\n\nxml = <<-XML\n<root xmlns:ns="http://example.com/ns">\n  <ns:item id="1">First</ns:item>\n  <ns:item id="2">Second</ns:item>\n</root>\nXML\n\ndoc = Nokogiri::XML(xml)\ndoc.remove_namespaces! # or register explicitly:\n# doc.collect_namespaces #=> {"xmlns:ns"=>"http://example.com/ns"}\n\ndoc.xpath(\'//ns:item\', \'ns\' => \'http://example.com/ns\').each do |item|\n  puts "Item \\\\#{item[\'id\']}: \\\\#{item.text}"\nend\n# Output:\n# Item 1: First\n# Item 2: Second\n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);