"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94944],{30048:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"ruby/methods/middle/forwardable_delegation","title":"forwardable_delegation","description":"\ud83d\udce6 Delegating Methods with the Forwardable Module","source":"@site/docs/ruby/methods/middle/forwardable_delegation.md","sourceDirName":"ruby/methods/middle","slug":"/ruby/methods/middle/forwardable_delegation","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/forwardable_delegation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/middle/forwardable_delegation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_define_method","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/dynamic_define_method"},"next":{"title":"public_send_vs_send","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/public_send_vs_send"}}');var r=d(23420),o=d(65404);const a={},s=void 0,l={},i=[{value:"\ud83d\udce6 Delegating Methods with the Forwardable Module",id:"-delegating-methods-with-the-forwardable-module",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-delegating-methods-with-the-forwardable-module",children:"\ud83d\udce6 Delegating Methods with the Forwardable Module"}),"\n",(0,r.jsxs)(n.p,{children:["Instead of manually forwarding calls, Ruby's ",(0,r.jsx)(n.code,{children:"Forwardable"})," module automates delegation, keeping your classes thin. Use ",(0,r.jsx)(n.code,{children:"def_delegators"})," or ",(0,r.jsx)(n.code,{children:"def_delegator"})," to specify which methods to forward to an internal object."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'forwardable'\n\nclass Wrapper\n  extend Forwardable\n  def initialize(real)\n    @real = real\n  end\n  def_delegators :@real, :perform, :status\nend\n\nclass Worker\n  def perform; 'done'; end\n  def status; 'ok'; end\nend\n\nwrapper = Wrapper.new(Worker.new)\nwrapper.perform  #=> \"done\"\nwrapper.status   #=> \"ok\"\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,d)=>{d.d(n,{R:()=>a,x:()=>s});var t=d(36672);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);