"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79471],{6129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"ruby/ranges/expert/pattern_matching_with_ranges","title":"pattern_matching_with_ranges","description":"\ud83d\udd0d Leverage Pattern Matching with Ranges","source":"@site/docs/ruby/ranges/expert/pattern_matching_with_ranges.md","sourceDirName":"ruby/ranges/expert","slug":"/ruby/ranges/expert/pattern_matching_with_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/expert/pattern_matching_with_ranges","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/ranges/expert/pattern_matching_with_ranges.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"endless_and_beginless_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/expert/endless_and_beginless_ranges"},"next":{"title":"using_ranges_as_hash_keys","permalink":"/keep-being-human-dev/docs/ruby/ranges/expert/using_ranges_as_hash_keys"}}');var r=t(23420),s=t(65404);const i={},c=void 0,o={},u=[{value:"\ud83d\udd0d Leverage Pattern Matching with Ranges",id:"-leverage-pattern-matching-with-ranges",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-leverage-pattern-matching-with-ranges",children:"\ud83d\udd0d Leverage Pattern Matching with Ranges"}),"\n",(0,r.jsxs)(n.p,{children:["Ruby 2.7+ supports pattern matching in ",(0,r.jsx)(n.code,{children:"case"})," and ",(0,r.jsx)(n.code,{children:"match"}),", letting you concisely branch on numeric or lexical ranges. It\u2019s a game-changer for validation, routing, or command parsing without nested ifs."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'def tax_bracket(income)\n  case income\n  in ..9_875           then :low\n  in 9_876..40_125     then :middle\n  in 40_126..85_525    then :upper_middle\n  in 85_526..           then :high\n  end\nend\n\nputs tax_bracket(50_000)  # => :upper_middle\n\n# Destructure with range in hash patterns\npayload = { status: 200, size: 1500 }\ncase payload\nin { status: 200..299, size: 0..(1<<20) }\n  puts "OK & small"\nend\n'})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(36672);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);