"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[20746],{58764:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>b,frontMatter:()=>a,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"ruby/fibers/beginner/creating_and_resuming","title":"creating_and_resuming","description":"\ud83e\uddf5 Creating and Resuming a Fiber","source":"@site/docs/ruby/fibers/beginner/creating_and_resuming.md","sourceDirName":"ruby/fibers/beginner","slug":"/ruby/fibers/beginner/creating_and_resuming","permalink":"/keep-being-human-dev/docs/ruby/fibers/beginner/creating_and_resuming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/fibers/beginner/creating_and_resuming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"fiber_error_supervision","permalink":"/keep-being-human-dev/docs/ruby/fibers/advanced/fiber_error_supervision"},"next":{"title":"passing_values_between_fiber","permalink":"/keep-being-human-dev/docs/ruby/fibers/beginner/passing_values_between_fiber"}}');var t=r(23420),s=r(65404);const a={},c=void 0,o={},u=[{value:"\ud83e\uddf5 Creating and Resuming a Fiber",id:"-creating-and-resuming-a-fiber",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-creating-and-resuming-a-fiber",children:"\ud83e\uddf5 Creating and Resuming a Fiber"}),"\n",(0,t.jsxs)(n.p,{children:["To create a fiber, call ",(0,t.jsx)(n.code,{children:"Fiber.new"})," with a block. Inside the block, use ",(0,t.jsx)(n.code,{children:"Fiber.yield"})," to pause, and outside use ",(0,t.jsx)(n.code,{children:"resume"})," to continue. Each call to ",(0,t.jsx)(n.code,{children:"resume"})," picks up right after the last ",(0,t.jsx)(n.code,{children:"yield"}),", making it ideal for controlled step-by-step logic."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"counter = Fiber.new do\n  n = 1\n  loop do\n    Fiber.yield n\n    n += 1\n  end\nend\n\nputs counter.resume   # => 1\nputs counter.resume   # => 2\nputs counter.resume   # => 3\n"})})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var i=r(36672);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);