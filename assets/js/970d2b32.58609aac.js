"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42744],{21930:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/background_jobs/advanced/transactional_enqueue","title":"transactional_enqueue","description":"\u2699\ufe0f Ensuring Transactional Enqueue","source":"@site/docs/rails/background_jobs/advanced/transactional_enqueue.md","sourceDirName":"rails/background_jobs/advanced","slug":"/rails/background_jobs/advanced/transactional_enqueue","permalink":"/keep-being-human-dev/docs/rails/background_jobs/advanced/transactional_enqueue","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/background_jobs/advanced/transactional_enqueue.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sidekiq_batches","permalink":"/keep-being-human-dev/docs/rails/background_jobs/advanced/sidekiq_batches"},"next":{"title":"create_simple_job","permalink":"/keep-being-human-dev/docs/rails/background_jobs/beginner/create_simple_job"}}');var r=a(23420),t=a(65404);const o={},c=void 0,i={},d=[{value:"\u2699\ufe0f Ensuring Transactional Enqueue",id:"\ufe0f-ensuring-transactional-enqueue",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\ufe0f-ensuring-transactional-enqueue",children:"\u2699\ufe0f Ensuring Transactional Enqueue"}),"\n",(0,r.jsxs)(n.p,{children:["When enqueueing jobs from ActiveRecord callbacks, using ",(0,r.jsx)(n.code,{children:"after_commit"})," guarantees the job is only scheduled once the database transaction succeeds. This prevents orphaned jobs when transactions roll back."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/models/order.rb\nclass Order < ApplicationRecord\n  after_commit :enqueue_order_processing\n\n  private\n\n  def enqueue_order_processing\n    ProcessOrderJob.perform_later(self.id)\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This ensures ",(0,r.jsx)(n.code,{children:"ProcessOrderJob"})," never runs on a failed transaction, preserving data consistency."]})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>c});var s=a(36672);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);