"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[102],{65404:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var t=r(36672);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}},98765:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/regex/expert/stringscanner_iterative_scans","title":"stringscanner_iterative_scans","description":"\ud83c\udfce\ufe0f Stream Processing with StringScanner","source":"@site/docs/ruby/regex/expert/stringscanner_iterative_scans.md","sourceDirName":"ruby/regex/expert","slug":"/ruby/regex/expert/stringscanner_iterative_scans","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/stringscanner_iterative_scans","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/expert/stringscanner_iterative_scans.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"regexp_union_optimization","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/regexp_union_optimization"},"next":{"title":"unicode_and_posix_properties","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/unicode_and_posix_properties"}}');var s=r(23420),i=r(65404);const a={},c=void 0,o={},u=[{value:"\ud83c\udfce\ufe0f Stream Processing with StringScanner",id:"\ufe0f-stream-processing-with-stringscanner",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-stream-processing-with-stringscanner",children:"\ud83c\udfce\ufe0f Stream Processing with StringScanner"}),"\n",(0,s.jsxs)(n.p,{children:["For high\u2011speed, iterative parsing, use ",(0,s.jsx)(n.code,{children:"StringScanner"})," to advance through text without re\u2011scanning from the start. Perfect for lexing or log\u2011file processing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'require \'strscan\'\ns = StringScanner.new("id:123, name:John; id:456, name:Jane;")\n\nwhile !s.eos?\n  s.scan(/id:(\\d+)/)\n  id = s[1]\n  s.scan(/, name:(\\w+);/) && name = s[1]\n  puts "User ##{id} is #{name}"\nend\n# Output:\n# User #123 is John\n# User #456 is Jane\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);