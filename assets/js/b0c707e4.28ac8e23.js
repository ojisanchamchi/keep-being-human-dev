"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[25807],{61351:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"rails/active_record_querying/expert/bulk_upserts","title":"bulk_upserts","description":"\ud83d\udca1 Bulk Upsert with onduplicatekey","source":"@site/docs/rails/active_record_querying/expert/bulk_upserts.md","sourceDirName":"rails/active_record_querying/expert","slug":"/rails/active_record_querying/expert/bulk_upserts","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/expert/bulk_upserts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/expert/bulk_upserts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"batch_processing_find_each","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/expert/batch_processing_find_each"},"next":{"title":"ctes_with_active_record","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/expert/ctes_with_active_record"}}');var s=r(23420),i=r(65404);const c={},o=void 0,a={},u=[{value:"\ud83d\udca1 Bulk Upsert with on_duplicate_key",id:"-bulk-upsert-with-on_duplicate_key",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-bulk-upsert-with-on_duplicate_key",children:"\ud83d\udca1 Bulk Upsert with on_duplicate_key"}),"\n",(0,s.jsxs)(t.p,{children:["ActiveRecord 6.1+ supports ",(0,s.jsx)(t.code,{children:"insert_all"})," and ",(0,s.jsx)(t.code,{children:"upsert_all"})," for bulk insertions and conflict resolution. Use ",(0,s.jsx)(t.code,{children:"unique_by"})," to specify indexes and perform upserts in a single SQL operation, saving round trips and avoiding transaction locks."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"Product.upsert_all(\n  [ { sku: 'ABC123', stock: 10 }, { sku: 'XYZ789', stock: 5 } ],\n  unique_by: :sku\n)\n"})}),"\n",(0,s.jsx)(t.p,{children:"This is ideal for syncing large data feeds, inventory updates, or any bulk data ingestion pipeline."})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>o});var n=r(36672);const s={},i=n.createContext(s);function c(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);