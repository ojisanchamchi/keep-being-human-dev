"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97434],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(36672);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},77505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"gems/view_component/beginner/view_component_testing","title":"view_component_testing","description":"\ud83d\udd27 Testing a ViewComponent with RSpec","source":"@site/docs/gems/view_component/beginner/view_component_testing.md","sourceDirName":"gems/view_component/beginner","slug":"/gems/view_component/beginner/view_component_testing","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/beginner/view_component_testing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"view_component_slots","permalink":"/keep-being-human-dev/docs/gems/view_component/beginner/view_component_slots"},"next":{"title":"advanced_fragment_caching","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/advanced_fragment_caching"}}');var i=t(23420),s=t(65404);const r={},c=void 0,p={},a=[{value:"\ud83d\udd27 Testing a ViewComponent with RSpec",id:"-testing-a-viewcomponent-with-rspec",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-testing-a-viewcomponent-with-rspec",children:"\ud83d\udd27 Testing a ViewComponent with RSpec"}),"\n",(0,i.jsxs)(n.p,{children:["ViewComponent ships with helpers to make component testing easy. Use ",(0,i.jsx)(n.code,{children:"render_inline"})," to render your component in tests, then assert on the generated HTML. This ensures your UI logic stays correct as your application evolves."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# spec/components/hello_world_component_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe HelloWorldComponent, type: :component do\n  it 'renders the greeting text' do\n    result = render_inline(HelloWorldComponent.new(greeting: 'Hi there'))\n    expect(result.css('p').text).to eq('Hi there')\n  end\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);