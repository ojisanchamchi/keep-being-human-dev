"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49821],{22759:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>i,contentTitle:()=>p,default:()=>l,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl","title":"parameterized_shared_examples_dsl","description":"\ud83d\udd27 Parameterized Shared Examples with Arguments","source":"@site/docs/gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl.md","sourceDirName":"gems/rspec/shared_examples/advanced","slug":"/gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/shared_examples/advanced/parameterized_shared_examples_dsl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"metadata_filtered_shared_examples","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/advanced/metadata_filtered_shared_examples"},"next":{"title":"shared_examples_dry_specs","permalink":"/keep-being-human-dev/docs/gems/rspec/shared_examples/beginner/shared_examples_dry_specs"}}');var t=a(23420),n=a(65404);const d={},p=void 0,i={},o=[{value:"\ud83d\udd27 Parameterized Shared Examples with Arguments",id:"-parameterized-shared-examples-with-arguments",level:2}];function c(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-parameterized-shared-examples-with-arguments",children:"\ud83d\udd27 Parameterized Shared Examples with Arguments"}),"\n",(0,t.jsx)(s.p,{children:"Create highly reusable shared examples by accepting arguments in the block definition. RSpec lets you define parameters that customize each inclusion, turning your shared logic into a mini-DSL."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"# spec/support/shared_examples/paginatable.rb\nRSpec.shared_examples 'a paginatable endpoint' do |model:, route:|\n  let(:records) { create_list(model.name.underscore.to_sym, 3) }\n\n  it 'paginates results' do\n    get route, params: { page: 2, per_page: 1 }\n    body = JSON.parse(response.body)\n\n    expect(body.size).to eq(1)\n    expect(body.first['id']).to eq(records.second.id)\n  end\nend\n\n# spec/requests/users_spec.rb\nRSpec.describe '/users', type: :request do\n  include_examples 'a paginatable endpoint', model: User, route: '/users'\nend\n"})}),"\n",(0,t.jsxs)(s.p,{children:["By passing a hash of keyword arguments (",(0,t.jsx)(s.code,{children:"model:"})," and ",(0,t.jsx)(s.code,{children:"route:"}),"), you can tailor the shared examples to any resource. This pattern drastically reduces boilerplate when testing similar behaviors across controllers or APIs."]})]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,s,a)=>{a.d(s,{R:()=>d,x:()=>p});var r=a(36672);const t={},n=r.createContext(t);function d(e){const s=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function p(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);