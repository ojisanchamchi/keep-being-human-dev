"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27795],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(36672);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},79904:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"ruby/profiling/advanced/stackprof_sampling_mode","title":"stackprof_sampling_mode","description":"\u2699\ufe0f Sampling Profiling with StackProf in Production","source":"@site/docs/ruby/profiling/advanced/stackprof_sampling_mode.md","sourceDirName":"ruby/profiling/advanced","slug":"/ruby/profiling/advanced/stackprof_sampling_mode","permalink":"/keep-being-human-dev/docs/ruby/profiling/advanced/stackprof_sampling_mode","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/profiling/advanced/stackprof_sampling_mode.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ruby_prof_graph_html","permalink":"/keep-being-human-dev/docs/ruby/profiling/advanced/ruby_prof_graph_html"},"next":{"title":"tracepoint_custom_profile","permalink":"/keep-being-human-dev/docs/ruby/profiling/advanced/tracepoint_custom_profile"}}');var o=t(23420),a=t(65404);const i={},c=void 0,s={},p=[{value:"\u2699\ufe0f Sampling Profiling with StackProf in Production",id:"\ufe0f-sampling-profiling-with-stackprof-in-production",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-sampling-profiling-with-stackprof-in-production",children:"\u2699\ufe0f Sampling Profiling with StackProf in Production"}),"\n",(0,o.jsxs)(n.p,{children:["StackProf leverages statistical sampling to profile production workloads with minimal overhead. By choosing between ",(0,o.jsx)(n.code,{children:":cpu"}),", ",(0,o.jsx)(n.code,{children:":wall"}),", or ",(0,o.jsx)(n.code,{children:":object"})," modes and tuning the interval, you can capture representative call stacks without crippling performance."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\n# gem 'stackprof'\n\nrequire 'stackprof'\n\nStackProf.run(mode: :cpu, out: 'tmp/stackprof-cpu.dump', interval: 1000) do\n  # The code path under real traffic or test harness\n  MyApp.start\nend\n\n# Analyze results later\n# shell> stackprof tmp/stackprof-cpu.dump --text\n# shell> stackprof tmp/stackprof-cpu.dump --flamegraph > stackprof.html\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);