"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68213],{56173:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/caching/expert/raw_store_bypass_serialization","title":"raw_store_bypass_serialization","description":"\ud83d\udee0\ufe0f Bypass Marshal Overhead with Raw JSON Storage","source":"@site/docs/rails/caching/expert/raw_store_bypass_serialization.md","sourceDirName":"rails/caching/expert","slug":"/rails/caching/expert/raw_store_bypass_serialization","permalink":"/keep-being-human-dev/docs/rails/caching/expert/raw_store_bypass_serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/caching/expert/raw_store_bypass_serialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"race_condition_ttl","permalink":"/keep-being-human-dev/docs/rails/caching/expert/race_condition_ttl"},"next":{"title":"russian_doll_cache_versioning","permalink":"/keep-being-human-dev/docs/rails/caching/expert/russian_doll_cache_versioning"}}');var t=s(23420),n=s(65404);const i={},o=void 0,c={},l=[{value:"\ud83d\udee0\ufe0f Bypass Marshal Overhead with Raw JSON Storage",id:"\ufe0f-bypass-marshal-overhead-with-raw-json-storage",level:2}];function p(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"\ufe0f-bypass-marshal-overhead-with-raw-json-storage",children:"\ud83d\udee0\ufe0f Bypass Marshal Overhead with Raw JSON Storage"}),"\n",(0,t.jsx)(a.p,{children:"By default Rails serializes objects with Marshal, which can be slow. You can configure your cache store to use JSON serialization or even write/read raw strings directly for simple data structures."}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:'# config/initializers/cache_store.rb\nRails.application.config.cache_store = :mem_cache_store,\n  "localhost:11211", serializer: JSON, compress: false\n\n# Write and read raw JSON\nstats = { users: 1_000_000, rate: 0.85 }\nRails.cache.write("app_stats", stats.to_json, raw: true)\n\njson = Rails.cache.read("app_stats", raw: true)\nstats = JSON.parse(json, symbolize_names: true)\n'})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"raw: true"})," skips Rails\u2019 normal serialization pipeline, reducing CPU and memory usage."]})]})}function d(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},65404:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>o});var r=s(36672);const t={},n=r.createContext(t);function i(e){const a=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(n.Provider,{value:a},e.children)}}}]);