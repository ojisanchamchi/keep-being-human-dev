"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[60405],{14696:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/engines_and_plugins/advanced/dynamic_engine_mounting","title":"dynamic_engine_mounting","description":"\ud83d\udd00 Dynamically Mount Engines at Runtime","source":"@site/docs/rails/engines_and_plugins/advanced/dynamic_engine_mounting.md","sourceDirName":"rails/engines_and_plugins/advanced","slug":"/rails/engines_and_plugins/advanced/dynamic_engine_mounting","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/dynamic_engine_mounting","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/engines_and_plugins/advanced/dynamic_engine_mounting.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_generator_extension","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/custom_generator_extension"},"next":{"title":"isolate_namespace_engine_config","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/isolate_namespace_engine_config"}}');var t=a(23420),s=a(65404);const o={},r=void 0,c={},d=[{value:"\ud83d\udd00 Dynamically Mount Engines at Runtime",id:"-dynamically-mount-engines-at-runtime",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-dynamically-mount-engines-at-runtime",children:"\ud83d\udd00 Dynamically Mount Engines at Runtime"}),"\n",(0,t.jsx)(n.p,{children:"You can load and mount Rails engines based on database entries or environment flags to create a plugin-based architecture. This approach helps you enable or disable features without changing code, ideal for multi-tenant or modular apps."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# config/routes.rb\nRails.application.routes.draw do\n  FeatureToggle.enabled_engines.each do |engine_name|\n    engine_class = "#{engine_name}::Engine".constantize\n    mount engine_class => "/#{engine_name.underscore}"\n  end\nend\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Here, ",(0,t.jsx)(n.code,{children:"FeatureToggle.enabled_engines"})," returns an array of engine module names. Rails will mount only the specified engines, keeping your routes file clean and dynamic."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var i=a(36672);const t={},s=i.createContext(t);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);