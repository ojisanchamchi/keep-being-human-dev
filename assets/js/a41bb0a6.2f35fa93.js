"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[262],{62463:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/middleware/beginner/insert_middleware_position","title":"insert_middleware_position","description":"\ud83d\udd00 Inserting Middleware at a Specific Position","source":"@site/docs/rails/middleware/beginner/insert_middleware_position.md","sourceDirName":"rails/middleware/beginner","slug":"/rails/middleware/beginner/insert_middleware_position","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/insert_middleware_position","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/beginner/insert_middleware_position.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_middleware_setup","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/custom_middleware_setup"},"next":{"title":"request_logging_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/request_logging_middleware"}}');var t=n(23420),s=n(65404);const o={},a=void 0,d={},c=[{value:"\ud83d\udd00 Inserting Middleware at a Specific Position",id:"-inserting-middleware-at-a-specific-position",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"-inserting-middleware-at-a-specific-position",children:"\ud83d\udd00 Inserting Middleware at a Specific Position"}),"\n",(0,t.jsxs)(i.p,{children:["By default, ",(0,t.jsx)(i.code,{children:"config.middleware.use"})," appends your middleware to the end of the stack. You can precisely control ordering with ",(0,t.jsx)(i.code,{children:"insert_before"})," or ",(0,t.jsx)(i.code,{children:"insert_after"}),". This helps when you need your middleware to run at a specific stage (e.g., before routing or response compression)."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:"# config/application.rb\nmodule YourApp\n  class Application < Rails::Application\n    # Insert before Rack::Runtime to run early\n    config.middleware.insert_before Rack::Runtime, MyCustomMiddleware\n\n    # Or insert after ActionDispatch::Static to modify responses\n    config.middleware.insert_after ActionDispatch::Static, MyCustomMiddleware\n  end\nend\n"})})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var r=n(36672);const t={},s=r.createContext(t);function o(e){const i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);