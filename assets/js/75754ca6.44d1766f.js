"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61557],{4670:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"rails/controllers/advanced/rescue_from_graceful_errors","title":"rescue_from_graceful_errors","description":"\ud83d\udd04 Use rescue_from for Graceful Error Handling","source":"@site/docs/rails/controllers/advanced/rescue_from_graceful_errors.md","sourceDirName":"rails/controllers/advanced","slug":"/rails/controllers/advanced/rescue_from_graceful_errors","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/rescue_from_graceful_errors","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/advanced/rescue_from_graceful_errors.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rate_limiting_actions","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/rate_limiting_actions"},"next":{"title":"russian_doll_caching","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/russian_doll_caching"}}');var s=n(23420),t=n(65404);const c={},a=void 0,d={},i=[{value:"\ud83d\udd04 Use <code>rescue_from</code> for Graceful Error Handling",id:"-use-rescue_from-for-graceful-error-handling",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h2,{id:"-use-rescue_from-for-graceful-error-handling",children:["\ud83d\udd04 Use ",(0,s.jsx)(r.code,{children:"rescue_from"})," for Graceful Error Handling"]}),"\n",(0,s.jsx)(r.p,{children:"Centralize exception handling at the controller or application level. Map exceptions to HTTP status codes and JSON error messages."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"class ApplicationController < ActionController::API\n  rescue_from ActiveRecord::RecordNotFound, with: :not_found\n  rescue_from Pundit::NotAuthorizedError, with: :forbidden\n\n  private\n\n  def not_found(exception)\n    render json: { error: exception.message }, status: :not_found\n  end\n\n  def forbidden(exception)\n    render json: { error: 'Access denied' }, status: :forbidden\n  end\nend\n"})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>a});var o=n(36672);const s={},t=o.createContext(s);function c(e){const r=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(t.Provider,{value:r},e.children)}}}]);