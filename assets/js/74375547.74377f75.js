"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2313],{59010:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/blocks/advanced/internal_dsl_with_instance_eval","title":"internal_dsl_with_instance_eval","description":"\ud83c\udfd7\ufe0f Building Internal DSLs with instance_eval","source":"@site/docs/ruby/blocks/advanced/internal_dsl_with_instance_eval.md","sourceDirName":"ruby/blocks/advanced","slug":"/ruby/blocks/advanced/internal_dsl_with_instance_eval","permalink":"/keep-being-human-dev/docs/ruby/blocks/advanced/internal_dsl_with_instance_eval","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/blocks/advanced/internal_dsl_with_instance_eval.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"fibers_and_blocks","permalink":"/keep-being-human-dev/docs/ruby/blocks/advanced/fibers_and_blocks"},"next":{"title":"lazy_infinite_streams","permalink":"/keep-being-human-dev/docs/ruby/blocks/advanced/lazy_infinite_streams"}}');var s=t(23420),i=t(65404);const c={},o=void 0,r={},l=[{value:"\ud83c\udfd7\ufe0f Building Internal DSLs with instance_eval",id:"\ufe0f-building-internal-dsls-with-instance_eval",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-building-internal-dsls-with-instance_eval",children:"\ud83c\udfd7\ufe0f Building Internal DSLs with instance_eval"}),"\n",(0,s.jsx)(n.p,{children:"Design clean, expressive internal DSLs by instance_eval-ing on a context object so that block code runs in its scope. This technique hides boilerplate and makes domain-specific configurations read naturally."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"class RouteBuilder\n  def initialize(&block)\n    instance_eval(&block)\n  end\n\n  def get(path, &action)\n    puts \"Registered GET #{path}\"\n    @routes ||= {}\n    @routes[path] = action\n  end\n\n  def draw(&block)\n    @routes = {}\n    instance_eval(&block)\n    @routes\n  end\nend\n\nroutes = RouteBuilder.new.draw do\n  get '/home' do\n    'home#index'\n  end\n  get '/about' do\n    'about#show'\n  end\nend\n\np routes #=> {\"/home\"=>#<Proc...>, \"/about\"=>#<Proc...>}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var a=t(36672);const s={},i=a.createContext(s);function c(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);