"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[63477],{5944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/layouts/expert/nested_layout_inheritance","title":"nested_layout_inheritance","description":"\ud83d\ude80 Nested Layout Inheritance for Namespaced Views","source":"@site/docs/rails/layouts/expert/nested_layout_inheritance.md","sourceDirName":"rails/layouts/expert","slug":"/rails/layouts/expert/nested_layout_inheritance","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/nested_layout_inheritance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/layouts/expert/nested_layout_inheritance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"layout_fragment_caching","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/layout_fragment_caching"},"next":{"title":"view_component_layouts","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/view_component_layouts"}}');var i=t(23420),s=t(65404);const r={},o=void 0,c={},l=[{value:"\ud83d\ude80 Nested Layout Inheritance for Namespaced Views",id:"-nested-layout-inheritance-for-namespaced-views",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-nested-layout-inheritance-for-namespaced-views",children:"\ud83d\ude80 Nested Layout Inheritance for Namespaced Views"}),"\n",(0,i.jsx)(n.p,{children:"Leverage nested layouts by having your namespaced layout wrap the application layout at runtime. This avoids duplication of common markup while adding specialized regions for your namespace."}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"app/views/layouts/application.html.erb"}),", define a placeholder for the inner body:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erb",children:"<!DOCTYPE html>\n<html>\n<head>\n  <title>MyApp</title>\n  <%= csrf_meta_tags %>\n  <%= csp_meta_tag %>\n</head>\n<body>\n  <%= yield :inner_body %>\n</body>\n</html>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then in ",(0,i.jsx)(n.code,{children:"app/views/layouts/admin.html.erb"}),", render the application layout and inject your admin-specific content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erb",children:'<%= render template: "layouts/application", locals: { inner_body: capture do %>\n  <%= render "shared/admin_nav" %>\n  <section class="admin-content">\n    <%= yield %>\n  </section>\n<% end } %>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Now all controllers in the ",(0,i.jsx)(n.code,{children:"Admin"})," namespace can simply use ",(0,i.jsx)(n.code,{children:'layout "admin"'}),", and they\u2019ll inherit the base HTML shell while adding the admin navigation and wrapper."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(36672);const i={},s=a.createContext(i);function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);