"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72447],{65404:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>o});var n=s(36672);const r={},c=n.createContext(r);function a(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(c.Provider,{value:t},e.children)}},77168:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"gems/vcr/advanced/vcr_custom_request_matching","title":"vcr_custom_request_matching","description":"\ud83d\udd0d Custom Request Matching Rules","source":"@site/docs/gems/vcr/advanced/vcr_custom_request_matching.md","sourceDirName":"gems/vcr/advanced","slug":"/gems/vcr/advanced/vcr_custom_request_matching","permalink":"/keep-being-human-dev/docs/gems/vcr/advanced/vcr_custom_request_matching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/advanced/vcr_custom_request_matching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"vcr_custom_hooks","permalink":"/keep-being-human-dev/docs/gems/vcr/advanced/vcr_custom_hooks"},"next":{"title":"basic_cassette_usage","permalink":"/keep-being-human-dev/docs/gems/vcr/beginner/basic_cassette_usage"}}');var r=s(23420),c=s(65404);const a={},o=void 0,u={},i=[{value:"\ud83d\udd0d Custom Request Matching Rules",id:"-custom-request-matching-rules",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-custom-request-matching-rules",children:"\ud83d\udd0d Custom Request Matching Rules"}),"\n",(0,r.jsxs)(t.p,{children:["By default, VCR matches on method and URI, but complex APIs often require more control. You can supply ",(0,r.jsx)(t.code,{children:"match_requests_on"})," with custom matcher lambdas to ignore timestamp query params, sort arrays in JSON payloads, or compare only relevant headers. This ensures cassette reuse across dynamic test runs."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"VCR.configure do |c|\n  c.register_request_matcher :ignore_timestamp do |request_1, request_2|\n    uri1 = URI(request_1.uri)\n    uri2 = URI(request_2.uri)\n\n    params1 = URI.decode_www_form(uri1.query || '').to_h.except('timestamp')\n    params2 = URI.decode_www_form(uri2.query || '').to_h.except('timestamp')\n\n    uri1.path == uri2.path && params1 == params2\n  end\n\n  c.cassette_library_dir = 'spec/vcr_cassettes'\n  c.hook_into :webmock\n\n  # Use the custom matcher alongside default ones\n  c.default_cassette_options = {\n    match_requests_on: [:method, :ignore_timestamp, :body]\n  }\nend\n"})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);