"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[76627],{5835:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/marshal/beginner/marshal_with_files","title":"marshal_with_files","description":"\ud83d\udcdd Persisting Data to Files","source":"@site/docs/ruby/marshal/beginner/marshal_with_files.md","sourceDirName":"ruby/marshal/beginner","slug":"/ruby/marshal/beginner/marshal_with_files","permalink":"/keep-being-human-dev/docs/ruby/marshal/beginner/marshal_with_files","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/marshal/beginner/marshal_with_files.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"marshal_caching_simple_objects","permalink":"/keep-being-human-dev/docs/ruby/marshal/beginner/marshal_caching_simple_objects"},"next":{"title":"marshal_custom_versioning","permalink":"/keep-being-human-dev/docs/ruby/marshal/expert/marshal_custom_versioning"}}');var t=a(23420),r=a(65404);const i={},o=void 0,l={},c=[{value:"\ud83d\udcdd Persisting Data to Files",id:"-persisting-data-to-files",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-persisting-data-to-files",children:"\ud83d\udcdd Persisting Data to Files"}),"\n",(0,t.jsxs)(n.p,{children:["You can write marshaled data directly to a file for simple persistence. Open a file in binary mode (",(0,t.jsx)(n.code,{children:'"wb"'}),") for dumping and in binary-read mode (",(0,t.jsx)(n.code,{children:'"rb"'}),") for loading. This technique is handy for quick state saves without setting up a database."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# Save the object to disk\nFile.open("data.bin", "wb") do |file|\n  file.write(Marshal.dump([1, 2, 3]))\nend\n\n# Read it back\narray = File.open("data.bin", "rb") do |file|\n  Marshal.load(file)\nend\nputs array.inspect  # => [1, 2, 3]\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var s=a(36672);const t={},r=s.createContext(t);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);