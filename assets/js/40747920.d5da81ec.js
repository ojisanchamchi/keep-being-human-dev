"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47608],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(36672);const a={},t=o.createContext(a);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},66980:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/active_record_validations/beginner/inclusion_exclusion_validation","title":"inclusion_exclusion_validation","description":"\ud83d\udccb Inclusion and Exclusion Validation","source":"@site/docs/rails/active_record_validations/beginner/inclusion_exclusion_validation.md","sourceDirName":"rails/active_record_validations/beginner","slug":"/rails/active_record_validations/beginner/inclusion_exclusion_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/beginner/inclusion_exclusion_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/beginner/inclusion_exclusion_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"grouping_with_options","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/beginner/grouping_with_options"},"next":{"title":"length_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/beginner/length_validation"}}');var a=i(23420),t=i(65404);const s={},r=void 0,c={},l=[{value:"\ud83d\udccb Inclusion and Exclusion Validation",id:"-inclusion-and-exclusion-validation",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-inclusion-and-exclusion-validation",children:"\ud83d\udccb Inclusion and Exclusion Validation"}),"\n",(0,a.jsxs)(n.p,{children:["Restrict attribute values to a predefined list with ",(0,a.jsx)(n.code,{children:"inclusion"}),", or forbid certain values with ",(0,a.jsx)(n.code,{children:"exclusion"}),". This enforces domain constraints like roles or statuses. Provide an array for the ",(0,a.jsx)(n.code,{children:"in"})," option in your model."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"class Membership < ApplicationRecord\n  validates :role, inclusion: { in: %w[admin user guest], message: 'is not a valid role' }\n  validates :code, exclusion: { in: %w[INVALID BANNED] }\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);