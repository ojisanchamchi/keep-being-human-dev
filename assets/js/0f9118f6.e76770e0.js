"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12600],{65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>d});var t=a(36672);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},68208:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"gems/rspec/hooks_and_lifecycle/advanced/metadata_conditional_hooks","title":"metadata_conditional_hooks","description":"\ud83d\udd00 Conditional Hooks via Metadata and prepend/append","source":"@site/docs/gems/rspec/hooks_and_lifecycle/advanced/metadata_conditional_hooks.md","sourceDirName":"gems/rspec/hooks_and_lifecycle/advanced","slug":"/gems/rspec/hooks_and_lifecycle/advanced/metadata_conditional_hooks","permalink":"/keep-being-human-dev/docs/gems/rspec/hooks_and_lifecycle/advanced/metadata_conditional_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/hooks_and_lifecycle/advanced/metadata_conditional_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"vcr_webmock_advanced","permalink":"/keep-being-human-dev/docs/gems/rspec/expert/vcr_webmock_advanced"},"next":{"title":"orchestrating_external_service","permalink":"/keep-being-human-dev/docs/gems/rspec/hooks_and_lifecycle/advanced/orchestrating_external_service"}}');var o=a(23420),r=a(65404);const s={},d=void 0,c={},i=[{value:"\ud83d\udd00 Conditional Hooks via Metadata and prepend/append",id:"-conditional-hooks-via-metadata-and-prependappend",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-conditional-hooks-via-metadata-and-prependappend",children:"\ud83d\udd00 Conditional Hooks via Metadata and prepend/append"}),"\n",(0,o.jsxs)(n.p,{children:["Improve hook control by scoping them to metadata tags and fine-tuning execution order with ",(0,o.jsx)(n.code,{children:"prepend: true"})," or ",(0,o.jsx)(n.code,{children:"append: true"}),". This helps when certain specs need extra setup or cleanup."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# spec/rails_helper.rb\nRSpec.configure do |config|\n  # Run DB cleaner before JS-tagged examples and ensure it runs first\n  config.before(:each, js: true, prepend: true) do\n    DatabaseCleaner.strategy = :truncation\n    DatabaseCleaner.start\n  end\n\n  # Switch back to transaction strategy for non-JS examples\n  config.before(:each, js: false) do\n    DatabaseCleaner.strategy = :transaction\n    DatabaseCleaner.start\n  end\n\n  # Always cleanup after any example\n  config.after(:each, append: true) do\n    DatabaseCleaner.clean\n  end\nend\n"})}),"\n",(0,o.jsx)(n.p,{children:"Here:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"js: true"})," metadata lets you target feature specs needing JavaScript."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"prepend: true"})," ensures the truncation strategy is set before any other ",(0,o.jsx)(n.code,{children:"before"})," hooks."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"append: true"})," makes cleanup run after all other ",(0,o.jsx)(n.code,{children:"after"})," hooks, avoiding stray data."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Combine metadata with selective hooks to tailor setup/teardown per example group or tag."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);