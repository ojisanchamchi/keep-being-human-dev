"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27765],{27973:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/profiling/expert/stackprof_flamegraph","title":"stackprof_flamegraph","description":"\ud83d\udd25 Generating Flamegraphs with StackProf and FlameGraph","source":"@site/docs/ruby/profiling/expert/stackprof_flamegraph.md","sourceDirName":"ruby/profiling/expert","slug":"/ruby/profiling/expert/stackprof_flamegraph","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/stackprof_flamegraph","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/profiling/expert/stackprof_flamegraph.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ruby_prof_callgrind_kcachegrind","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/ruby_prof_callgrind_kcachegrind"},"next":{"title":"thread_wall_time_profiling","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/thread_wall_time_profiling"}}');var n=a(23420),p=a(65404);const o={},i=void 0,s={},c=[{value:"\ud83d\udd25 Generating Flamegraphs with StackProf and FlameGraph",id:"-generating-flamegraphs-with-stackprof-and-flamegraph",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,p.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h2,{id:"-generating-flamegraphs-with-stackprof-and-flamegraph",children:"\ud83d\udd25 Generating Flamegraphs with StackProf and FlameGraph"}),"\n",(0,n.jsx)(r.p,{children:"Combine StackProf\u2019s sampling profiler with Brendan Gregg\u2019s FlameGraph scripts to produce an interactive SVG flamegraph. This approach surfaces CPU hotspots over time and makes it easy to spot unexpected heavy call stacks."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ruby",children:"# Gemfile: gem 'stackprof'\nrequire 'stackprof'\n\nStackProf.run(mode: :cpu, interval: 1000, out: 'tmp/stackprof-cpu.dump') do\n  # Your multi-layered app logic\n  1_000_000.times { [1,2,3].map(&:to_s) }\nend\n"})}),"\n",(0,n.jsx)(r.p,{children:"Then generate the flamegraph:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"gem install flamegraph # if needed\nstackprof tmp/stackprof-cpu.dump --flame > tmp/flamegraph.svg\nopen tmp/flamegraph.svg\n"})})]})}function d(e={}){const{wrapper:r}={...(0,p.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,r,a)=>{a.d(r,{R:()=>o,x:()=>i});var t=a(36672);const n={},p=t.createContext(n);function o(e){const r=t.useContext(p);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(p.Provider,{value:r},e.children)}}}]);