"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59146],{19965:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/benchmarking/middle/console_benchmark_measure","title":"console_benchmark_measure","description":"\ud83d\udc22 Benchmark Code Blocks in Rails Console","source":"@site/docs/rails/benchmarking/middle/console_benchmark_measure.md","sourceDirName":"rails/benchmarking/middle","slug":"/rails/benchmarking/middle/console_benchmark_measure","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/console_benchmark_measure","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/benchmarking/middle/console_benchmark_measure.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_ips_usage","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/benchmark_ips_usage"},"next":{"title":"rake_task_benchmark","permalink":"/keep-being-human-dev/docs/rails/benchmarking/middle/rake_task_benchmark"}}');var a=s(23420),c=s(65404);const i={},o=void 0,t={},l=[{value:"\ud83d\udc22 Benchmark Code Blocks in Rails Console",id:"-benchmark-code-blocks-in-rails-console",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-benchmark-code-blocks-in-rails-console",children:"\ud83d\udc22 Benchmark Code Blocks in Rails Console"}),"\n",(0,a.jsxs)(n.p,{children:["Use Ruby\u2019s built\u2011in ",(0,a.jsx)(n.code,{children:"Benchmark.measure"})," in the Rails console to quickly compare different implementations. This is ideal for spotting slow code paths without restarting your server."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Launch Rails console with: bin/rails console\nrequire 'benchmark'\n\nBenchmark.measure do\n  # Compare two ways of fetching users\n  1000.times { User.where(active: true).pluck(:id) }\nend\n\nBenchmark.measure do\n  1000.times { User.where(active: true).pluck(:id).map(&:to_i) }\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Each ",(0,a.jsx)(n.code,{children:"Benchmark.measure"})," block returns an object containing user, system, total, and real time. Use these metrics to decide which approach is faster."]})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(36672);const a={},c=r.createContext(a);function i(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);