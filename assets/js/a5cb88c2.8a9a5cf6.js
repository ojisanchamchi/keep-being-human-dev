"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47309],{14126:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"rails/active_record_querying/advanced/dynamic_arel_queries","title":"dynamic_arel_queries","description":"\ud83d\udd27 Build Dynamic Queries with Arel","source":"@site/docs/rails/active_record_querying/advanced/dynamic_arel_queries.md","sourceDirName":"rails/active_record_querying/advanced","slug":"/rails/active_record_querying/advanced/dynamic_arel_queries","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/dynamic_arel_queries","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/advanced/dynamic_arel_queries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"computed_selects","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/computed_selects"},"next":{"title":"dynamic_filter_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/dynamic_filter_scopes"}}');var a=n(23420),t=n(65404);const s={},c=void 0,d={},o=[{value:"\ud83d\udd27 Build Dynamic Queries with Arel",id:"-build-dynamic-queries-with-arel",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"-build-dynamic-queries-with-arel",children:"\ud83d\udd27 Build Dynamic Queries with Arel"}),"\n",(0,a.jsx)(r.p,{children:"Arel provides a programmatic way to construct SQL expressions safely. Use Arel tables and nodes to avoid SQL injection while building complex OR/AND conditions dynamically."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ruby",children:"users = Arel::Table.new(:users)\nquery = users.project(Arel.star)\nconditions = []\nconditions << users[:age].gt(18) if params[:adult]\nconditions << users[:status].eq('active') if params[:active]\nquery = query.where(conditions.inject(&:and))\nresult = ActiveRecord::Base.connection.exec_query(query.to_sql)\n"})})]})}function l(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>c});var i=n(36672);const a={},t=i.createContext(a);function s(e){const r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);