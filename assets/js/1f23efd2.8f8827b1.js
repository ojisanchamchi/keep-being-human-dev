"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77312],{12632:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/models/beginner/model_testing","title":"model_testing","description":"\ud83e\uddea Testing Models with RSpec","source":"@site/docs/rails/models/beginner/model_testing.md","sourceDirName":"rails/models/beginner","slug":"/rails/models/beginner/model_testing","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/beginner/model_testing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"model_scopes","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_scopes"},"next":{"title":"model_validations","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_validations"}}');var o=s(23420),i=s(65404);const r={},a=void 0,d={},l=[{value:"\ud83e\uddea Testing Models with RSpec",id:"-testing-models-with-rspec",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-testing-models-with-rspec",children:"\ud83e\uddea Testing Models with RSpec"}),"\n",(0,o.jsx)(n.p,{children:"Write model specs to ensure validations, associations, and methods work as expected. Use factories and matchers for concise tests."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# spec/models/user_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe User, type: :model do\n  it { should validate_presence_of(:email) }\n  it { should validate_uniqueness_of(:email).case_insensitive }\n  it { should have_many(:posts).dependent(:destroy) }\n\n  describe '#full_name' do\n    it 'concatenates first and last name' do\n      user = build(:user, first_name: 'Jane', last_name: 'Doe')\n      expect(user.full_name).to eq('Jane Doe')\n    end\n  end\nend\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(36672);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);