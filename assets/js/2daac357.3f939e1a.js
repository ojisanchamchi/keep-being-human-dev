"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[4797],{55959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"ruby/date_time/beginner/parsing_date_strings","title":"parsing_date_strings","description":"\ud83d\udcc5 Parsing Date Strings","source":"@site/docs/ruby/date_time/beginner/parsing_date_strings.md","sourceDirName":"ruby/date_time/beginner","slug":"/ruby/date_time/beginner/parsing_date_strings","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/parsing_date_strings","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/date_time/beginner/parsing_date_strings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"handling_time_zones","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/handling_time_zones"},"next":{"title":"astronomical_julian_day_conversion","permalink":"/keep-being-human-dev/docs/ruby/date_time/expert/astronomical_julian_day_conversion"}}');var r=n(23420),s=n(65404);const i={},o=void 0,d={},c=[{value:"\ud83d\udcc5 Parsing Date Strings",id:"-parsing-date-strings",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-parsing-date-strings",children:"\ud83d\udcc5 Parsing Date Strings"}),"\n",(0,r.jsxs)(t.p,{children:["Converting user input or string data into ",(0,r.jsx)(t.code,{children:"Date"})," or ",(0,r.jsx)(t.code,{children:"DateTime"})," objects lets you perform calculations and validations. Ruby\u2019s ",(0,r.jsx)(t.code,{children:"parse"})," methods handle common formats automatically."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"require 'date'\n\n# Parse a simple date string\ndate = Date.parse('2023-03-15')\nputs date         # => #<Date: 2023-03-15 ((2459993j,0s,0n),+0s,2299161j)>\n\n# Parse ISO 8601 timestamp to DateTime\ndatetime = DateTime.parse('2023-03-15T14:30:00+02:00')\nputs datetime     # => 2023-03-15T14:30:00+02:00\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var a=n(36672);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);