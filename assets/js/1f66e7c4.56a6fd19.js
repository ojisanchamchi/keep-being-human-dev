"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35051],{52412:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/models/expert/dynamic_scopes_metaprogramming","title":"dynamic_scopes_metaprogramming","description":"\ud83d\udee0\ufe0f Generate Dynamic Scopes with Metaprogramming","source":"@site/docs/rails/models/expert/dynamic_scopes_metaprogramming.md","sourceDirName":"rails/models/expert","slug":"/rails/models/expert/dynamic_scopes_metaprogramming","permalink":"/keep-being-human-dev/docs/rails/models/expert/dynamic_scopes_metaprogramming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/expert/dynamic_scopes_metaprogramming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_optimistic_locking","permalink":"/keep-being-human-dev/docs/rails/models/expert/custom_optimistic_locking"},"next":{"title":"json_column_virtual_attributes","permalink":"/keep-being-human-dev/docs/rails/models/expert/json_column_virtual_attributes"}}');var a=n(23420),r=n(65404);const i={},o=void 0,c={},d=[{value:"\ud83d\udee0\ufe0f Generate Dynamic Scopes with Metaprogramming",id:"\ufe0f-generate-dynamic-scopes-with-metaprogramming",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"\ufe0f-generate-dynamic-scopes-with-metaprogramming",children:"\ud83d\udee0\ufe0f Generate Dynamic Scopes with Metaprogramming"}),"\n",(0,a.jsxs)(t.p,{children:["For models that require dozens of similar scopes (e.g., filter by status codes), dynamically define scopes using ",(0,a.jsx)(t.code,{children:"define_singleton_method"})," or ",(0,a.jsx)(t.code,{children:"class_eval"}),". This reduces boilerplate and keeps your model DRY."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:'class Ticket < ApplicationRecord\n  STATUSES = %w[pending approved rejected]\n\n  STATUSES.each do |status|\n    define_singleton_method("with_#{status}") do\n      where(status: status)\n    end\n  end\nend\n\n# Usage:\nTicket.with_pending\nTicket.with_approved\n'})}),"\n",(0,a.jsx)(t.p,{children:"Adjust to add additional options or metadata per-status by iterating a hash instead of an array."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var s=n(36672);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);