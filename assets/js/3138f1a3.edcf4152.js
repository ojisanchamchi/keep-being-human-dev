"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29593],{34334:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/oop/beginner/instance_methods","title":"instance_methods","description":"\ud83d\udd04 Define Instance Methods","source":"@site/docs/ruby/oop/beginner/instance_methods.md","sourceDirName":"ruby/oop/beginner","slug":"/ruby/oop/beginner/instance_methods","permalink":"/keep-being-human-dev/docs/ruby/oop/beginner/instance_methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/beginner/instance_methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"initialize_method","permalink":"/keep-being-human-dev/docs/ruby/oop/beginner/initialize_method"},"next":{"title":"instance_variables","permalink":"/keep-being-human-dev/docs/ruby/oop/beginner/instance_variables"}}');var o=t(23420),a=t(65404);const i={},r=void 0,c={},d=[{value:"\ud83d\udd04 Define Instance Methods",id:"-define-instance-methods",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-define-instance-methods",children:"\ud83d\udd04 Define Instance Methods"}),"\n",(0,o.jsx)(n.p,{children:"Instance methods define behaviors for each object. You call them on an instance, not on the class itself."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class Calculator\n  def add(a, b)\n    a + b\n  end\n\n  def multiply(a, b)\n    a * b\n  end\nend\n\ncalc = Calculator.new\nputs calc.add(2, 3)      # => 5\nputs calc.multiply(4, 5) # => 20\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(36672);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);