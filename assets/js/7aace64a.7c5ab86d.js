"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22051],{65404:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var n=t(36672);const s={},i=n.createContext(s);function a(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:r},e.children)}},99171:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record_querying/beginner/first_last","title":"first_last","description":"\ud83e\udd47 Fetching First and Last Records","source":"@site/docs/rails/active_record_querying/beginner/first_last.md","sourceDirName":"rails/active_record_querying/beginner","slug":"/rails/active_record_querying/beginner/first_last","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/first_last","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/beginner/first_last.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"find_vs_find_by","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/find_vs_find_by"},"next":{"title":"limit_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/limit_usage"}}');var s=t(23420),i=t(65404);const a={},c=void 0,o={},d=[{value:"\ud83e\udd47 Fetching First and Last Records",id:"-fetching-first-and-last-records",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-fetching-first-and-last-records",children:"\ud83e\udd47 Fetching First and Last Records"}),"\n",(0,s.jsxs)(r.p,{children:["Use ",(0,s.jsx)(r.code,{children:"first"})," and ",(0,s.jsx)(r.code,{children:"last"})," to quickly retrieve the first or last record based on the default or specified order. These methods hit the database immediately and return a single model instance or ",(0,s.jsx)(r.code,{children:"nil"})," if none exists."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# First user by id\nfirst_user = User.order(:id).first\n\n# Last post by created_at\nlatest_post = Post.order(:created_at).last\n"})})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);