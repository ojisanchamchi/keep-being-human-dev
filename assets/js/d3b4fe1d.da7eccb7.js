"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11390],{28828:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/partials/advanced/dynamic_view_path_overrides.md","title":"dynamic_view_path_overrides.md","description":"\ud83d\ude80 Dynamically Overriding Partial Lookup Paths","source":"@site/docs/rails/partials/advanced/dynamic_view_path_overrides.md.md","sourceDirName":"rails/partials/advanced","slug":"/rails/partials/advanced/dynamic_view_path_overrides.md","permalink":"/keep-being-human-dev/docs/rails/partials/advanced/dynamic_view_path_overrides.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/partials/advanced/dynamic_view_path_overrides.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"collection_partial_caching.md","permalink":"/keep-being-human-dev/docs/rails/partials/advanced/collection_partial_caching.md"},"next":{"title":"partial_with_layout.md","permalink":"/keep-being-human-dev/docs/rails/partials/advanced/partial_with_layout.md"}}');var r=n(23420),i=n(65404);const s={},o=void 0,d={},l=[{value:"\ud83d\ude80 Dynamically Overriding Partial Lookup Paths",id:"-dynamically-overriding-partial-lookup-paths",level:2}];function c(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"-dynamically-overriding-partial-lookup-paths",children:"\ud83d\ude80 Dynamically Overriding Partial Lookup Paths"}),"\n",(0,r.jsxs)(a.p,{children:["For theming or multi-tenant apps, you can use ",(0,r.jsx)(a.code,{children:"prepend_view_path"})," at runtime to override where Rails looks for partials. This lets you swap in tenant-specific views without changing your render calls, keeping your controller and view code clean."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:'# app/controllers/application_controller.rb\nbefore_action :set_tenant_view_path\n\ndef set_tenant_view_path\n  if current_tenant&.theme\n    prepend_view_path Rails.root.join("app/views/themes", current_tenant.theme)\n  end\nend\n'})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-erb",children:"<%# Now rendering this will first look under app/views/themes/<theme>/shared/_header.html.erb %>\n<%= render 'shared/header' %>\n"})})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var t=n(36672);const r={},i=t.createContext(r);function s(e){const a=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);