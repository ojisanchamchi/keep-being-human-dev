"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24204],{43719:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/environments/advanced/multi_env_credentials","title":"multi_env_credentials","description":"\ud83d\udee1\ufe0f Managing Multiple Environment Credentials","source":"@site/docs/rails/environments/advanced/multi_env_credentials.md","sourceDirName":"rails/environments/advanced","slug":"/rails/environments/advanced/multi_env_credentials","permalink":"/keep-being-human-dev/docs/rails/environments/advanced/multi_env_credentials","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/environments/advanced/multi_env_credentials.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"config_for_env_settings","permalink":"/keep-being-human-dev/docs/rails/environments/advanced/config_for_env_settings"},"next":{"title":"checking_and_setting_rails_environment","permalink":"/keep-being-human-dev/docs/rails/environments/beginner/checking_and_setting_rails_environment"}}');var s=i(23420),a=i(65404);const r={},c=void 0,l={},o=[{value:"\ud83d\udee1\ufe0f Managing Multiple Environment Credentials",id:"\ufe0f-managing-multiple-environment-credentials",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-managing-multiple-environment-credentials",children:"\ud83d\udee1\ufe0f Managing Multiple Environment Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["Rails 5.2+ credentials support multiple environments out of the box. This lets you store secrets (API keys, certificates) per environment in encrypted YAML files. Use the ",(0,s.jsx)(n.code,{children:"--environment"})," flag to create or edit a credentials file for ",(0,s.jsx)(n.code,{children:"staging"}),", ",(0,s.jsx)(n.code,{children:"production"}),", etc., and access them dynamically."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Create or edit staging credentials\na EDITOR="vim" rails credentials:edit --environment staging\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This generates or updates ",(0,s.jsx)(n.code,{children:"config/credentials/staging.yml.enc"})," alongside a unique ",(0,s.jsx)(n.code,{children:"config/credentials/staging.key"}),". Access secrets in your code via:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# anywhere in your app\naws_key = Rails.application.credentials.staging[:aws][:access_key_id]\naws_secret = Rails.application.credentials.staging[:aws][:secret_access_key]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If a credential is missing in staging, Rails will fallback to ",(0,s.jsx)(n.code,{children:"config/credentials/production.yml.enc"})," (when RAILS_ENV=production). This pattern ensures strict separation of secrets per environment while reusing defaults."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(36672);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);