"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[19230],{65404:(e,s,a)=>{a.d(s,{R:()=>c,x:()=>o});var n=a(36672);const r={},t=n.createContext(r);function c(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(t.Provider,{value:s},e.children)}},76039:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>b,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rails/action_cable/beginner/broadcast_messages","title":"broadcast_messages","description":"\ud83d\udcf2 Broadcasting Messages from Rails","source":"@site/docs/rails/action_cable/beginner/broadcast_messages.md","sourceDirName":"rails/action_cable/beginner","slug":"/rails/action_cable/beginner/broadcast_messages","permalink":"/keep-being-human-dev/docs/rails/action_cable/beginner/broadcast_messages","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/action_cable/beginner/broadcast_messages.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rate_limiting_backpressure","permalink":"/keep-being-human-dev/docs/rails/action_cable/advanced/rate_limiting_backpressure"},"next":{"title":"client_subscribe_js","permalink":"/keep-being-human-dev/docs/rails/action_cable/beginner/client_subscribe_js"}}');var r=a(23420),t=a(65404);const c={},o=void 0,i={},l=[{value:"\ud83d\udcf2 Broadcasting Messages from Rails",id:"-broadcasting-messages-from-rails",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"-broadcasting-messages-from-rails",children:"\ud83d\udcf2 Broadcasting Messages from Rails"}),"\n",(0,r.jsxs)(s.p,{children:["To send data from the server to all subscribed clients, use ",(0,r.jsx)(s.code,{children:"ActionCable.server.broadcast"}),". You can broadcast from controllers, models, or background jobs to push JSON payloads over WebSockets."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'# app/controllers/messages_controller.rb\ndef create\n  @message = Message.create!(message_params)\n\n  # Broadcast to the "chat_channel"\n  ActionCable.server.broadcast(\n    "chat_channel",\n    content: @message.content,\n    user: @message.user.name\n  )\nend\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Clients subscribed to ",(0,r.jsx)(s.code,{children:"ChatChannel"})," will receive this payload in their ",(0,r.jsx)(s.code,{children:"received"})," callback."]})]})}function b(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);