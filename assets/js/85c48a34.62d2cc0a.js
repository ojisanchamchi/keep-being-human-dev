"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[8379],{65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var a=r(36672);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}},79378:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"sql/general/advanced/window_functions_row_number","title":"window_functions_row_number","description":"\ud83d\udd22 Leverage Window Functions for Advanced Ranking","source":"@site/docs/sql/general/advanced/window_functions_row_number.md","sourceDirName":"sql/general/advanced","slug":"/sql/general/advanced/window_functions_row_number","permalink":"/keep-being-human-dev/docs/sql/general/advanced/window_functions_row_number","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/general/advanced/window_functions_row_number.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"recursive_cte_hierarchical_queries","permalink":"/keep-being-human-dev/docs/sql/general/advanced/recursive_cte_hierarchical_queries"},"next":{"title":"basic_inner_join","permalink":"/keep-being-human-dev/docs/sql/general/beginner/basic_inner_join"}}');var o=r(23420),i=r(65404);const s={},t=void 0,c={},d=[{value:"\ud83d\udd22 Leverage Window Functions for Advanced Ranking",id:"-leverage-window-functions-for-advanced-ranking",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-leverage-window-functions-for-advanced-ranking",children:"\ud83d\udd22 Leverage Window Functions for Advanced Ranking"}),"\n",(0,o.jsxs)(n.p,{children:["Window functions like ",(0,o.jsx)(n.code,{children:"ROW_NUMBER()"}),", ",(0,o.jsx)(n.code,{children:"RANK()"}),", and ",(0,o.jsx)(n.code,{children:"NTILE()"})," let you compute rankings and moving aggregates without subqueries. Use ",(0,o.jsx)(n.code,{children:"PARTITION BY"})," to segment your data and ",(0,o.jsx)(n.code,{children:"ORDER BY"})," to define the window frame."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"SELECT\n  user_id,\n  purchase_amount,\n  ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY purchase_date DESC) AS recent_order_rank\nFROM orders;\n"})}),"\n",(0,o.jsx)(n.p,{children:"This query assigns a descending rank of each order per user, enabling you to filter or analyze top\u2010N results per partition."})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);