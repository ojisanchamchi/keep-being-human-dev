"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[67117],{7649:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/active_support/middle/presence_and_blank_helpers","title":"presence_and_blank_helpers","description":"\ud83e\udd14 Presence and Blank Helpers","source":"@site/docs/rails/active_support/middle/presence_and_blank_helpers.md","sourceDirName":"rails/active_support/middle","slug":"/rails/active_support/middle/presence_and_blank_helpers","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/presence_and_blank_helpers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_support/middle/presence_and_blank_helpers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"numeric_time_extensions","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/numeric_time_extensions"},"next":{"title":"safe_constantize_for_dynamic_loading","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/safe_constantize_for_dynamic_loading"}}');var t=s(23420),a=s(65404);const i={},c=void 0,o={},l=[{value:"\ud83e\udd14 Presence and Blank Helpers",id:"-presence-and-blank-helpers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-presence-and-blank-helpers",children:"\ud83e\udd14 Presence and Blank Helpers"}),"\n",(0,t.jsxs)(n.p,{children:["ActiveSupport extends objects with ",(0,t.jsx)(n.code,{children:"blank?"}),", ",(0,t.jsx)(n.code,{children:"present?"}),", and ",(0,t.jsx)(n.code,{children:"presence"})," for concise nil/empty checks. Use these to guard values or provide fallbacks instead of verbose conditionals."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'[].blank?          # => true\n"Hello".present?   # => true\nname = params[:name].presence || "Guest"\n# If params[:name] is blank or nil, name => "Guest"\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(36672);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);