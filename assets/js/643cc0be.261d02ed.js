"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[31129],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(36672);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},66429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/uri/advanced/idn_support_punycode","title":"idn_support_punycode","description":"\ud83d\ude80 Handling Internationalized Domain Names (IDNs)","source":"@site/docs/ruby/uri/advanced/idn_support_punycode.md","sourceDirName":"ruby/uri/advanced","slug":"/ruby/uri/advanced/idn_support_punycode","permalink":"/keep-being-human-dev/docs/ruby/uri/advanced/idn_support_punycode","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/advanced/idn_support_punycode.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_uri_scheme","permalink":"/keep-being-human-dev/docs/ruby/uri/advanced/custom_uri_scheme"},"next":{"title":"query_param_merging","permalink":"/keep-being-human-dev/docs/ruby/uri/advanced/query_param_merging"}}');var a=t(23420),i=t(65404);const s={},o=void 0,d={},u=[{value:"\ud83d\ude80 Handling Internationalized Domain Names (IDNs)",id:"-handling-internationalized-domain-names-idns",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-handling-internationalized-domain-names-idns",children:"\ud83d\ude80 Handling Internationalized Domain Names (IDNs)"}),"\n",(0,a.jsxs)(n.p,{children:["Ruby's ",(0,a.jsx)(n.code,{children:"URI"})," doesn\u2019t convert Unicode domains to punycode out of the box. Integrate the ",(0,a.jsx)(n.code,{children:"simpleidn"})," gem to transparently handle IDNs and ensure your URIs remain valid across DNS and HTTP clients."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Add to your Gemfile:\n# gem 'simpleidn'\n\ngem install simpleidn\nrequire 'uri'\nrequire 'simpleidn'\n\nraw_uri = 'https://\u4f8b\u3048.\u30c6\u30b9\u30c8/path'\nparsed  = URI.parse(raw_uri)\n# Convert Unicode host to ASCII-compatible encoding (ACE)\nace_host = SimpleIDN.to_ascii(parsed.host)\nparsed.host = ace_host\n\nputs parsed.to_s\n# => \"https://xn--r8jz45g.xn--zckzah/path\"\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);