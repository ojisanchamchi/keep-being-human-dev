"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[67157],{51099:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/controllers/advanced/rate_limiting_actions","title":"rate_limiting_actions","description":"\ud83d\udee1\ufe0f Implement Rate Limiting in Controllers","source":"@site/docs/rails/controllers/advanced/rate_limiting_actions.md","sourceDirName":"rails/controllers/advanced","slug":"/rails/controllers/advanced/rate_limiting_actions","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/rate_limiting_actions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/advanced/rate_limiting_actions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"n_plus_one_query_optimization","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/n_plus_one_query_optimization"},"next":{"title":"rescue_from_graceful_errors","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/rescue_from_graceful_errors"}}');var i=t(23420),o=t(65404);const a={},s=void 0,l={},c=[{value:"\ud83d\udee1\ufe0f Implement Rate Limiting in Controllers",id:"\ufe0f-implement-rate-limiting-in-controllers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-implement-rate-limiting-in-controllers",children:"\ud83d\udee1\ufe0f Implement Rate Limiting in Controllers"}),"\n",(0,i.jsx)(n.p,{children:"Protect endpoints from abuse by throttling requests. Integrate Rack Attack or custom middleware and check rate limits in controllers for specific actions."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/rack_attack.rb\nclass Rack::Attack\n  throttle('logins/ip', limit: 5, period: 20.seconds) do |req|\n    req.ip if req.path == '/login' && req.post?\n  end\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"In your controller, handle rejections gracefully:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class SessionsController < ApplicationController\n  rescue_from Rack::Attack::LimitReached, with: :rate_limit_exceeded\n\n  def create\n    # login logic\n  end\n\n  private\n\n  def rate_limit_exceeded\n    render json: { error: 'Too many login attempts' }, status: :too_many_requests\n  end\nend\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(36672);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);