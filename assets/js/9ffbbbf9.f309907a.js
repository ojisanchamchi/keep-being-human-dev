"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59877],{65404:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>d});var s=t(36672);const n={},r=s.createContext(n);function c(e){const i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(r.Provider,{value:i},e.children)}},91647:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>d,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"rails/active_record_querying/middle/exists_query","title":"exists_query","description":"\ud83d\ude80 Checking Existence with exists?","source":"@site/docs/rails/active_record_querying/middle/exists_query.md","sourceDirName":"rails/active_record_querying/middle","slug":"/rails/active_record_querying/middle/exists_query","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/exists_query","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/middle/exists_query.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"distinct_select","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/distinct_select"},"next":{"title":"from_subquery","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/from_subquery"}}');var n=t(23420),r=t(65404);const c={},d=void 0,o={},a=[{value:"\ud83d\ude80 Checking Existence with <code>exists?</code>",id:"-checking-existence-with-exists",level:2}];function u(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.h2,{id:"-checking-existence-with-exists",children:["\ud83d\ude80 Checking Existence with ",(0,n.jsx)(i.code,{children:"exists?"})]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"exists?"})," returns a boolean indicating whether any records match the given conditions. It's optimized to use ",(0,n.jsx)(i.code,{children:"LIMIT 1"}),", making it faster than fetching records."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-ruby",children:"# Check if a user with a given email exists\nUser.exists?(email: 'user@example.com')\n"})})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);