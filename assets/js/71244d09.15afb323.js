"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[21936],{48937:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rails/controllers/expert/http2_server_push","title":"http2_server_push","description":"\ud83d\udd25 HTTP/2 Server Push in Rails Controllers","source":"@site/docs/rails/controllers/expert/http2_server_push.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/http2_server_push","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/http2_server_push","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/http2_server_push.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_action_metaprogramming","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/dynamic_action_metaprogramming"},"next":{"title":"http_caching_conditional_get","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/http_caching_conditional_get"}}');var s=t(23420),o=t(65404);const a={},i=void 0,c={},l=[{value:"\ud83d\udd25 HTTP/2 Server Push in Rails Controllers",id:"-http2-server-push-in-rails-controllers",level:2}];function p(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-http2-server-push-in-rails-controllers",children:"\ud83d\udd25 HTTP/2 Server Push in Rails Controllers"}),"\n",(0,s.jsxs)(r.p,{children:["On HTTP/2-capable servers (e.g., Puma with ",(0,s.jsx)(r.code,{children:"-- early-hints"}),"), you can initiate server push from your controller by tapping into the Rack ",(0,s.jsx)(r.code,{children:"push"})," hook. This preloads assets on the client side, reducing round-trips. Fallback gracefully when the feature isn\u2019t available."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"class AssetsController < ApplicationController\n  def index\n    if request.env['rack.h2'] && request.env['rack.h2'].respond_to?(:push)\n      %w(application.css application.js).each do |asset|\n        request.env['rack.h2'].push(\n          \"/assets/#{asset}\",\n          { 'accept' => 'text/css,text/javascript' }\n        )\n      end\n    end\n\n    render :index\n  end\nend\n"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var n=t(36672);const s={},o=n.createContext(s);function a(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);