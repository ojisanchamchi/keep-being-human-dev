"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[40395],{10722:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_querying/advanced/window_functions","title":"window_functions","description":"\ud83e\ude84 Leverage Window Functions for Ranking and Running Totals","source":"@site/docs/rails/active_record_querying/advanced/window_functions.md","sourceDirName":"rails/active_record_querying/advanced","slug":"/rails/active_record_querying/advanced/window_functions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/window_functions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/advanced/window_functions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"upsert_all_conflicts","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/upsert_all_conflicts"},"next":{"title":"basic_all_where","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/basic_all_where"}}');var i=r(23420),o=r(65404);const a={},s=void 0,c={},d=[{value:"\ud83e\ude84 Leverage Window Functions for Ranking and Running Totals",id:"-leverage-window-functions-for-ranking-and-running-totals",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-leverage-window-functions-for-ranking-and-running-totals",children:"\ud83e\ude84 Leverage Window Functions for Ranking and Running Totals"}),"\n",(0,i.jsxs)(n.p,{children:["ActiveRecord supports window functions via raw SQL or Arel to compute row numbers, ranks, or cumulative sums without loading all records into memory. This approach pushes calculations to the database for efficiency and scalability. Use ",(0,i.jsx)(n.code,{children:"Arel.sql"})," or ",(0,i.jsx)(n.code,{children:"select"})," with ",(0,i.jsx)(n.code,{children:"OVER"})," clauses to integrate window functions seamlessly in your relation."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Rank users by score within each country\nusers = User\n  .select(\n    :id,\n    :name,\n    Arel.sql(\"ROW_NUMBER() OVER (PARTITION BY country ORDER BY score DESC) AS country_rank\")\n  )\n  .where(country: 'US')\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(36672);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);