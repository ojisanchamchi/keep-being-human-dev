"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[53195],{65404:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>i});var s=t(36672);const a={},c=s.createContext(a);function o(n){const e=s.useContext(c);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),s.createElement(c.Provider,{value:e},n.children)}},79136:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"ruby/constants/advanced/dynamic_constants_via_const_set","title":"dynamic_constants_via_const_set","description":"\ud83d\udce6 Dynamic Namespacing with constset and constget","source":"@site/docs/ruby/constants/advanced/dynamic_constants_via_const_set.md","sourceDirName":"ruby/constants/advanced","slug":"/ruby/constants/advanced/dynamic_constants_via_const_set","permalink":"/keep-being-human-dev/docs/ruby/constants/advanced/dynamic_constants_via_const_set","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/constants/advanced/dynamic_constants_via_const_set.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"autoload_with_const_missing","permalink":"/keep-being-human-dev/docs/ruby/constants/advanced/autoload_with_const_missing"},"next":{"title":"reload_constants_remove_const","permalink":"/keep-being-human-dev/docs/ruby/constants/advanced/reload_constants_remove_const"}}');var a=t(23420),c=t(65404);const o={},i=void 0,d={},r=[{value:"\ud83d\udce6 Dynamic Namespacing with <code>const_set</code> and <code>const_get</code>",id:"-dynamic-namespacing-with-const_set-and-const_get",level:2}];function u(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.h2,{id:"-dynamic-namespacing-with-const_set-and-const_get",children:["\ud83d\udce6 Dynamic Namespacing with ",(0,a.jsx)(e.code,{children:"const_set"})," and ",(0,a.jsx)(e.code,{children:"const_get"})]}),"\n",(0,a.jsxs)(e.p,{children:["Use ",(0,a.jsx)(e.code,{children:"Module#const_set"})," and ",(0,a.jsx)(e.code,{children:"Module#const_get"})," to define or retrieve constants at runtime, enabling powerful DSLs and plugin architectures. This allows you to map external configurations or directory structures into Ruby modules and classes on the fly."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ruby",children:'module PluginLoader\n  PLUGIN_DIR = "plugins"\n\n  def self.load_plugins\n    Dir["#{PLUGIN_DIR}/*.rb"].each do |file|\n      plugin_name = File.basename(file, ".rb").split("_").map(&:capitalize).join\n      require_relative file\n      # e.g., PluginLoader::UserAuth -> UserAuth class defined in file\n      const_set(plugin_name, const_get("PluginLoader::#{plugin_name}"))\n    end\n  end\nend\n\nPluginLoader.load_plugins\nputs PluginLoader::UserAuth.new.authenticate\n'})})]})}function l(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}}}]);