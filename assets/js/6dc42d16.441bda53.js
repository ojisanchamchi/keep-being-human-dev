"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24931],{64035:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"rails/engines_and_plugins/expert/custom_plugin_with_railtie","title":"custom_plugin_with_railtie","description":"\ud83d\udee0\ufe0f Build a Plugin Gem with Full Railtie and Generator Support","source":"@site/docs/rails/engines_and_plugins/expert/custom_plugin_with_railtie.md","sourceDirName":"rails/engines_and_plugins/expert","slug":"/rails/engines_and_plugins/expert/custom_plugin_with_railtie","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/expert/custom_plugin_with_railtie","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/engines_and_plugins/expert/custom_plugin_with_railtie.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"plugin_basic_setup","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/beginner/plugin_basic_setup"},"next":{"title":"isolate_namespace_advanced","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/expert/isolate_namespace_advanced"}}');var a=i(23420),r=i(65404);const s={},l=void 0,o={},u=[{value:"\ud83d\udee0\ufe0f Build a Plugin Gem with Full Railtie and Generator Support",id:"\ufe0f-build-a-plugin-gem-with-full-railtie-and-generator-support",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-build-a-plugin-gem-with-full-railtie-and-generator-support",children:"\ud83d\udee0\ufe0f Build a Plugin Gem with Full Railtie and Generator Support"}),"\n",(0,a.jsx)(n.p,{children:"Rather than a simple plugin, structure your code as a gem with a Railtie to hook into Rails boot. Provide a generator to scaffold configurations or migrations into the host application with minimal friction."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# lib/my_plugin.rb\nrequire "rails"\nmodule MyPlugin\n  class Railtie < ::Rails::Railtie\n    # Load plugin configuration defaults\n    config.my_plugin = ActiveSupport::OrderedOptions.new\n    config.my_plugin.enabled = true\n\n    # Add plugin rake tasks\n    rake_tasks do\n      load "#{root}/lib/tasks/my_plugin_tasks.rake"\n    end\n\n    # Hook into generators\n    generators do\n      require "my_plugin/generators/install_generator"\n    end\n  end\nend\n\n# lib/my_plugin/generators/install_generator.rb\nmodule MyPlugin\n  module Generators\n    class InstallGenerator < Rails::Generators::Base\n      source_root File.expand_path("templates", __dir__)\n      desc "Copies MyPlugin initializer file to your application."\n\n      def copy_initializer\n        template "my_plugin.rb", "config/initializers/my_plugin.rb"\n      end\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.p,{children:"This structure makes your plugin first-class, with initialization, tasks, and scaffolding."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var t=i(36672);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);