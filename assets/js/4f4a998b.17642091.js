"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[55448],{55946:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/active_record_migrations/expert/parallel_migrations_via_rake","title":"parallel_migrations_via_rake","description":"\ud83d\udc0e Run Migrations in Parallel to Reduce Downtime","source":"@site/docs/rails/active_record_migrations/expert/parallel_migrations_via_rake.md","sourceDirName":"rails/active_record_migrations/expert","slug":"/rails/active_record_migrations/expert/parallel_migrations_via_rake","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/parallel_migrations_via_rake","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_migrations/expert/parallel_migrations_via_rake.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"multi_step_default_column_addition","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/multi_step_default_column_addition"},"next":{"title":"postgresql_table_partitioning","permalink":"/keep-being-human-dev/docs/rails/active_record_migrations/expert/postgresql_table_partitioning"}}');var r=n(23420),i=n(65404);const o={},s=void 0,c={},l=[{value:"\ud83d\udc0e Run Migrations in Parallel to Reduce Downtime",id:"-run-migrations-in-parallel-to-reduce-downtime",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-run-migrations-in-parallel-to-reduce-downtime",children:"\ud83d\udc0e Run Migrations in Parallel to Reduce Downtime"}),"\n",(0,r.jsx)(t.p,{children:"For microservices or multi-tenant setups, you can execute independent migrations in parallel using a custom Rake task:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"task parallel_migrate: :environment do\n  schemas = %w[tenant1 tenant2 tenant3]\n  threads = schemas.map do |schema|\n    Thread.new do\n      ActiveRecord::Base.connection.schema_search_path = schema\n      Rake::Task['db:migrate'].invoke\n    ensure\n      Rake::Task['db:migrate'].reenable\n    end\n  end\n  threads.each(&:join)\nend\n"})}),"\n",(0,r.jsx)(t.p,{children:"This reduces total migration time across multiple schemas, but be cautious of connection pool sizing."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var a=n(36672);const r={},i=a.createContext(r);function o(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);