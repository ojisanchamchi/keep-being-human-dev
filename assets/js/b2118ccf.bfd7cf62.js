"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[58373],{16812:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/file_io/advanced/nonblocking_io_select","title":"nonblocking_io_select","description":"\ud83d\ude80 Non-Blocking IO with select","source":"@site/docs/ruby/file_io/advanced/nonblocking_io_select.md","sourceDirName":"ruby/file_io/advanced","slug":"/ruby/file_io/advanced/nonblocking_io_select","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/nonblocking_io_select","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/advanced/nonblocking_io_select.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"memory_mapped_file","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/memory_mapped_file"},"next":{"title":"tail_f_implementation","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/tail_f_implementation"}}');var i=o(23420),r=o(65404);const a={},c=void 0,s={},l=[{value:"\ud83d\ude80 Non-Blocking IO with select",id:"-non-blocking-io-with-select",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-non-blocking-io-with-select",children:"\ud83d\ude80 Non-Blocking IO with select"}),"\n",(0,i.jsxs)(n.p,{children:["For high-concurrency file or socket operations, using blocking reads can stall your entire thread. Combine ",(0,i.jsx)(n.code,{children:"IO#read_nonblock"}),"/",(0,i.jsx)(n.code,{children:"write_nonblock"})," with ",(0,i.jsx)(n.code,{children:"IO.select"})," to build a simple reactor loop without external gems."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"readers = [io1, io2]  # array of IO objects\nloop do\n  ready_to_read, = IO.select(readers, nil, nil, 0.5)\n  next unless ready_to_read\n\n  ready_to_read.each do |io|\n    begin\n      data = io.read_nonblock(4096)\n      handle_data(io, data)\n    rescue IO::WaitReadable\n      # will retry on next select\n    end\n  end\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"This pattern scales to thousands of descriptors in a single-threaded reactor."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var t=o(36672);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);