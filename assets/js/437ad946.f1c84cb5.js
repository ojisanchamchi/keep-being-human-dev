"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95547],{27338:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double","title":"verifying_module_methods_with_class_double","description":"\ud83c\udf68 Verifying Module Methods with class_double","source":"@site/docs/gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double.md","sourceDirName":"gems/rspec/mocks_and_stubs/expert","slug":"/gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"stub_private_methods_with_prepend","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend"},"next":{"title":"wrap_original_with_and_wrap_original","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/wrap_original_with_and_wrap_original"}}');var o=t(23420),r=t(65404);const d={},a=void 0,i={},c=[{value:"\ud83c\udf68 Verifying Module Methods with <code>class_double</code>",id:"-verifying-module-methods-with-class_double",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.h2,{id:"-verifying-module-methods-with-class_double",children:["\ud83c\udf68 Verifying Module Methods with ",(0,o.jsx)(s.code,{children:"class_double"})]}),"\n",(0,o.jsxs)(s.p,{children:["Ensure your stubs match the real module API by using ",(0,o.jsx)(s.code,{children:"class_double"})," with ",(0,o.jsx)(s.code,{children:":as_stubbed_const"}),". This guards against API drift when an external module changes its interface. If you stub a non\u2011existent method, RSpec will raise an error immediately."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-ruby",children:'module PaymentGateway\n  def self.process(amount)\n    # external HTTP call\n  end\nend\n\nclass Order\n  def checkout\n    PaymentGateway.process(total)\n  end\n\n  def total\n    100\n  end\nend\n\nRSpec.describe Order do\n  it \'uses the payment gateway with verifying double\' do\n    stub_gateway = class_double("PaymentGateway", process: "success").as_stubbed_const\n    order = Order.new\n\n    expect(order.checkout).to eq("success")\n  end\nend\n'})})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>d,x:()=>a});var n=t(36672);const o={},r=n.createContext(o);function d(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);