"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[48257],{65404:(e,a,n)=>{n.d(a,{R:()=>d,x:()=>s});var r=n(36672);const o={},t=r.createContext(o);function d(e){const a=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(t.Provider,{value:a},e.children)}},97394:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"ruby/oop/advanced/forwarding_with_forwardable","title":"forwarding_with_forwardable","description":"\ud83c\udfaf Delegate Methods Cleanly with Forwardable","source":"@site/docs/ruby/oop/advanced/forwarding_with_forwardable.md","sourceDirName":"ruby/oop/advanced","slug":"/ruby/oop/advanced/forwarding_with_forwardable","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/forwarding_with_forwardable","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/advanced/forwarding_with_forwardable.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"eigenclass_for_class_macros","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/eigenclass_for_class_macros"},"next":{"title":"internal_dsl_with_blocks","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/internal_dsl_with_blocks"}}');var o=n(23420),t=n(65404);const d={},s=void 0,l={},c=[{value:"\ud83c\udfaf Delegate Methods Cleanly with <code>Forwardable</code>",id:"-delegate-methods-cleanly-with-forwardable",level:2}];function i(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(a.h2,{id:"-delegate-methods-cleanly-with-forwardable",children:["\ud83c\udfaf Delegate Methods Cleanly with ",(0,o.jsx)(a.code,{children:"Forwardable"})]}),"\n",(0,o.jsxs)(a.p,{children:["The ",(0,o.jsx)(a.code,{children:"Forwardable"})," module lets you delegate specific methods to an internal object, reducing boilerplate and improving encapsulation."]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-ruby",children:"require 'forwardable'\n\nclass UserDecorator\n  extend Forwardable\n\n  def initialize(user)\n    @user = user\n  end\n\n  def_delegators :@user, :name, :email\n\n  def formatted_email\n    \"#{name} <#{email}>\"\n  end\nend\n\nuser = OpenStruct.new(name: 'Jane', email: 'jane@example.com')\ndecorator = UserDecorator.new(user)\nputs decorator.formatted_email  # => \"Jane <jane@example.com>\"\n"})})]})}function u(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}}}]);