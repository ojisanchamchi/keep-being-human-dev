"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[70281],{41734:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/csv/middle/efficient_streaming","title":"efficient_streaming","description":"\ud83d\udcbe Efficiently Process Large CSV Files","source":"@site/docs/ruby/csv/middle/efficient_streaming.md","sourceDirName":"ruby/csv/middle","slug":"/ruby/csv/middle/efficient_streaming","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/efficient_streaming","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/csv/middle/efficient_streaming.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_csv_writing","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/custom_csv_writing"},"next":{"title":"headers_and_converters","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/headers_and_converters"}}');var s=r(23420),i=r(65404);const c={},o=void 0,a={},d=[{value:"\ud83d\udcbe Efficiently Process Large CSV Files",id:"-efficiently-process-large-csv-files",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-efficiently-process-large-csv-files",children:"\ud83d\udcbe Efficiently Process Large CSV Files"}),"\n",(0,s.jsxs)(n.p,{children:["When working with large CSVs, loading the entire file into memory can cause your app to crash. CSV.foreach reads the file line by line, yielding each row to a block without building a huge in-memory array. You can combine it with headers to get ",(0,s.jsx)(n.code,{children:"CSV::Row"})," objects or skip headers for raw arrays."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"require 'csv'\n\nCSV.foreach('huge_data.csv', headers: true) do |row|\n  # Process each row individually\n  puts \"User: #{row['name']}, Age: #{row['age']}\"\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(36672);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);