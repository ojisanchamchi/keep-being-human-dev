"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61925],{40657:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"ruby/regex/advanced/performance_benchmarking","title":"performance_benchmarking","description":"\ud83d\udcc8 Benchmark Regex Performance","source":"@site/docs/ruby/regex/advanced/performance_benchmarking.md","sourceDirName":"ruby/regex/advanced","slug":"/ruby/regex/advanced/performance_benchmarking","permalink":"/keep-being-human-dev/docs/ruby/regex/advanced/performance_benchmarking","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/advanced/performance_benchmarking.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"named_capture_to_hash","permalink":"/keep-being-human-dev/docs/ruby/regex/advanced/named_capture_to_hash"},"next":{"title":"recursive_patterns","permalink":"/keep-being-human-dev/docs/ruby/regex/advanced/recursive_patterns"}}');var t=r(23420),c=r(65404);const o={},s=void 0,d={},i=[{value:"\ud83d\udcc8 Benchmark Regex Performance",id:"-benchmark-regex-performance",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-benchmark-regex-performance",children:"\ud83d\udcc8 Benchmark Regex Performance"}),"\n",(0,t.jsxs)(n.p,{children:["Incorporate ",(0,t.jsx)(n.code,{children:"Benchmark"})," or ",(0,t.jsx)(n.code,{children:"benchmark/ips"})," to measure and compare regex variants. Tweak patterns to avoid backtracking, leverage atomic groups, and quantify improvements in real scenarios."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\nstr = 'a' * 100 + 'b'\npatterns = {\n  simple: /(a+)+b/, \n  atomic:  /(?>a+)+b/\n}\nBenchmark.bm do |bm|\n  patterns.each do |name, rx|\n    bm.report(name) { 100_000.times { rx =~ str } }\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var a=r(36672);const t={},c=a.createContext(t);function o(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);