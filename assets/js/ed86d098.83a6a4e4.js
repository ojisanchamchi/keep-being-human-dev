"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97337],{65404:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(36672);const s={},i=t.createContext(s);function o(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:r},e.children)}},73858:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/strings/expert/freeze_dedupe_strings","title":"freeze_dedupe_strings","description":"\ud83e\uddbe Freeze and dedupe strings to reduce memory","source":"@site/docs/ruby/strings/expert/freeze_dedupe_strings.md","sourceDirName":"ruby/strings/expert","slug":"/ruby/strings/expert/freeze_dedupe_strings","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/freeze_dedupe_strings","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/expert/freeze_dedupe_strings.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"binary_parsing_with_unpack_pack","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/binary_parsing_with_unpack_pack"},"next":{"title":"grapheme_cluster_counting","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/grapheme_cluster_counting"}}');var s=n(23420),i=n(65404);const o={},a=void 0,d={},c=[{value:"\ud83e\uddbe Freeze and dedupe strings to reduce memory",id:"-freeze-and-dedupe-strings-to-reduce-memory",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-freeze-and-dedupe-strings-to-reduce-memory",children:"\ud83e\uddbe Freeze and dedupe strings to reduce memory"}),"\n",(0,s.jsxs)(r.p,{children:["Freezing strings (",(0,s.jsx)(r.code,{children:"String#freeze"}),") allows the interpreter to dedupe identical literals at compile time (",(0,s.jsx)(r.code,{children:"--enable=frozen-string-literal=all"}),") or at runtime via ",(0,s.jsx)(r.code,{children:"String#-@"}),". Combined with ",(0,s.jsx)(r.code,{children:"String#+@"}),", you can canonicalize user input on the fly, reducing GC pressure in long\u2011running processes."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:'# Deduplicate a runtime string\nraw = String.new("config_option")\ncanon = +raw.freeze   # +raw invokes String#-@ then freeze\n# both references now share the same frozen object\nputs raw.equal?(canon)  # => true\n'})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);