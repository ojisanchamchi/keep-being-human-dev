"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[78138],{65404:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>u});var s=n(36672);const r={},t=s.createContext(r);function o(e){const a=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function u(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:a},e.children)}},91084:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/data_types/beginner/ruby_hashes","title":"ruby_hashes","description":"\ud83d\uddc2\ufe0f Hashes for Key-Value Storage","source":"@site/docs/ruby/data_types/beginner/ruby_hashes.md","sourceDirName":"ruby/data_types/beginner","slug":"/ruby/data_types/beginner/ruby_hashes","permalink":"/keep-being-human-dev/docs/ruby/data_types/beginner/ruby_hashes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/data_types/beginner/ruby_hashes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ruby_arrays","permalink":"/keep-being-human-dev/docs/ruby/data_types/beginner/ruby_arrays"},"next":{"title":"ruby_numbers","permalink":"/keep-being-human-dev/docs/ruby/data_types/beginner/ruby_numbers"}}');var r=n(23420),t=n(65404);const o={},u=void 0,i={},c=[{value:"\ud83d\uddc2\ufe0f Hashes for Key-Value Storage",id:"\ufe0f-hashes-for-key-value-storage",level:2}];function d(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"\ufe0f-hashes-for-key-value-storage",children:"\ud83d\uddc2\ufe0f Hashes for Key-Value Storage"}),"\n",(0,r.jsx)(a.p,{children:"Hashes (dictionaries) map unique keys to values, allowing fast lookup. Keys are often symbols or strings, and values can be any object. You can add, update, access, and iterate over key-value pairs easily."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:"# Define a hash\nperson = { name: 'Bob', age: 30 }\n# Access a value by key\nputs person[:name]   # => Bob\n# Add or update a key\nperson[:occupation] = 'Developer'\n# Iterate over key-value pairs\nperson.each do |key, value|\n  puts \"#{key}: #{value}\"\nend\n"})})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);