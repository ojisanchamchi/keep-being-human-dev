"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[5437],{65404:(e,a,t)=>{t.d(a,{R:()=>l,x:()=>r});var n=t(36672);const s={},c=n.createContext(s);function l(e){const a=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(c.Provider,{value:a},e.children)}},98471:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"javascript/stimulus/middle/value_change_callbacks","title":"value_change_callbacks","description":"\ud83d\udd14 Value Change Callbacks","source":"@site/docs/javascript/stimulus/middle/value_change_callbacks.md","sourceDirName":"javascript/stimulus/middle","slug":"/javascript/stimulus/middle/value_change_callbacks","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/value_change_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/middle/value_change_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"turbo_frames_integration","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/turbo_frames_integration"},"next":{"title":"advanced_error_handling_streams","permalink":"/keep-being-human-dev/docs/javascript/turbo/advanced/advanced_error_handling_streams"}}');var s=t(23420),c=t(65404);const l={},r=void 0,u={},i=[{value:"\ud83d\udd14 Value Change Callbacks",id:"-value-change-callbacks",level:2}];function o(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h2,{id:"-value-change-callbacks",children:"\ud83d\udd14 Value Change Callbacks"}),"\n",(0,s.jsxs)(a.p,{children:["Stimulus supports ",(0,s.jsx)(a.code,{children:"<value>Changed"})," callbacks that trigger automatically when a value changes. Use this to reactively update the DOM or trigger side effects."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-js",children:'import { Controller } from "@hotwired/stimulus"\n\nexport default class extends Controller {\n  static values = { count: Number }\n\n  connect() {\n    this.countValue = 0\n  }\n\n  increment() {\n    this.countValue++\n  }\n\n  countValueChanged(newValue, oldValue) {\n    this.element.textContent = `Count: ${newValue}`\n  }\n}\n'})})]})}function d(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);