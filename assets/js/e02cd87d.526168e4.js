"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86384],{65404:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>c});var t=a(36672);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},81133:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>_,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/models/advanced/db_check_constraints_for_validation","title":"db_check_constraints_for_validation","description":"\u2705 Enforcing Database-level Constraints with Migrations","source":"@site/docs/rails/models/advanced/db_check_constraints_for_validation.md","sourceDirName":"rails/models/advanced","slug":"/rails/models/advanced/db_check_constraints_for_validation","permalink":"/keep-being-human-dev/docs/rails/models/advanced/db_check_constraints_for_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/advanced/db_check_constraints_for_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_attribute_api_types","permalink":"/keep-being-human-dev/docs/rails/models/advanced/custom_attribute_api_types"},"next":{"title":"model_concerns_for_modular_logic","permalink":"/keep-being-human-dev/docs/rails/models/advanced/model_concerns_for_modular_logic"}}');var s=a(23420),i=a(65404);const o={},c=void 0,r={},d=[{value:"\u2705 Enforcing Database-level Constraints with Migrations",id:"-enforcing-database-level-constraints-with-migrations",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-enforcing-database-level-constraints-with-migrations",children:"\u2705 Enforcing Database-level Constraints with Migrations"}),"\n",(0,s.jsxs)(n.p,{children:["Add database check constraints to enforce invariants and keep your data consistent even if validations are skipped. Use ",(0,s.jsx)(n.code,{children:"add_check_constraint"})," in migrations and mirror them in model validations."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# db/migrate/XXXX_add_positive_balance_constraint.rb\nclass AddPositiveBalanceConstraint < ActiveRecord::Migration[6.1]\n  def change\n    add_check_constraint :accounts, 'balance >= 0', name: 'balance_non_negative'\n  end\nend\n\n# app/models/account.rb\nclass Account < ApplicationRecord\n  validates :balance, numericality: { greater_than_or_equal_to: 0 }\nend\n"})})]})}function _(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);