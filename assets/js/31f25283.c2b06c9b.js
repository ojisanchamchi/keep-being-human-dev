"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[56793],{55382:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"gems/faraday/beginner/faraday_install_config","title":"faraday_install_config","description":"\ud83d\udee0\ufe0f Installing and Configuring Faraday","source":"@site/docs/gems/faraday/beginner/faraday_install_config.md","sourceDirName":"gems/faraday/beginner","slug":"/gems/faraday/beginner/faraday_install_config","permalink":"/keep-being-human-dev/docs/gems/faraday/beginner/faraday_install_config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/faraday/beginner/faraday_install_config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"faraday_get_request","permalink":"/keep-being-human-dev/docs/gems/faraday/beginner/faraday_get_request"},"next":{"title":"custom_instrumentation_middleware","permalink":"/keep-being-human-dev/docs/gems/faraday/expert/custom_instrumentation_middleware"}}');var t=n(23420),s=n(65404);const i={},o=void 0,d={},c=[{value:"\ud83d\udee0\ufe0f Installing and Configuring Faraday",id:"\ufe0f-installing-and-configuring-faraday",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"\ufe0f-installing-and-configuring-faraday",children:"\ud83d\udee0\ufe0f Installing and Configuring Faraday"}),"\n",(0,t.jsx)(a.p,{children:"Faraday is a flexible HTTP client library for Ruby that supports middleware stacking. To begin, add the gem and a JSON middleware to your Gemfile, then create a connection object to handle requests and responses uniformly."}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:"# Gemfile\ngem 'faraday'\ngem 'faraday_middleware'\n"})}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:"# config/initializers/faraday.rb\nrequire 'faraday'\nrequire 'faraday_middleware'\n\nconn = Faraday.new(url: 'https://api.example.com') do |f|\n  f.request  :url_encoded                # form-encode POST params\n  f.response :logger, nil, { headers: true, bodies: true }  # log requests & responses\n  f.response :json, content_type: /\n/             # parse JSON responses automatically\n  f.adapter  Faraday.default_adapter     # choose Net::HTTP or other adapters\nend\n"})}),"\n",(0,t.jsxs)(a.p,{children:["This setup ensures your HTTP requests are encoded properly, logged for debugging, and JSON responses are parsed into Ruby hashes without extra effort. You can now reuse ",(0,t.jsx)(a.code,{children:"conn"})," across your application to keep code DRY."]})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var r=n(36672);const t={},s=r.createContext(t);function i(e){const a=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:a},e.children)}}}]);