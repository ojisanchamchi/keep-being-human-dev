"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13555],{42379:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/controllers/middle/nested_resources_management","title":"nested_resources_management","description":"\ud83d\udce6 Manage Nested Resources","source":"@site/docs/rails/controllers/middle/nested_resources_management.md","sourceDirName":"rails/controllers/middle","slug":"/rails/controllers/middle/nested_resources_management","permalink":"/keep-being-human-dev/docs/rails/controllers/middle/nested_resources_management","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/middle/nested_resources_management.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"namespaced_api_controller","permalink":"/keep-being-human-dev/docs/rails/controllers/middle/namespaced_api_controller"},"next":{"title":"redirect_back_fallback","permalink":"/keep-being-human-dev/docs/rails/controllers/middle/redirect_back_fallback"}}');var t=s(23420),o=s(65404);const a={},c=void 0,d={},l=[{value:"\ud83d\udce6 Manage Nested Resources",id:"-manage-nested-resources",level:2}];function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-manage-nested-resources",children:"\ud83d\udce6 Manage Nested Resources"}),"\n",(0,t.jsxs)(n.p,{children:["When dealing with nested resources, load parent and child records clearly to avoid confusion. Use nested routes and ",(0,t.jsx)(n.code,{children:"before_action"})," to set parents. This provides context and ensures correct scoping."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# config/routes.rb\nresources :projects do\n  resources :tasks\nend\n\n# app/controllers/tasks_controller.rb\nclass TasksController < ApplicationController\n  before_action :set_project\n  before_action :set_task, only: [:show, :edit, :update, :destroy]\n\n  def index\n    @tasks = @project.tasks\n  end\n\n  private\n\n  def set_project\n    @project = Project.find(params[:project_id])\n  end\n\n  def set_task\n    @task = @project.tasks.find(params[:id])\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var r=s(36672);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);