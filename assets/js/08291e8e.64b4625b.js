"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9359],{65404:(a,e,n)=>{n.d(e,{R:()=>o,x:()=>s});var c=n(36672);const t={},r=c.createContext(t);function o(a){const e=c.useContext(r);return c.useMemo(function(){return"function"==typeof a?a(e):{...e,...a}},[e,a])}function s(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:o(a.components),c.createElement(r.Provider,{value:e},a.children)}},93040:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"rails/active_record_callbacks/advanced/around_transaction_callbacks","title":"around_transaction_callbacks","description":"\ud83d\udd04 Tip: Around Callbacks for Transaction Management","source":"@site/docs/rails/active_record_callbacks/advanced/around_transaction_callbacks.md","sourceDirName":"rails/active_record_callbacks/advanced","slug":"/rails/active_record_callbacks/advanced/around_transaction_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/around_transaction_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/advanced/around_transaction_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"active_support_callbacks_api","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/active_support_callbacks_api"},"next":{"title":"callback_performance_tips","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/callback_performance_tips"}}');var t=n(23420),r=n(65404);const o={},s=void 0,i={},l=[{value:"\ud83d\udd04 Tip: Around Callbacks for Transaction Management",id:"-tip-around-callbacks-for-transaction-management",level:2}];function d(a){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"-tip-around-callbacks-for-transaction-management",children:"\ud83d\udd04 Tip: Around Callbacks for Transaction Management"}),"\n",(0,t.jsxs)(e.p,{children:["Use ",(0,t.jsx)(e.code,{children:"around_*"})," callbacks to wrap operations in a transaction or custom context. This is helpful when you need to enforce atomicity or resource setup/teardown."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ruby",children:"class Invoice < ApplicationRecord\n  around_save :with_audit_log\n\n  private\n\n  def with_audit_log\n    ActiveRecord::Base.transaction do\n      AuditLog.create!(action: 'invoice_save', record: self)\n      yield\n    end\n  end\nend\n"})}),"\n",(0,t.jsx)(e.p,{children:"This pattern guarantees that both your audit log and the record save happen in the same transaction."})]})}function u(a={}){const{wrapper:e}={...(0,r.R)(),...a.components};return e?(0,t.jsx)(e,{...a,children:(0,t.jsx)(d,{...a})}):d(a)}}}]);