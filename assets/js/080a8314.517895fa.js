"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[30734],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(36672);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},90004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"ruby/file_io/advanced/tail_f_implementation","title":"tail_f_implementation","description":"\ud83d\udd04 Implement tail -f with seek and readpartial","source":"@site/docs/ruby/file_io/advanced/tail_f_implementation.md","sourceDirName":"ruby/file_io/advanced","slug":"/ruby/file_io/advanced/tail_f_implementation","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/tail_f_implementation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/advanced/tail_f_implementation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"nonblocking_io_select","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/nonblocking_io_select"},"next":{"title":"zero_copy_io","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/zero_copy_io"}}');var a=t(23420),r=t(65404);const o={},d=void 0,l={},s=[{value:"\ud83d\udd04 Implement tail -f with seek and readpartial",id:"-implement-tail--f-with-seek-and-readpartial",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-implement-tail--f-with-seek-and-readpartial",children:"\ud83d\udd04 Implement tail -f with seek and readpartial"}),"\n",(0,a.jsxs)(n.p,{children:["Reproduce the Unix ",(0,a.jsx)(n.code,{children:"tail -f"})," functionality in Ruby by seeking to the file\u2019s end and periodically reading new data with ",(0,a.jsx)(n.code,{children:"readpartial"}),". This approach works cross-platform without external dependencies."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"File.open('app.log', 'r') do |f|\n  f.seek(0, IO::SEEK_END)\n  loop do\n    begin\n      print f.readpartial(4096)\n    rescue EOFError\n      sleep 0.5\n      retry\n    end\n  end\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can extend this to yield lines via an ",(0,a.jsx)(n.code,{children:"Enumerator"})," or integrate with event-driven frameworks."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);