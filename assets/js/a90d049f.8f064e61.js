"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[6452],{65404:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>r});var n=i(36672);const o={},s=n.createContext(o);function c(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(s.Provider,{value:t},e.children)}},97933:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"rails/models/expert/custom_optimistic_locking","title":"custom_optimistic_locking","description":"\ud83e\udd84 Customize Optimistic Locking Column","source":"@site/docs/rails/models/expert/custom_optimistic_locking.md","sourceDirName":"rails/models/expert","slug":"/rails/models/expert/custom_optimistic_locking","permalink":"/keep-being-human-dev/docs/rails/models/expert/custom_optimistic_locking","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/expert/custom_optimistic_locking.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_dirty_tracking","permalink":"/keep-being-human-dev/docs/rails/models/expert/custom_dirty_tracking"},"next":{"title":"dynamic_scopes_metaprogramming","permalink":"/keep-being-human-dev/docs/rails/models/expert/dynamic_scopes_metaprogramming"}}');var o=i(23420),s=i(65404);const c={},r=void 0,l={},a=[{value:"\ud83e\udd84 Customize Optimistic Locking Column",id:"-customize-optimistic-locking-column",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-customize-optimistic-locking-column",children:"\ud83e\udd84 Customize Optimistic Locking Column"}),"\n",(0,o.jsxs)(t.p,{children:["By default, Rails uses a ",(0,o.jsx)(t.code,{children:"lock_version"})," column. You can override it to use custom naming or multiple locks across different concerns. This is helpful when you have versioned fields in the same table."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"class Product < ApplicationRecord\n  self.locking_column = :inventory_version\nend\n\n# Schema:\n# t.integer :inventory_version, default: 0, null: false\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Now ActiveRecord will increment ",(0,o.jsx)(t.code,{children:"inventory_version"})," on update and raise ",(0,o.jsx)(t.code,{children:"ActiveRecord::StaleObjectError"})," if another transaction updated the same record first."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);