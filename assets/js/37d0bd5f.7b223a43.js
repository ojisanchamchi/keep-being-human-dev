"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64918],{31619:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"ruby/csv/middle/resilient_parsing","title":"resilient_parsing","description":"\u26a0\ufe0f Handle Malformed Rows Gracefully","source":"@site/docs/ruby/csv/middle/resilient_parsing.md","sourceDirName":"ruby/csv/middle","slug":"/ruby/csv/middle/resilient_parsing","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/resilient_parsing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/csv/middle/resilient_parsing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"headers_and_converters","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/headers_and_converters"},"next":{"title":"bitwise_operations","permalink":"/keep-being-human-dev/docs/ruby/data_types/advanced/bitwise_operations"}}');var i=r(23420),t=r(65404);const o={},a=void 0,d={},l=[{value:"\u26a0\ufe0f Handle Malformed Rows Gracefully",id:"\ufe0f-handle-malformed-rows-gracefully",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-handle-malformed-rows-gracefully",children:"\u26a0\ufe0f Handle Malformed Rows Gracefully"}),"\n",(0,i.jsxs)(n.p,{children:["Real\u2011world CSVs often contain missing fields, extra columns, or broken encoding. Use ",(0,i.jsx)(n.code,{children:"liberal_parsing: true"})," and ",(0,i.jsx)(n.code,{children:"skip_blanks: true"})," to forgive minor issues, and rescue ",(0,i.jsx)(n.code,{children:"CSV::MalformedCSVError"})," to log or skip truly broken lines without halting your process."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"require 'csv'\n\nFile.open('messy.csv', 'r:bom|utf-8') do |file|\n  parser = CSV.new(file, liberal_parsing: true, skip_blanks: true)\n  parser.each_with_index do |row, idx|\n    begin\n      puts \"Row #{idx}: #{row.inspect}\"\n    rescue CSV::MalformedCSVError => e\n      warn \"Skipped malformed row #{idx}: #{e.message}\"\n    end\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(36672);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);