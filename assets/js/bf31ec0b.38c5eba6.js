"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[81225],{46915:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/serialization/middle/active_model_serializer_example","title":"active_model_serializer_example","description":"\ud83d\udd27 Leverage ActiveModel::Serializers for Structured APIs","source":"@site/docs/ruby/serialization/middle/active_model_serializer_example.md","sourceDirName":"ruby/serialization/middle","slug":"/ruby/serialization/middle/active_model_serializer_example","permalink":"/keep-being-human-dev/docs/ruby/serialization/middle/active_model_serializer_example","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/serialization/middle/active_model_serializer_example.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"versioned_marshal","permalink":"/keep-being-human-dev/docs/ruby/serialization/expert/versioned_marshal"},"next":{"title":"customizing_to_json_example","permalink":"/keep-being-human-dev/docs/ruby/serialization/middle/customizing_to_json_example"}}');var t=i(23420),a=i(65404);const n={},o=void 0,l={},d=[{value:"\ud83d\udd27 Leverage ActiveModel::Serializers for Structured APIs",id:"-leverage-activemodelserializers-for-structured-apis",level:2}];function c(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"-leverage-activemodelserializers-for-structured-apis",children:"\ud83d\udd27 Leverage ActiveModel::Serializers for Structured APIs"}),"\n",(0,t.jsx)(r.p,{children:"ActiveModel::Serializer allows you to extract JSON structure into dedicated classes, giving you reusable, testable serializers. Define attributes, associations, and custom methods in your serializer for consistent API responses."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ruby",children:"# app/serializers/user_serializer.rb\nclass UserSerializer < ActiveModel::Serializer\n  attributes :id, :name, :email\n  has_many :posts\n\n  def email\n    object.email.downcase\n  end\nend\n\n# In controller\ndef show\n  user = User.find(params[:id])\n  render json: user, serializer: UserSerializer\nend\n"})})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,r,i)=>{i.d(r,{R:()=>n,x:()=>o});var s=i(36672);const t={},a=s.createContext(t);function n(e){const r=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);