"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27611],{65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(36672);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},70109:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/performance/expert/streaming_live_responses","title":"streaming_live_responses","description":"\ud83c\udf0a High-Throughput Streaming with ActionController::Live","source":"@site/docs/rails/performance/expert/streaming_live_responses.md","sourceDirName":"rails/performance/expert","slug":"/rails/performance/expert/streaming_live_responses","permalink":"/keep-being-human-dev/docs/rails/performance/expert/streaming_live_responses","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/expert/streaming_live_responses.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"puma_connection_pool_tuning","permalink":"/keep-being-human-dev/docs/rails/performance/expert/puma_connection_pool_tuning"},"next":{"title":"two_level_caching","permalink":"/keep-being-human-dev/docs/rails/performance/expert/two_level_caching"}}');var o=r(23420),s=r(65404);const i={},a=void 0,c={},l=[{value:"\ud83c\udf0a High-Throughput Streaming with ActionController::Live",id:"-high-throughput-streaming-with-actioncontrollerlive",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-high-throughput-streaming-with-actioncontrollerlive",children:"\ud83c\udf0a High-Throughput Streaming with ActionController::Live"}),"\n",(0,o.jsxs)(n.p,{children:["Stream large result sets or event data without buffering the full payload in memory by using ",(0,o.jsx)(n.code,{children:"ActionController::Live"}),". Combine this with ",(0,o.jsx)(n.code,{children:"Rack::Deflater"})," to gzip chunks on the fly."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class ReportsController < ApplicationController\n  include ActionController::Live\n\n  def download_csv\n    response.headers['Content-Type'] = 'text/csv'\n    response.headers['Content-Encoding'] = 'gzip'\n\n    gzip = Zlib::GzipWriter.new(response.stream)\n    csv  = CSV.new(gzip)\n\n    csv << %w[id name created_at]\n    User.find_each(batch_size: 10_000) do |user|\n      csv << [user.id, user.name, user.created_at]\n    end\n  ensure\n    gzip.close\n    response.stream.close\n  end\nend\n"})}),"\n",(0,o.jsx)(n.p,{children:"This approach keeps your memory footprint bounded even when exporting millions of rows."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);