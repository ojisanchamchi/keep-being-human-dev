"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23173],{16340:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>r});const c=JSON.parse('{"id":"rails/active_record_callbacks/beginner/conditional_callback_if_unless","title":"conditional_callback_if_unless","description":"\u2699\ufe0f Conditional Callbacks with if and unless","source":"@site/docs/rails/active_record_callbacks/beginner/conditional_callback_if_unless.md","sourceDirName":"rails/active_record_callbacks/beginner","slug":"/rails/active_record_callbacks/beginner/conditional_callback_if_unless","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/conditional_callback_if_unless","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/beginner/conditional_callback_if_unless.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"before_validation_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_validation_usage"},"next":{"title":"multiple_callbacks_order","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/multiple_callbacks_order"}}');var i=a(23420),t=a(65404);const s={},o=void 0,l={},r=[{value:"\u2699\ufe0f Conditional Callbacks with <code>if</code> and <code>unless</code>",id:"\ufe0f-conditional-callbacks-with-if-and-unless",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"\ufe0f-conditional-callbacks-with-if-and-unless",children:["\u2699\ufe0f Conditional Callbacks with ",(0,i.jsx)(n.code,{children:"if"})," and ",(0,i.jsx)(n.code,{children:"unless"})]}),"\n",(0,i.jsxs)(n.p,{children:["You can restrict when a callback runs by using ",(0,i.jsx)(n.code,{children:"if:"})," or ",(0,i.jsx)(n.code,{children:"unless:"})," options. This prevents unnecessary work for records that don't meet certain conditions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class Post < ApplicationRecord\n  before_save :sanitize_content, if: :needs_sanitization?\n\n  private\n\n  def needs_sanitization?\n    content_changed?\n  end\n\n  def sanitize_content\n    self.content = Sanitize.fragment(content)\n  end\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here, sanitization only occurs if the ",(0,i.jsx)(n.code,{children:"content"})," attribute has changed."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var c=a(36672);const i={},t=c.createContext(i);function s(e){const n=c.useContext(t);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),c.createElement(t.Provider,{value:n},e.children)}}}]);