"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38504],{65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var t=r(36672);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},77906:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"javascript/turbo/advanced/advanced_error_handling_streams","title":"advanced_error_handling_streams","description":"\ud83c\udf9b\ufe0f Advanced Error Handling in Turbo Streams","source":"@site/docs/javascript/turbo/advanced/advanced_error_handling_streams.md","sourceDirName":"javascript/turbo/advanced","slug":"/javascript/turbo/advanced/advanced_error_handling_streams","permalink":"/keep-being-human-dev/docs/javascript/turbo/advanced/advanced_error_handling_streams","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/turbo/advanced/advanced_error_handling_streams.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"value_change_callbacks","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/value_change_callbacks"},"next":{"title":"custom_form_submission_frame","permalink":"/keep-being-human-dev/docs/javascript/turbo/advanced/custom_form_submission_frame"}}');var a=r(23420),s=r(65404);const o={},d=void 0,c={},i=[{value:"\ud83c\udf9b\ufe0f Advanced Error Handling in Turbo Streams",id:"\ufe0f-advanced-error-handling-in-turbo-streams",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-advanced-error-handling-in-turbo-streams",children:"\ud83c\udf9b\ufe0f Advanced Error Handling in Turbo Streams"}),"\n",(0,a.jsx)(n.p,{children:"Centralize error alerts for all Turbo Frame and Stream failures by listening to global events. You can show a unified toast or rollback optimistic UI changes based on response codes."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"// app/javascript/error_handler.js\nfunction showError(message) {\n  // Implement your toast or modal here\n  alert(`Error: ${message}`)\n}\n\ndocument.addEventListener('turbo:submit-end', event => {\n  const { success, fetchResponse } = event.detail\n  if (!success) {\n    fetchResponse.text().then(body => showError(body))\n  }\n})\n\ndocument.addEventListener('turbo:before-stream-render', event => {\n  if (event.target.getAttribute('action') === 'error') {\n    showError(event.target.templateElement.textContent)\n    event.preventDefault()\n  }\n})\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);