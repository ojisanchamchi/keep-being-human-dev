"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47262],{6610:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"rails/active_record_callbacks/middle/email_after_commit","title":"email_after_commit","description":"\ud83d\udce7 Send Emails After Commit with after_commit","source":"@site/docs/rails/active_record_callbacks/middle/email_after_commit.md","sourceDirName":"rails/active_record_callbacks/middle","slug":"/rails/active_record_callbacks/middle/email_after_commit","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/email_after_commit","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/middle/email_after_commit.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"default_values_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/default_values_validation"},"next":{"title":"normalize_attribute","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/middle/normalize_attribute"}}');var r=a(23420),c=a(65404);const n={},s=void 0,l={},o=[{value:"\ud83d\udce7 Send Emails After Commit with after_commit",id:"-send-emails-after-commit-with-after_commit",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-send-emails-after-commit-with-after_commit",children:"\ud83d\udce7 Send Emails After Commit with after_commit"}),"\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.code,{children:"after_commit"})," to trigger external side-effects like sending emails only after the transaction successfully commits. This guards against sending notifications for rolled-back changes."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"class Purchase < ApplicationRecord\n  after_commit :send_receipt_email, on: :create\n\n  private\n\n  def send_receipt_email\n    ReceiptMailer.with(purchase: self).deliver_later\n  end\nend\n"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"on: :create"})," ensures the callback runs only for new records, and ",(0,r.jsx)(t.code,{children:"deliver_later"})," enqueues the mail job, keeping request times fast."]})]})}function m(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>s});var i=a(36672);const r={},c=i.createContext(r);function n(e){const t=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);