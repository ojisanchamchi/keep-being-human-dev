"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11472],{47161:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/active_record_associations/beginner/has_one_association","title":"has_one_association","description":"\ud83c\udf31 Use has_one for Single Associations","source":"@site/docs/rails/active_record_associations/beginner/has_one_association.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/has_one_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_one_association","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/has_one_association.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"has_many_through_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_many_through_association"},"next":{"title":"inverse_of_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/inverse_of_option"}}');var i=n(23420),a=n(65404);const t={},r=void 0,c={},d=[{value:"\ud83c\udf31 Use <code>has_one</code> for Single Associations",id:"-use-has_one-for-single-associations",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h2,{id:"-use-has_one-for-single-associations",children:["\ud83c\udf31 Use ",(0,i.jsx)(s.code,{children:"has_one"})," for Single Associations"]}),"\n",(0,i.jsxs)(s.p,{children:["When a model should have exactly one of another model, use ",(0,i.jsx)(s.code,{children:"has_one"}),". It sets up getter and setter methods similar to ",(0,i.jsx)(s.code,{children:"belongs_to"})," but on the parent side."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  has_one :profile\nend\n"})}),"\n",(0,i.jsxs)(s.p,{children:["You can call ",(0,i.jsx)(s.code,{children:"user.profile"})," to fetch the profile or ",(0,i.jsx)(s.code,{children:'user.build_profile(bio: "Hello")'})," to instantiate a new one linked to the user."]})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>r});var o=n(36672);const i={},a=o.createContext(i);function t(e){const s=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(a.Provider,{value:s},e.children)}}}]);