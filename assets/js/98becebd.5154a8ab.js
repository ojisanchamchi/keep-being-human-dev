"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[84345],{18171:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/define_method/advanced/custom_visibility_hooks","title":"custom_visibility_hooks","description":"\ud83d\udee0\ufe0f Defining Methods with Custom Visibility and Hooks","source":"@site/docs/ruby/define_method/advanced/custom_visibility_hooks.md","sourceDirName":"ruby/define_method/advanced","slug":"/ruby/define_method/advanced/custom_visibility_hooks","permalink":"/keep-being-human-dev/docs/ruby/define_method/advanced/custom_visibility_hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/define_method/advanced/custom_visibility_hooks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parse_custom_strptime","permalink":"/keep-being-human-dev/docs/ruby/date_time/middle/parse_custom_strptime"},"next":{"title":"dsl_scope_capture","permalink":"/keep-being-human-dev/docs/ruby/define_method/advanced/dsl_scope_capture"}}');var o=i(23420),s=i(65404);const d={},a=void 0,r={},c=[{value:"\ud83d\udee0\ufe0f Defining Methods with Custom Visibility and Hooks",id:"\ufe0f-defining-methods-with-custom-visibility-and-hooks",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-defining-methods-with-custom-visibility-and-hooks",children:"\ud83d\udee0\ufe0f Defining Methods with Custom Visibility and Hooks"}),"\n",(0,o.jsxs)(n.p,{children:["Enhance ",(0,o.jsx)(n.code,{children:"define_method"})," with custom visibility settings and automatic hooks to register or modify behavior immediately after definition."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'module Hookable\n  def self.included(base)\n    base.extend ClassMethods\n  end\n\n  module ClassMethods\n    def define_with_hooks(name, visibility=:public, &block)\n      define_method(name, &block)\n      send(visibility, name)\n      after_define(name)\n    end\n\n    # Hook invoked after each definition\n    def after_define(name)\n      (@_defined_methods ||= []) << name\n    end\n\n    def defined_methods\n      @_defined_methods || []\n    end\n  end\nend\n\nclass MyService\n  include Hookable\n\n  define_with_hooks(:perform, :private) do |data|\n    puts "Processing "+data.to_s\n  end\nend\n\nMyService.defined_methods  # => [:perform]\nMyService.private_instance_methods.include?(:perform) # => true\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var t=i(36672);const o={},s=t.createContext(o);function d(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);