"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15734],{65404:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var a=n(36672);const t={},d=a.createContext(t);function c(e){const s=a.useContext(d);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(d.Provider,{value:s},e.children)}},69201:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/classes_and_modules/advanced/eigenclass_methods","title":"eigenclass_methods","description":"\u2728 Defining Class Methods via the Eigenclass","source":"@site/docs/ruby/classes_and_modules/advanced/eigenclass_methods.md","sourceDirName":"ruby/classes_and_modules/advanced","slug":"/ruby/classes_and_modules/advanced/eigenclass_methods","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/eigenclass_methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/advanced/eigenclass_methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_delegators","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/dynamic_delegators"},"next":{"title":"extend_class_methods_on_include","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/extend_class_methods_on_include"}}');var t=n(23420),d=n(65404);const c={},o=void 0,i={},l=[{value:"\u2728 Defining Class Methods via the Eigenclass",id:"-defining-class-methods-via-the-eigenclass",level:2}];function r(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-defining-class-methods-via-the-eigenclass",children:"\u2728 Defining Class Methods via the Eigenclass"}),"\n",(0,t.jsx)(s.p,{children:"You can open the singleton class (eigenclass) to add private or protected class methods and mixins in a clear, encapsulated way."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'class Payment\n  class << self\n    private\n\n    def gateway_config\n      @config ||= {timeout: 5}\n    end\n  end\n\n  def self.process(amount)\n    puts "Processing with timeout=#{gateway_config[:timeout]}"\n  end\nend\n\nPayment.process(100) # => "Processing with timeout=5"\n'})}),"\n",(0,t.jsx)(s.p,{children:"Use this pattern to hide implementation details of your class-level API."})]})}function u(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}}}]);