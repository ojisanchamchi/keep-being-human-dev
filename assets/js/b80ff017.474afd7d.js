"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97757],{65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var i=t(36672);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},79706:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"ruby/metaprogramming/advanced/dynamic_singleton_methods","title":"dynamic_singleton_methods","description":"\ud83d\udd12 Securing dynamic singletons with definesingletonmethod","source":"@site/docs/ruby/metaprogramming/advanced/dynamic_singleton_methods.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/dynamic_singleton_methods","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/dynamic_singleton_methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/dynamic_singleton_methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_delegator_generation","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/dynamic_delegator_generation"},"next":{"title":"eigenclass_singleton_methods","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/eigenclass_singleton_methods"}}');var o=t(23420),a=t(65404);const s={},d=void 0,c={},r=[{value:"\ud83d\udd12 Securing dynamic singletons with <code>define_singleton_method</code>",id:"-securing-dynamic-singletons-with-define_singleton_method",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"-securing-dynamic-singletons-with-define_singleton_method",children:["\ud83d\udd12 Securing dynamic singletons with ",(0,o.jsx)(n.code,{children:"define_singleton_method"})]}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"define_singleton_method"})," to add methods to individual objects safely, encapsulating behavior without modifying classes or using ",(0,o.jsx)(n.code,{children:"eval"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"api_client = Object.new\napi_client.define_singleton_method(:fetch_data) do |endpoint|\n  HTTP.get(\"https://api.example.com/#{endpoint}\")\nend\n\napi_client.fetch_data('users')\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);