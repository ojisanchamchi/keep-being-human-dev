"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[57239],{65404:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var n=t(36672);const a={},r=n.createContext(a);function i(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:s},e.children)}},77726:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"ruby/hashes/middle/slice_hash","title":"slice_hash","description":"\u2702\ufe0f Slicing a Hash to Extract a Subset","source":"@site/docs/ruby/hashes/middle/slice_hash.md","sourceDirName":"ruby/hashes/middle","slug":"/ruby/hashes/middle/slice_hash","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/slice_hash","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/middle/slice_hash.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"select_and_reject","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/select_and_reject"},"next":{"title":"sort_by_key_or_value","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/sort_by_key_or_value"}}');var a=t(23420),r=t(65404);const i={},c=void 0,o={},l=[{value:"\u2702\ufe0f Slicing a Hash to Extract a Subset",id:"\ufe0f-slicing-a-hash-to-extract-a-subset",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"\ufe0f-slicing-a-hash-to-extract-a-subset",children:"\u2702\ufe0f Slicing a Hash to Extract a Subset"}),"\n",(0,a.jsxs)(s.p,{children:["To extract only specific keys from a hash, use ",(0,a.jsx)(s.code,{children:"slice"})," (Ruby 2.5+). This returns a new hash with only the given keys, ignoring any that don't exist."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"profile = { name: 'Bob', age: 30, city: 'NYC', role: 'admin' }\n# Keep only name and role\nbasic = profile.slice(:name, :role)\n# => { name: 'Bob', role: 'admin' }\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);