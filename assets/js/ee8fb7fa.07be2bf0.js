"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[90117],{35840:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"ruby/classes_and_modules/expert/concern_pattern_composition","title":"concern_pattern_composition","description":"\ud83e\udd1d Entity Composition with Concern Patterns","source":"@site/docs/ruby/classes_and_modules/expert/concern_pattern_composition.md","sourceDirName":"ruby/classes_and_modules/expert","slug":"/ruby/classes_and_modules/expert/concern_pattern_composition","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/concern_pattern_composition","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/expert/concern_pattern_composition.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"autoload_lazy_loading","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/autoload_lazy_loading"},"next":{"title":"const_missing_dynamic_resolution","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/expert/const_missing_dynamic_resolution"}}');var s=t(23420),i=t(65404);const c={},r=void 0,a={},d=[{value:"\ud83e\udd1d Entity Composition with Concern Patterns",id:"-entity-composition-with-concern-patterns",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-entity-composition-with-concern-patterns",children:"\ud83e\udd1d Entity Composition with Concern Patterns"}),"\n",(0,s.jsxs)(n.p,{children:["Rails\u2019 ",(0,s.jsx)(n.code,{children:"ActiveSupport::Concern"})," simplifies module inclusion, dependency declaration, and shared logic. Use ",(0,s.jsx)(n.code,{children:"included"})," and ",(0,s.jsx)(n.code,{children:"ClassMethods"})," within concerns to compose features across models or controllers with minimal friction."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"module Taggable\n  extend ActiveSupport::Concern\n\n  included do\n    has_many :taggings\n    has_many :tags, through: :taggings\n  end\n\n  def tag_list\n    tags.map(&:name).join(', ')\n  end\nend\n\nclass Article < ApplicationRecord\n  include Taggable\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"Concerns enforce order of inclusion and avoid common mixin pitfalls."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(36672);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);