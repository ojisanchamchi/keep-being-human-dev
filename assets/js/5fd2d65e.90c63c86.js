"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2516],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(36672);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}},71013:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"rails/controllers/expert/streaming_action_controller_live","title":"streaming_action_controller_live","description":"\ud83d\ude80 Streaming with ActionController::Live","source":"@site/docs/rails/controllers/expert/streaming_action_controller_live.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/streaming_action_controller_live","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/streaming_action_controller_live","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/streaming_action_controller_live.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rescue_from_custom_exceptions","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/rescue_from_custom_exceptions"},"next":{"title":"strong_params_dynamic_filters","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/strong_params_dynamic_filters"}}');var o=t(23420),s=t(65404);const i={},l=void 0,c={},a=[{value:"\ud83d\ude80 Streaming with ActionController::Live",id:"-streaming-with-actioncontrollerlive",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-streaming-with-actioncontrollerlive",children:"\ud83d\ude80 Streaming with ActionController::Live"}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"ActionController::Live"})," to push real-time data directly to clients without polling. This approach leverages Rack\u2019s streaming API and keeps the HTTP connection open, allowing you to send server\u2010sent events or chunked responses. Remember to close the stream in an ",(0,o.jsx)(n.code,{children:"ensure"})," block to avoid connection leaks."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class StreamsController < ApplicationController\n  include ActionController::Live\n\n  def events\n    response.headers['Content-Type'] = 'text/event-stream'\n\n    10.times do |i|\n      response.stream.write \"data: Event ##{i} at #{Time.now}\\n\\n\"\n      sleep 1\n    end\n  ensure\n    response.stream.close\n  end\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);