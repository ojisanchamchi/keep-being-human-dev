"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[5430],{47972:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>_,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/active_record_validations/expert/defer_validations_before_validation","title":"defer_validations_before_validation","description":"\u23f3 Deferring Validations with before_validation","source":"@site/docs/rails/active_record_validations/expert/defer_validations_before_validation.md","sourceDirName":"rails/active_record_validations/expert","slug":"/rails/active_record_validations/expert/defer_validations_before_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/defer_validations_before_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/expert/defer_validations_before_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"db_constraints_parallel","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/db_constraints_parallel"},"next":{"title":"dynamic_conditional_validations","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/dynamic_conditional_validations"}}');var n=a(23420),r=a(65404);const o={},d=void 0,s={},l=[{value:"\u23f3 Deferring Validations with before_validation",id:"-deferring-validations-with-before_validation",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-deferring-validations-with-before_validation",children:"\u23f3 Deferring Validations with before_validation"}),"\n",(0,n.jsxs)(t.p,{children:["Use ",(0,n.jsx)(t.code,{children:"before_validation"})," to mutate or load data just-in-time, ensuring validations see the final state. This pattern is critical when default values or external lookups need to populate attributes before validation runs."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# app/models/invoice.rb\nclass Invoice < ApplicationRecord\n  before_validation :set_default_due_date, on: :create\n  validates :due_date, presence: true, timeliness: { on_or_after: :today }\n\n  private\n\n  def set_default_due_date\n    self.due_date ||= created_at&.to_date + default_term.days || Time.zone.today + default_term.days\n  end\n\n  def default_term\n    Rails.configuration.x.invoice.default_term_days\n  end\nend\n"})})]})}function _(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},65404:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>d});var i=a(36672);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);