"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[71246],{44390:(e,c,a)=>{a.r(c),a.d(c,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"rails/active_record_callbacks/advanced/introspect_reorder_callbacks","title":"introspect_reorder_callbacks","description":"\ud83d\udd0d Tip: Introspecting and Reordering Callbacks","source":"@site/docs/rails/active_record_callbacks/advanced/introspect_reorder_callbacks.md","sourceDirName":"rails/active_record_callbacks/advanced","slug":"/rails/active_record_callbacks/advanced/introspect_reorder_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/introspect_reorder_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/advanced/introspect_reorder_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"explicit_callback_priority","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/explicit_callback_priority"},"next":{"title":"skip_callbacks_in_tests","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/skip_callbacks_in_tests"}}');var r=a(23420),t=a(65404);const i={},s=void 0,l={},o=[{value:"\ud83d\udd0d Tip: Introspecting and Reordering Callbacks",id:"-tip-introspecting-and-reordering-callbacks",level:2}];function d(e){const c={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(c.h2,{id:"-tip-introspecting-and-reordering-callbacks",children:"\ud83d\udd0d Tip: Introspecting and Reordering Callbacks"}),"\n",(0,r.jsx)(c.p,{children:"For complex apps, inspect and reorder callbacks dynamically at runtime. Use the callback chain API to fetch and manipulate the list."}),"\n",(0,r.jsx)(c.pre,{children:(0,r.jsx)(c.code,{className:"language-ruby",children:"class Product < ApplicationRecord\n  before_save :touch_timestamp\n  before_save :validate_price\n\n  def self.move_callback(callback, to_index)\n    chain = _save_callbacks.dup\n    cb = chain.find { |c| c.filter == callback }\n    chain.delete(cb)\n    chain.insert(to_index, cb)\n    reset_callbacks(:save)\n    chain.each { |c| set_callback(:save, c.kind, c.filter) }\n  end\nend\n\n# In an initializer:\nProduct.move_callback(:validate_price, 0)\n"})}),"\n",(0,r.jsx)(c.p,{children:"This technique helps you resolve ordering issues without altering source code locations."})]})}function p(e={}){const{wrapper:c}={...(0,t.R)(),...e.components};return c?(0,r.jsx)(c,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,c,a)=>{a.d(c,{R:()=>i,x:()=>s});var n=a(36672);const r={},t=n.createContext(r);function i(e){const c=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(c):{...c,...e}},[c,e])}function s(e){let c;return c=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:c},e.children)}}}]);