"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47006],{43934:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"ruby/define_method/expert/hot_swappable_methods","title":"hot_swappable_methods","description":"\u26a1 Hot-Swap Methods with Refinements and define_method","source":"@site/docs/ruby/define_method/expert/hot_swappable_methods.md","sourceDirName":"ruby/define_method/expert","slug":"/ruby/define_method/expert/hot_swappable_methods","permalink":"/keep-being-human-dev/docs/ruby/define_method/expert/hot_swappable_methods","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/define_method/expert/hot_swappable_methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"fluent_dsl_builder","permalink":"/keep-being-human-dev/docs/ruby/define_method/expert/fluent_dsl_builder"},"next":{"title":"preserve_method_metadata","permalink":"/keep-being-human-dev/docs/ruby/define_method/expert/preserve_method_metadata"}}');var d=n(23420),s=n(65404);const r={},a=void 0,i={},h=[{value:"\u26a1 Hot-Swap Methods with Refinements and define_method",id:"-hot-swap-methods-with-refinements-and-define_method",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.h2,{id:"-hot-swap-methods-with-refinements-and-define_method",children:"\u26a1 Hot-Swap Methods with Refinements and define_method"}),"\n",(0,d.jsxs)(t.p,{children:["Refinements let you apply scoped patches without altering global behavior. Combine ",(0,d.jsx)(t.code,{children:"Module#refine"})," with ",(0,d.jsx)(t.code,{children:"define_method"})," to generate hot-swappable implementations that activate only under ",(0,d.jsx)(t.code,{children:"using"}),". This is invaluable for targeted monkey-patching, testing, or feature toggles."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-ruby",children:'module StringPatch\n  refine String do\n    define_method(:reverse) do\n      "[patched] #{super()}"\n    end\n  end\nend\n\nusing StringPatch\nputs "abc".reverse\n# => "[patched] cba"\n# Outside this scope, String#reverse remains untouched.\n'})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(p,{...e})}):p(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(36672);const d={},s=o.createContext(d);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);