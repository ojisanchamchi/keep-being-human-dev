"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64786],{35500:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/date_time/expert/astronomical_julian_day_conversion","title":"astronomical_julian_day_conversion","description":"\ud83c\udf0c Astronomical Calculations with Julian Day","source":"@site/docs/ruby/date_time/expert/astronomical_julian_day_conversion.md","sourceDirName":"ruby/date_time/expert","slug":"/ruby/date_time/expert/astronomical_julian_day_conversion","permalink":"/keep-being-human-dev/docs/ruby/date_time/expert/astronomical_julian_day_conversion","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/date_time/expert/astronomical_julian_day_conversion.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parsing_date_strings","permalink":"/keep-being-human-dev/docs/ruby/date_time/beginner/parsing_date_strings"},"next":{"title":"business_calendar_refinement","permalink":"/keep-being-human-dev/docs/ruby/date_time/expert/business_calendar_refinement"}}');var i=t(23420),r=t(65404);const o={},s=void 0,c={},d=[{value:"\ud83c\udf0c Astronomical Calculations with Julian Day",id:"-astronomical-calculations-with-julian-day",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-astronomical-calculations-with-julian-day",children:"\ud83c\udf0c Astronomical Calculations with Julian Day"}),"\n",(0,i.jsxs)(n.p,{children:["Under the hood, Ruby\u2019s ",(0,i.jsx)(n.code,{children:"Date"})," and ",(0,i.jsx)(n.code,{children:"DateTime"})," use Julian Day (JD) for calendar arithmetic. You can leverage ",(0,i.jsx)(n.code,{children:"Date#jd"})," and ",(0,i.jsx)(n.code,{children:"Date.jd"})," (or ",(0,i.jsx)(n.code,{children:"Date#civil_to_jd"}),") to perform precise astronomical computations, such as calculating the date of an eclipse or converting to Modified Julian Day."]}),"\n",(0,i.jsx)(n.p,{children:"Example: convert a UTC timestamp into JD and back:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"require 'date'\n# Convert a civil date to Julian day\njd = DateTime.new(2024, 6, 30, 12, 0, 0, '+00:00').jd\n# Perform an offset (+1.5 days)\nnew_jd = jd + 1.5\n# Convert back to DateTime\ndt = DateTime.jd(new_jd)\nputs \"Original JD: #{jd}, After 1.5 days: #{dt.iso8601}\"\n"})}),"\n",(0,i.jsx)(n.p,{children:"This gives sub-day precision\u2014essential for telescope scheduling or astrodynamics."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(36672);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);