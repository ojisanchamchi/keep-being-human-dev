"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35872],{65404:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var r=i(36672);const n={},s=r.createContext(n);function o(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},87167:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/mailers/expert/custom_delivery_method","title":"custom_delivery_method","description":"\ud83c\udfaf Implementing a Custom Delivery Method","source":"@site/docs/rails/mailers/expert/custom_delivery_method.md","sourceDirName":"rails/mailers/expert","slug":"/rails/mailers/expert/custom_delivery_method","permalink":"/keep-being-human-dev/docs/rails/mailers/expert/custom_delivery_method","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/mailers/expert/custom_delivery_method.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"test_mailers","permalink":"/keep-being-human-dev/docs/rails/mailers/beginner/test_mailers"},"next":{"title":"custom_mailer_preview","permalink":"/keep-being-human-dev/docs/rails/mailers/expert/custom_mailer_preview"}}');var n=i(23420),s=i(65404);const o={},a=void 0,l={},d=[{value:"\ud83c\udfaf Implementing a Custom Delivery Method",id:"-implementing-a-custom-delivery-method",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-implementing-a-custom-delivery-method",children:"\ud83c\udfaf Implementing a Custom Delivery Method"}),"\n",(0,n.jsxs)(t.p,{children:["Hook into ",(0,n.jsx)(t.code,{children:"ActionMailer::Base.add_delivery_method"})," to integrate proprietary SMTP servers or APIs. This allows you to override ",(0,n.jsx)(t.code,{children:"deliver!"})," semantics entirely."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# lib/delivery_methods/my_api.rb\nrequire 'net/http'\nmodule DeliveryMethods\n  class MyApi\n    def initialize(settings)\n      @api_key = settings[:api_key]\n    end\n\n    def deliver!(mail)\n      payload = {\n        to: mail.to,\n        subject: mail.subject,\n        body: mail.body.decoded\n      }\n      uri = URI.parse(\"https://api.example.com/send_email\")\n      req = Net::HTTP::Post.new(uri)\n      req['Authorization'] = \"Bearer #{@api_key}\"\n      req.body = payload.to_json\n      Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) { |http| http.request(req) }\n    end\n  end\nend\n\n# config/initializers/mailer.rb\nActionMailer::Base.add_delivery_method :my_api, DeliveryMethods::MyApi, api_key: Rails.application.credentials.email_api_key\nActionMailer::Base.delivery_method = :my_api\n"})}),"\n",(0,n.jsx)(t.p,{children:"This pattern decouples Rails from vendor SDKs and gives you full control over error handling and retries."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);