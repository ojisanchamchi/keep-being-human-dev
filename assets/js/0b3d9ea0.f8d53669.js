"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97601],{19980:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"ruby/hashes/middle/transform_values","title":"transform_values","description":"\u2699\ufe0f Transforming Values with transform_values","source":"@site/docs/ruby/hashes/middle/transform_values.md","sourceDirName":"ruby/hashes/middle","slug":"/ruby/hashes/middle/transform_values","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/transform_values","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/middle/transform_values.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"transform_keys","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/transform_keys"},"next":{"title":"conditional_irbrc","permalink":"/keep-being-human-dev/docs/ruby/irb/advanced/conditional_irbrc"}}');var r=n(23420),t=n(65404);const o={},i=void 0,l={},c=[{value:"\u2699\ufe0f Transforming Values with <code>transform_values</code>",id:"\ufe0f-transforming-values-with-transform_values",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h2,{id:"\ufe0f-transforming-values-with-transform_values",children:["\u2699\ufe0f Transforming Values with ",(0,r.jsx)(s.code,{children:"transform_values"})]}),"\n",(0,r.jsxs)(s.p,{children:["Ruby's ",(0,r.jsx)(s.code,{children:"Hash#transform_values"})," lets you apply a block to each value and return a new hash with the same keys. This is ideal for normalizing, casting, or formatting all values at once."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ruby",children:'prices = { apple: "1.20", banana: "0.50" }\n# Convert string prices to floats\nfloat_prices = prices.transform_values { |v| v.to_f }\n# => { apple: 1.2, banana: 0.5 }\n\n# Increase all prices by 10%\nincreased = float_prices.transform_values { |v| (v * 1.1).round(2) }\n# => { apple: 1.32, banana: 0.55 }\n'})})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var a=n(36672);const r={},t=a.createContext(r);function o(e){const s=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);