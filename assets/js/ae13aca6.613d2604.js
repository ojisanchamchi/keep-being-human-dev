"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[75552],{43562:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"ruby/methods/advanced/curry_and_method_to_proc","title":"curry_and_method_to_proc","description":"\ud83c\udfaf Currying Methods with Method#to_proc","source":"@site/docs/ruby/methods/advanced/curry_and_method_to_proc.md","sourceDirName":"ruby/methods/advanced","slug":"/ruby/methods/advanced/curry_and_method_to_proc","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/curry_and_method_to_proc","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/advanced/curry_and_method_to_proc.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"logging_undefined_calls","permalink":"/keep-being-human-dev/docs/ruby/method_missing/middle/logging_undefined_calls"},"next":{"title":"dynamic_define_method","permalink":"/keep-being-human-dev/docs/ruby/methods/advanced/dynamic_define_method"}}');var d=n(23420),r=n(65404);const c={},a=void 0,s={},i=[{value:"\ud83c\udfaf Currying Methods with <code>Method#to_proc</code>",id:"-currying-methods-with-methodto_proc",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(t.h2,{id:"-currying-methods-with-methodto_proc",children:["\ud83c\udfaf Currying Methods with ",(0,d.jsx)(t.code,{children:"Method#to_proc"})]}),"\n",(0,d.jsxs)(t.p,{children:["Methods aren\u2019t just calls; they can be turned into ",(0,d.jsx)(t.code,{children:"Proc"})," objects and curried for partial application. This is invaluable in functional pipelines or when building higher\u2011order abstractions."]}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-ruby",children:"class Calculator\n  def add(a, b, c)\n    a + b + c\n  end\nend\n\nadd_proc = Calculator.new.method(:add).to_proc.curry\nadd_two = add_proc.call(2)\np add_two.call(3, 4) # => 9\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var o=n(36672);const d={},r=o.createContext(d);function c(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);