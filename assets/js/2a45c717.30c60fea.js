"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69855],{65404:(e,r,o)=>{o.d(r,{R:()=>t,x:()=>d});var n=o(36672);const a={},s=n.createContext(a);function t(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),n.createElement(s.Provider,{value:r},e.children)}},84140:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ruby/oop/middle/mixins_for_shared_behavior","title":"mixins_for_shared_behavior","description":"\ud83c\udfaf Use Modules for Shared Behavior","source":"@site/docs/ruby/oop/middle/mixins_for_shared_behavior.md","sourceDirName":"ruby/oop/middle","slug":"/ruby/oop/middle/mixins_for_shared_behavior","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/mixins_for_shared_behavior","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/middle/mixins_for_shared_behavior.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"leverage_struct_for_data_objects","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/leverage_struct_for_data_objects"},"next":{"title":"use_forwardable_for_delegation","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/use_forwardable_for_delegation"}}');var a=o(23420),s=o(65404);const t={},d=void 0,i={},c=[{value:"\ud83c\udfaf Use Modules for Shared Behavior",id:"-use-modules-for-shared-behavior",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.h2,{id:"-use-modules-for-shared-behavior",children:"\ud83c\udfaf Use Modules for Shared Behavior"}),"\n",(0,a.jsx)(r.p,{children:"When you have methods shared across unrelated classes, extract them into a module and mix it in. This promotes DRY code and makes it easy to test shared behavior in isolation."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-ruby",children:'module Trackable\n  def track(event)\n    puts "Tracking \\\\#{event} at \\\\#{Time.now}"\n  end\nend\n\nclass Order\n  include Trackable\nend\n\norder = Order.new\norder.track("order_placed")\n'})})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);