"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24920],{5593:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"ruby/minitest/advanced/performance_benchmarking","title":"performance_benchmarking","description":"\u23f1\ufe0f Integrate Performance Benchmarks","source":"@site/docs/ruby/minitest/advanced/performance_benchmarking.md","sourceDirName":"ruby/minitest/advanced","slug":"/ruby/minitest/advanced/performance_benchmarking","permalink":"/keep-being-human-dev/docs/ruby/minitest/advanced/performance_benchmarking","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/minitest/advanced/performance_benchmarking.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parallel_test_execution","permalink":"/keep-being-human-dev/docs/ruby/minitest/advanced/parallel_test_execution"},"next":{"title":"common_assertions","permalink":"/keep-being-human-dev/docs/ruby/minitest/beginner/common_assertions"}}');var a=r(23420),s=r(65404);const c={},i=void 0,o={},m=[{value:"\u23f1\ufe0f Integrate Performance Benchmarks",id:"\ufe0f-integrate-performance-benchmarks",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-integrate-performance-benchmarks",children:"\u23f1\ufe0f Integrate Performance Benchmarks"}),"\n",(0,a.jsxs)(n.p,{children:["Minitest::Benchmark enables you to write performance tests alongside functional tests, asserting expected time or growth characteristics. Use ",(0,a.jsx)(n.code,{children:"assert_performance_constant"})," or ",(0,a.jsx)(n.code,{children:"assert_performance_linear"})," to validate algorithm scaling within thresholds."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'minitest/benchmark'\nclass SortBenchmarkTest < Minitest::Benchmark\n  def bench_sort_linear\n    assert_performance_linear 0.95 do |n|\n      array = Array.new(n) { rand }\n      array.sort\n    end\n  end\nend\n"})}),"\n",(0,a.jsx)(n.p,{children:"Adjust the coefficient to relax or tighten performance requirements. Run with normal test suite or in isolation to detect regressions early."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(36672);const a={},s=t.createContext(a);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);