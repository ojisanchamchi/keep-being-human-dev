"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13150],{9226:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"javascript/stimulus/expert/composable_controllers","title":"composable_controllers","description":"\ud83d\udd17 Create Composable Stimulus Controllers","source":"@site/docs/javascript/stimulus/expert/composable_controllers.md","sourceDirName":"javascript/stimulus/expert","slug":"/javascript/stimulus/expert/composable_controllers","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/composable_controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/expert/composable_controllers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"using_values","permalink":"/keep-being-human-dev/docs/javascript/stimulus/beginner/using_values"},"next":{"title":"custom_target_decorators","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/custom_target_decorators"}}');var n=t(23420),r=t(65404);const l={},a=void 0,c={},i=[{value:"\ud83d\udd17 Create Composable Stimulus Controllers",id:"-create-composable-stimulus-controllers",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"-create-composable-stimulus-controllers",children:"\ud83d\udd17 Create Composable Stimulus Controllers"}),"\n",(0,n.jsx)(s.p,{children:"Break logic into mixins to compose controllers. Use class decorators to merge functionality and override lifecycle methods cleanly."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-javascript",children:"// mixins/loggable.js\nexport const Loggable = Base => class extends Base {\n  log(message) { console.log(`[${this.identifier}] ${message}`) }\n}\n\n// mixins/toggleable.js\nexport const Toggleable = Base => class extends Base {\n  toggle() { this.element.classList.toggle('active') }\n}\n\n// my_controller.js\nimport { Controller } from '@hotwired/stimulus'\nimport { Loggable } from './mixins/loggable'\nimport { Toggleable } from './mixins/toggleable'\n\nclass BaseController extends Controller {}\nconst Composed = Toggleable(Loggable(BaseController))\n\nexport default class extends Composed {\n  connect() {\n    super.connect()\n    this.log('Connected')\n  }\n}\n"})})]})}function m(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>a});var o=t(36672);const n={},r=o.createContext(n);function l(e){const s=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);