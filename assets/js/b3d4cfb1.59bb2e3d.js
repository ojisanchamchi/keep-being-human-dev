"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26166],{36524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/active_record_callbacks/beginner/after_create_notification","title":"after_create_notification","description":"\ud83d\udcec Sending Notifications with after_create","source":"@site/docs/rails/active_record_callbacks/beginner/after_create_notification.md","sourceDirName":"rails/active_record_callbacks/beginner","slug":"/rails/active_record_callbacks/beginner/after_create_notification","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/after_create_notification","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/beginner/after_create_notification.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sti_inherited_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/sti_inherited_callbacks"},"next":{"title":"after_destroy_cleanup","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/after_destroy_cleanup"}}');var r=n(23420),i=n(65404);const c={},s=void 0,o={},d=[{value:"\ud83d\udcec Sending Notifications with <code>after_create</code>",id:"-sending-notifications-with-after_create",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"-sending-notifications-with-after_create",children:["\ud83d\udcec Sending Notifications with ",(0,r.jsx)(t.code,{children:"after_create"})]}),"\n",(0,r.jsxs)(t.p,{children:["Use ",(0,r.jsx)(t.code,{children:"after_create"})," to trigger side effects such as sending emails or notifications once a record is successfully created. This keeps controllers thin and focuses logic in the model."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"class Order < ApplicationRecord\n  after_create :send_confirmation_email\n\n  private\n\n  def send_confirmation_email\n    OrderMailer.confirmation(self).deliver_later\n  end\nend\n"})}),"\n",(0,r.jsx)(t.p,{children:"This callback enqueues an email job after the order record commits to the database."})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var a=n(36672);const r={},i=a.createContext(r);function c(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);