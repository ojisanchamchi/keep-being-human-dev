"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[87137],{65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(36672);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}},77118:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/compression/middle/string_compression_deflate","title":"string_compression_deflate","description":"\ud83d\udce6 In\u2011Memory String Compression with Zlib::Deflate","source":"@site/docs/ruby/compression/middle/string_compression_deflate.md","sourceDirName":"ruby/compression/middle","slug":"/ruby/compression/middle/string_compression_deflate","permalink":"/keep-being-human-dev/docs/ruby/compression/middle/string_compression_deflate","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/compression/middle/string_compression_deflate.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"file_compression_gzip","permalink":"/keep-being-human-dev/docs/ruby/compression/middle/file_compression_gzip"},"next":{"title":"condition_variable_coordination.md","permalink":"/keep-being-human-dev/docs/ruby/concurrency_and_mutexes/advanced/condition_variable_coordination.md"}}');var r=s(23420),o=s(65404);const t={},a=void 0,c={},d=[{value:"\ud83d\udce6 In\u2011Memory String Compression with Zlib::Deflate",id:"-inmemory-string-compression-with-zlibdeflate",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-inmemory-string-compression-with-zlibdeflate",children:"\ud83d\udce6 In\u2011Memory String Compression with Zlib::Deflate"}),"\n",(0,r.jsxs)(n.p,{children:["For transient data (e.g., caching JSON payloads), compressing in memory is faster than writing temp files. Use ",(0,r.jsx)(n.code,{children:"Zlib::Deflate"})," to compress a string and ",(0,r.jsx)(n.code,{children:"Zlib::Inflate"})," to restore it. You can tune the compression level (1\u20139) for speed vs size."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'require \'zlib\'\n\nraw = \'{"name":"Alice","role":"admin","data":"..."}\'\n\n# Compress with best compression\ncompressed = Zlib::Deflate.deflate(raw, Zlib::BEST_COMPRESSION)\nputs "Compressed from #{raw.bytesize} to #{compressed.bytesize} bytes"\n\n# Decompress back to original\noriginal = Zlib::Inflate.inflate(compressed)\nputs "Recovered matches? #{original == raw}"  # => true\n'})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);