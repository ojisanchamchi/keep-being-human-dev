"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15270],{1825:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"ruby/syntax/advanced/flip_flop_operator","title":"flip_flop_operator","description":"\ud83d\udd04 Control Flow with Flip-Flop Operator","source":"@site/docs/ruby/syntax/advanced/flip_flop_operator.md","sourceDirName":"ruby/syntax/advanced","slug":"/ruby/syntax/advanced/flip_flop_operator","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/flip_flop_operator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/advanced/flip_flop_operator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"endless_method_definition","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/endless_method_definition"},"next":{"title":"keyword_splat_destructuring","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/keyword_splat_destructuring"}}');var r=t(23420),s=t(65404);const a={},i=void 0,d={},l=[{value:"\ud83d\udd04 Control Flow with Flip-Flop Operator",id:"-control-flow-with-flip-flop-operator",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-control-flow-with-flip-flop-operator",children:"\ud83d\udd04 Control Flow with Flip-Flop Operator"}),"\n",(0,r.jsxs)(n.p,{children:["Ruby\u2019s flip-flop (",(0,r.jsx)(n.code,{children:"expr1..expr2"}),") operator provides stateful conditionals: it turns ",(0,r.jsx)(n.code,{children:"true"})," when ",(0,r.jsx)(n.code,{children:"expr1"})," is true and turns ",(0,r.jsx)(n.code,{children:"false"})," when ",(0,r.jsx)(n.code,{children:"expr2"})," becomes true. This is handy for range-based filtering in loops."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"lines = (1..10).to_a\nselected = []\nlines.each do |n|\n  if (n == 3..n == 6)\n    selected << n\n  end\nend\nputs selected.inspect\n# => [3, 4, 5, 6]\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(36672);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);