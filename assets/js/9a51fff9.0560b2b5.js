"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[768],{65404:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var r=s(36672);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},67605:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/performance/middle/eager_loading_associations","title":"eager_loading_associations","description":"\ud83d\ude80 Eager Load Associations","source":"@site/docs/rails/performance/middle/eager_loading_associations.md","sourceDirName":"rails/performance/middle","slug":"/rails/performance/middle/eager_loading_associations","permalink":"/keep-being-human-dev/docs/rails/performance/middle/eager_loading_associations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/middle/eager_loading_associations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bulk_insertions_with_insert_all","permalink":"/keep-being-human-dev/docs/rails/performance/middle/bulk_insertions_with_insert_all"},"next":{"title":"integrating_bullet_gem","permalink":"/keep-being-human-dev/docs/rails/performance/middle/integrating_bullet_gem"}}');var i=s(23420),a=s(65404);const o={},t=void 0,d={},c=[{value:"\ud83d\ude80 Eager Load Associations",id:"-eager-load-associations",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-eager-load-associations",children:"\ud83d\ude80 Eager Load Associations"}),"\n",(0,i.jsxs)(n.p,{children:["Avoid N+1 queries by preloading associations with ",(0,i.jsx)(n.code,{children:"includes"}),". This fetches associated records in a single query instead of one per record, improving response times when rendering lists."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/orders_controller.rb\ndef index\n  @orders = Order.includes(:customer, :items)\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);