"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61868],{65404:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(36672);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}},81949:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/sessions_and_cookies/expert/session_secret_rotation","title":"session_secret_rotation","description":"\ud83d\udd04 Dynamically Rotating Session Secrets Without User Disruption","source":"@site/docs/rails/sessions_and_cookies/expert/session_secret_rotation.md","sourceDirName":"rails/sessions_and_cookies/expert","slug":"/rails/sessions_and_cookies/expert/session_secret_rotation","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/expert/session_secret_rotation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/sessions_and_cookies/expert/session_secret_rotation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"multi_domain_redis_sessions","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/expert/multi_domain_redis_sessions"},"next":{"title":"rolling_session_expiration","permalink":"/keep-being-human-dev/docs/rails/sessions_and_cookies/middle/rolling_session_expiration"}}');var t=n(23420),o=n(65404);const r={},c=void 0,a={},l=[{value:"\ud83d\udd04 Dynamically Rotating Session Secrets Without User Disruption",id:"-dynamically-rotating-session-secrets-without-user-disruption",level:2}];function d(e){const s={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-dynamically-rotating-session-secrets-without-user-disruption",children:"\ud83d\udd04 Dynamically Rotating Session Secrets Without User Disruption"}),"\n",(0,t.jsxs)(s.p,{children:["To rotate session secrets safely across deploys (e.g., when you detect compromise or on a schedule) without forcing all users to re\u2011login, use multiple ",(0,t.jsx)(s.code,{children:"secret_stores"})," in your Rails credentials. Rails will try each key until one matches."]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["In ",(0,t.jsx)(s.code,{children:"config/initializers/session_store.rb"}),", configure an array of secrets:"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'Rails.application.config.session_store :cookie_store,\n  key: "_myapp_session",\n  secure: Rails.env.production?,\n  expire_after: 2.weeks,\n  secret_stores: [\n    Rails.application.credentials.dig(:sessions, :old_secret),\n    Rails.application.credentials.dig(:sessions, :current_secret)\n  ]\n'})}),"\n",(0,t.jsxs)(s.ol,{start:"2",children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Deploy with both ",(0,t.jsx)(s.code,{children:"old_secret"})," and ",(0,t.jsx)(s.code,{children:"current_secret"})," set. After verification, reissue code without ",(0,t.jsx)(s.code,{children:"old_secret"})," for full rotation."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["To proactively rotate, generate a fresh secret and add it to the front of ",(0,t.jsx)(s.code,{children:"secret_stores"})," so new sessions use it first, while existing sessions still decrypt with any of the older ones."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);