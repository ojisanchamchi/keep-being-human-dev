"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29920],{65404:(e,n,t)=>{t.d(n,{R:()=>p,x:()=>i});var r=t(36672);const c={},s=r.createContext(c);function p(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:p(e.components),r.createElement(s.Provider,{value:n},e.children)}},96465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>y,frontMatter:()=>p,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/openssl/beginner/aes_encrypt_decrypt","title":"aes_encrypt_decrypt","description":"\ud83d\udd12 Encrypt and Decrypt Data with AES-256-CBC","source":"@site/docs/ruby/openssl/beginner/aes_encrypt_decrypt.md","sourceDirName":"ruby/openssl/beginner","slug":"/ruby/openssl/beginner/aes_encrypt_decrypt","permalink":"/keep-being-human-dev/docs/ruby/openssl/beginner/aes_encrypt_decrypt","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/openssl/beginner/aes_encrypt_decrypt.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"smime_sign_and_encrypt","permalink":"/keep-being-human-dev/docs/ruby/openssl/advanced/smime_sign_and_encrypt"},"next":{"title":"create_sha256_digest","permalink":"/keep-being-human-dev/docs/ruby/openssl/beginner/create_sha256_digest"}}');var c=t(23420),s=t(65404);const p={},i=void 0,a={},d=[{value:"\ud83d\udd12 Encrypt and Decrypt Data with AES-256-CBC",id:"-encrypt-and-decrypt-data-with-aes-256-cbc",level:2}];function o(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"-encrypt-and-decrypt-data-with-aes-256-cbc",children:"\ud83d\udd12 Encrypt and Decrypt Data with AES-256-CBC"}),"\n",(0,c.jsx)(n.p,{children:"AES-256-CBC is a widely used symmetric cipher. You need a 256\u2011bit key and a 128\u2011bit IV to encrypt and decrypt. Be sure to securely transmit the IV with the ciphertext (it\u2019s not secret by itself)."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"require 'openssl'\n\ncipher = OpenSSL::Cipher.new('AES-256-CBC')\ncipher.encrypt\nkey = cipher.random_key       # 32 bytes for 256-bit key\niv  = cipher.random_iv        # 16 bytes for 128-bit IV\nplaintext = 'Top secret message'\n\n# Encrypt\ncipher.key = key\ncipher.iv  = iv\nencrypted = cipher.update(plaintext) + cipher.final\n\n# Decrypt\ndecipher = OpenSSL::Cipher.new('AES-256-CBC')\ndecipher.decrypt\ndecipher.key = key\ndecipher.iv  = iv\ndecrypted = decipher.update(encrypted) + decipher.final\n\nputs \"Encrypted: #{encrypted.inspect}\"\nputs \"Decrypted: #{decrypted}\"  # => \"Top secret message\"\n"})})]})}function y(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}}}]);