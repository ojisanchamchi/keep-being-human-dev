"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59890],{65404:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(36672);const r={},c=n.createContext(r);function o(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(c.Provider,{value:t},e.children)}},70610:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"gems/vcr/middle/custom_request_matchers","title":"custom_request_matchers","description":"\ud83d\udd0d Custom Request Matching","source":"@site/docs/gems/vcr/middle/custom_request_matchers.md","sourceDirName":"gems/vcr/middle","slug":"/gems/vcr/middle/custom_request_matchers","permalink":"/keep-being-human-dev/docs/gems/vcr/middle/custom_request_matchers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/middle/custom_request_matchers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"vcr_deep_request_matching_and_hooks","permalink":"/keep-being-human-dev/docs/gems/vcr/expert/vcr_deep_request_matching_and_hooks"},"next":{"title":"dynamic_cassette_naming","permalink":"/keep-being-human-dev/docs/gems/vcr/middle/dynamic_cassette_naming"}}');var r=s(23420),c=s(65404);const o={},a=void 0,i={},u=[{value:"\ud83d\udd0d Custom Request Matching",id:"-custom-request-matching",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-custom-request-matching",children:"\ud83d\udd0d Custom Request Matching"}),"\n",(0,r.jsx)(t.p,{children:"By default VCR matches on method and URI, but sometimes you need to ignore dynamic query params or headers. Registering a custom matcher lets you focus on the parts that matter and avoid unnecessary cassette rewrites when non\u2011essential details change."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# spec/support/vcr.rb\nVCR.configure do |c|\n  # Register a matcher that strips timestamps from URIs\n  c.register_request_matcher :uri_without_timestamp do |r1, r2|\n    uri1 = URI(r1.uri); uri1.query = nil\n    uri2 = URI(r2.uri); uri2.query = nil\n    uri1 == uri2\n  end\nend\n\n# In your test\nVCR.use_cassette('weather_api', match_requests_on: [:method, :uri_without_timestamp]) do\n  response = WeatherClient.get_forecast(city: 'London', timestamp: Time.now.to_i)\n  expect(response.code).to eq(200)\nend\n"})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);