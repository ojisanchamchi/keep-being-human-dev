"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[56566],{35860:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/middleware/advanced/response_timing_middleware","title":"response_timing_middleware","description":"\u23f1\ufe0f Response Timing and Performance Middleware","source":"@site/docs/rails/middleware/advanced/response_timing_middleware.md","sourceDirName":"rails/middleware/advanced","slug":"/rails/middleware/advanced/response_timing_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/response_timing_middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/advanced/response_timing_middleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"middleware_stack_inspection","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/middleware_stack_inspection"},"next":{"title":"cors_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/cors_middleware"}}');var a=s(23420),i=s(65404);const t={},d=void 0,o={},c=[{value:"\u23f1\ufe0f Response Timing and Performance Middleware",id:"\ufe0f-response-timing-and-performance-middleware",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-response-timing-and-performance-middleware",children:"\u23f1\ufe0f Response Timing and Performance Middleware"}),"\n",(0,a.jsx)(n.p,{children:"Measure performance at the middleware layer to identify slow requests across your application. You can push metrics to services like Prometheus or StatsD. Use Rack env to tag routes and push histogram metrics."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# app/middleware/response_timing_middleware.rb\nrequire 'statsd'\n\nclass ResponseTimingMiddleware\n  def initialize(app)\n    @app = app\n    @statsd = Statsd.new('localhost', 8125)\n  end\n\n  def call(env)\n    start_time = Process.clock_gettime(Process::CLOCK_MONOTONIC)\n    status, headers, response = @app.call(env)\n    duration_ms = ((Process.clock_gettime(Process::CLOCK_MONOTONIC) - start_time) * 1000).round\n\n    route = env['PATH_INFO'].gsub('/', '_').sub(/^_/, '')\n    @statsd.histogram(\"rails.request.#{route}\", duration_ms)\n\n    [status, headers, response]\n  end\nend\n\n# config/application.rb\nconfig.middleware.use ResponseTimingMiddleware\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var r=s(36672);const a={},i=r.createContext(a);function t(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);