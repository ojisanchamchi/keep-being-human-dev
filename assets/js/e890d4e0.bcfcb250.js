"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[16244],{18340:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/versioning/expert/versioned_autoload_paths","title":"versioned_autoload_paths","description":"\ud83d\udcc2 Dynamic Versioned Autoload Paths","source":"@site/docs/rails/versioning/expert/versioned_autoload_paths.md","sourceDirName":"rails/versioning/expert","slug":"/rails/versioning/expert/versioned_autoload_paths","permalink":"/keep-being-human-dev/docs/rails/versioning/expert/versioned_autoload_paths","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/versioning/expert/versioned_autoload_paths.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"deprecation_middleware_fallback","permalink":"/keep-being-human-dev/docs/rails/versioning/expert/deprecation_middleware_fallback"},"next":{"title":"versioning_header","permalink":"/keep-being-human-dev/docs/rails/versioning/middle/versioning_header"}}');var r=a(23420),i=a(65404);const s={},t=void 0,d={},l=[{value:"\ud83d\udcc2 Dynamic Versioned Autoload Paths",id:"-dynamic-versioned-autoload-paths",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-dynamic-versioned-autoload-paths",children:"\ud83d\udcc2 Dynamic Versioned Autoload Paths"}),"\n",(0,r.jsxs)(n.p,{children:["Keep your versioned code DRY by dynamically adding versioned modules to Rails\u2019 autoload paths. This eliminates manual ",(0,r.jsx)(n.code,{children:"require_dependency"})," calls and leverages Zeitwerk for isolating controllers, serializers, and even service objects under ",(0,r.jsx)(n.code,{children:"app/api/vX"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/application.rb\nmodule MyApp\n  class Application < Rails::Application\n    config.autoload_paths += Dir[Rails.root.join('app', 'api', 'v*')]\n    config.eager_load_paths += config.autoload_paths\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then structure your directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"app/api/v1/posts_controller.rb\napp/api/v2/posts_controller.rb\napp/api/v2/serializers/post_serializer.rb\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>t});var o=a(36672);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);