"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[53102],{55710:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/versioning/expert/deprecation_middleware_fallback","title":"deprecation_middleware_fallback","description":"\u26a0\ufe0f Deprecation Middleware with Fallback Strategy","source":"@site/docs/rails/versioning/expert/deprecation_middleware_fallback.md","sourceDirName":"rails/versioning/expert","slug":"/rails/versioning/expert/deprecation_middleware_fallback","permalink":"/keep-being-human-dev/docs/rails/versioning/expert/deprecation_middleware_fallback","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/versioning/expert/deprecation_middleware_fallback.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_header_versioning_constraint","permalink":"/keep-being-human-dev/docs/rails/versioning/expert/custom_header_versioning_constraint"},"next":{"title":"versioned_autoload_paths","permalink":"/keep-being-human-dev/docs/rails/versioning/expert/versioned_autoload_paths"}}');var i=a(23420),t=a(65404);const s={},o=void 0,d={},c=[{value:"\u26a0\ufe0f Deprecation Middleware with Fallback Strategy",id:"\ufe0f-deprecation-middleware-with-fallback-strategy",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-deprecation-middleware-with-fallback-strategy",children:"\u26a0\ufe0f Deprecation Middleware with Fallback Strategy"}),"\n",(0,i.jsxs)(n.p,{children:["Introduce a lightweight Rack middleware that flags deprecated API versions in response headers and optionally reroutes to a newer version. This approach centralizes lifecycle management, injects ",(0,i.jsx)(n.code,{children:"Deprecation"})," headers, and provides a controlled fallback for clients stuck on old versions."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# lib/middleware/api_deprecation.rb\nclass ApiDeprecation\n  def initialize(app)\n    @app = app\n  end\n\n  def call(env)\n    version = env['api.version']\n    if deprecated?(version)\n      status, headers, body = @app.call(env)\n      headers['Deprecation'] = \"You are using v#{version}, use v#{version + 1}\"\n      [status, headers, body]\n    else\n      @app.call(env)\n    end\n  end\n\n  private\n\n  def deprecated?(v)\n    v.to_i < CURRENT_STABLE_VERSION\n  end\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:["And mount it in ",(0,i.jsx)(n.code,{children:"config/application.rb"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'config.middleware.use "ApiDeprecation"\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var r=a(36672);const i={},t=r.createContext(i);function s(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);