"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[60784],{51875:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"ruby/uri/expert/custom_uri_scheme","title":"custom_uri_scheme","description":"\ud83d\udee0 Building Custom URI Schemes via Subclassing","source":"@site/docs/ruby/uri/expert/custom_uri_scheme.md","sourceDirName":"ruby/uri/expert","slug":"/ruby/uri/expert/custom_uri_scheme","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/custom_uri_scheme","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/expert/custom_uri_scheme.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_percent_encoding","permalink":"/keep-being-human-dev/docs/ruby/uri/expert/custom_percent_encoding"},"next":{"title":"constructing_uris_with_encoding","permalink":"/keep-being-human-dev/docs/ruby/uri/middle/constructing_uris_with_encoding"}}');var r=s(23420),i=s(65404);const o={},c=void 0,u={},a=[{value:"\ud83d\udee0 Building Custom URI Schemes via Subclassing",id:"-building-custom-uri-schemes-via-subclassing",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-building-custom-uri-schemes-via-subclassing",children:"\ud83d\udee0 Building Custom URI Schemes via Subclassing"}),"\n",(0,r.jsxs)(n.p,{children:["For proprietary or uncommon schemes, subclass ",(0,r.jsx)(n.code,{children:"URI::Generic"})," and register it with ",(0,r.jsx)(n.code,{children:"URI.scheme_list"}),". This allows ",(0,r.jsx)(n.code,{children:"URI()"})," to parse new schemes into rich objects, preserving all components (userinfo, host, port, path, query, fragment) and enabling custom behavior."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'uri'\n\nclass FooURI < URI::Generic\n  DEFAULT_PORT = 12345\n  # Define component hierarchy\n  COMPONENT = %i[scheme userinfo host port registry path query fragment]\n\n  def resource_id\n    # Extract an ID from path like /resource/123\n    path.split('/').last.to_i\n  end\nend\n\n# Register new scheme\nURI.scheme_list['foo'] = FooURI\n\n# Parse a foo URI\nu = URI('foo://alice:secret@host.com/resource/123?mode=fast#section')\nputs u.class           # => FooURI\nputs u.resource_id     # => 123\nputs u.port            # => 12345 (default)\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(36672);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);