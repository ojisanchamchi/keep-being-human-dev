"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[53852],{8472:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"rails/active_record_querying/middle/includes_conditions","title":"includes_conditions","description":"\ud83d\udd17 Eager Loading Conditions with includes and references","source":"@site/docs/rails/active_record_querying/middle/includes_conditions.md","sourceDirName":"rails/active_record_querying/middle","slug":"/rails/active_record_querying/middle/includes_conditions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/includes_conditions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/middle/includes_conditions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"from_subquery","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/from_subquery"},"next":{"title":"joins_conditions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/middle/joins_conditions"}}');var s=i(23420),o=i(65404);const c={},t=void 0,d={},a=[{value:"\ud83d\udd17 Eager Loading Conditions with <code>includes</code> and <code>references</code>",id:"-eager-loading-conditions-with-includes-and-references",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-eager-loading-conditions-with-includes-and-references",children:["\ud83d\udd17 Eager Loading Conditions with ",(0,s.jsx)(n.code,{children:"includes"})," and ",(0,s.jsx)(n.code,{children:"references"})]}),"\n",(0,s.jsxs)(n.p,{children:["To avoid the N+1 problem while filtering on associations, combine ",(0,s.jsx)(n.code,{children:"includes"})," with ",(0,s.jsx)(n.code,{children:"references"})," and ",(0,s.jsx)(n.code,{children:"where"}),". ",(0,s.jsx)(n.code,{children:"references"})," tells Rails to generate proper JOINs for the ",(0,s.jsx)(n.code,{children:"WHERE"})," clause."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# Fetch posts that have comments by author with ID 42\nposts = Post.includes(:comments)\n            .references(:comments)\n            .where(comments: { author_id: 42 })\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>t});var r=i(36672);const s={},o=r.createContext(s);function c(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);