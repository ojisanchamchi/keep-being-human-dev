"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77643],{65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var i=n(36672);const a={},r=i.createContext(a);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},94072:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/minitest/expert/dynamic_test_generation","title":"dynamic_test_generation","description":"\ud83d\udd04 Dynamic Test Generation via Metaprogramming","source":"@site/docs/ruby/minitest/expert/dynamic_test_generation.md","sourceDirName":"ruby/minitest/expert","slug":"/ruby/minitest/expert/dynamic_test_generation","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/dynamic_test_generation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/minitest/expert/dynamic_test_generation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_minitest_profiling_plugin","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/custom_minitest_profiling_plugin"},"next":{"title":"parallel_test_sharding","permalink":"/keep-being-human-dev/docs/ruby/minitest/expert/parallel_test_sharding"}}');var a=n(23420),r=n(65404);const s={},o=void 0,c={},d=[{value:"\ud83d\udd04 Dynamic Test Generation via Metaprogramming",id:"-dynamic-test-generation-via-metaprogramming",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-dynamic-test-generation-via-metaprogramming",children:"\ud83d\udd04 Dynamic Test Generation via Metaprogramming"}),"\n",(0,a.jsxs)(t.p,{children:["For data-driven scenarios, generate tests at runtime using ",(0,a.jsx)(t.code,{children:"define_method"}),". This approach reduces duplication and lets you loop over complex datasets or introspect code."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"# test/models/user_test.rb\nrequire 'test_helper'\n\nUSER_FIXTURES = {\n  valid:  { name: 'Alice', email: 'alice@example.com' },\n  missing_email: { name: 'Bob', email: nil }\n}\n\nclass UserTest < ActiveSupport::TestCase\n  USER_FIXTURES.each do |key, attrs|\n    define_method(\"test_#{key}_validation\") do\n      user = User.new(attrs)\n      expected = key == :valid\n      assert_equal expected, user.valid?, \"Expected #{key} to #{expected ? 'pass' : 'fail'} validation\"\n    end\n  end\nend\n"})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);