"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83132],{65404:(e,a,n)=>{n.d(a,{R:()=>c,x:()=>i});var s=n(36672);const t={},r=s.createContext(t);function c(e){const a=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:a},e.children)}},99276:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"javascript/stimulus/advanced/value_change_observers","title":"value_change_observers","description":"\ud83c\udff7\ufe0f Observing Value Changes Dynamically","source":"@site/docs/javascript/stimulus/advanced/value_change_observers.md","sourceDirName":"javascript/stimulus/advanced","slug":"/javascript/stimulus/advanced/value_change_observers","permalink":"/keep-being-human-dev/docs/javascript/stimulus/advanced/value_change_observers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/advanced/value_change_observers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"typescript_decorator_integration","permalink":"/keep-being-human-dev/docs/javascript/stimulus/advanced/typescript_decorator_integration"},"next":{"title":"actions_events","permalink":"/keep-being-human-dev/docs/javascript/stimulus/beginner/actions_events"}}');var t=n(23420),r=n(65404);const c={},i=void 0,o={},l=[{value:"\ud83c\udff7\ufe0f Observing Value Changes Dynamically",id:"\ufe0f-observing-value-changes-dynamically",level:2}];function u(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"\ufe0f-observing-value-changes-dynamically",children:"\ud83c\udff7\ufe0f Observing Value Changes Dynamically"}),"\n",(0,t.jsxs)(a.p,{children:["Stimulus ",(0,t.jsx)(a.code,{children:"values"})," can emit callbacks when they change. By defining ",(0,t.jsx)(a.code,{children:"valueChanged"})," methods, you can automatically react to updates, ideal for two-way synced forms or sliders."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-javascript",children:'import { Controller } from "@hotwired/stimulus"\n\nexport default class extends Controller {\n  static values = { volume: Number }\n\n  volumeValueChanged(newValue, oldValue) {\n    this.element.style.opacity = newValue / 100\n  }\n}\n'})})]})}function d(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);