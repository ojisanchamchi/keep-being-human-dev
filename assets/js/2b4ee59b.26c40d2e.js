"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[40769],{36002:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"rails/engines_and_plugins/advanced/isolate_namespace_engine_config","title":"isolate_namespace_engine_config","description":"\ud83e\udde9 Leverage isolate_namespace for Safe Engine Integration","source":"@site/docs/rails/engines_and_plugins/advanced/isolate_namespace_engine_config.md","sourceDirName":"rails/engines_and_plugins/advanced","slug":"/rails/engines_and_plugins/advanced/isolate_namespace_engine_config","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/isolate_namespace_engine_config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/engines_and_plugins/advanced/isolate_namespace_engine_config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_engine_mounting","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/dynamic_engine_mounting"},"next":{"title":"engine_basic_setup","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/beginner/engine_basic_setup"}}');var s=i(23420),t=i(65404);const o={},c=void 0,r={},g=[{value:"\ud83e\udde9 Leverage isolate_namespace for Safe Engine Integration",id:"-leverage-isolate_namespace-for-safe-engine-integration",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-leverage-isolate_namespace-for-safe-engine-integration",children:"\ud83e\udde9 Leverage isolate_namespace for Safe Engine Integration"}),"\n",(0,s.jsxs)(n.p,{children:["By isolating your engine's namespace, you prevent class name collisions and ensure a clean separation of concerns between the host app and your engine. You can also share configuration defaults via ",(0,s.jsx)(n.code,{children:"Engine"})," subclasses to DRY up common settings."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# lib/my_engine/engine.rb\nmodule MyEngine\n  class Engine < ::Rails::Engine\n    isolate_namespace MyEngine\n\n    # Define custom config options\n    config.my_engine = ActiveSupport::OrderedOptions.new\n    config.my_engine.api_endpoint = 'https://api.example.com'\n\n    initializer 'my_engine.setup' do |app|\n      MyEngine.setup do |cfg|\n        cfg.api_endpoint = app.config.my_engine.api_endpoint\n      end\n    end\n  end\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"This sets up a namespaced engine and injects host app configs into your engine initializer for greater flexibility."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var a=i(36672);const s={},t=a.createContext(s);function o(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);