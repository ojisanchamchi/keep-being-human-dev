"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[82391],{25389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rails/authentication_and_authorization/advanced/custom_devise_warden_strategy","title":"custom_devise_warden_strategy","description":"\ud83d\udd12 Custom Warden Strategy for Advanced Session Management","source":"@site/docs/rails/authentication_and_authorization/advanced/custom_devise_warden_strategy.md","sourceDirName":"rails/authentication_and_authorization/advanced","slug":"/rails/authentication_and_authorization/advanced/custom_devise_warden_strategy","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/custom_devise_warden_strategy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/advanced/custom_devise_warden_strategy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"use_webpacker_asset_pack_tag","permalink":"/keep-being-human-dev/docs/rails/assets/middle/use_webpacker_asset_pack_tag"},"next":{"title":"jwt_refresh_token_rotation","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/jwt_refresh_token_rotation"}}');var s=t(23420),r=t(65404);const i={},o=void 0,d={},c=[{value:"\ud83d\udd12 Custom Warden Strategy for Advanced Session Management",id:"-custom-warden-strategy-for-advanced-session-management",level:2}];function u(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-custom-warden-strategy-for-advanced-session-management",children:"\ud83d\udd12 Custom Warden Strategy for Advanced Session Management"}),"\n",(0,s.jsx)(n.p,{children:"Devise uses Warden under the hood, which you can extend to implement custom authentication flows such as token rotation, device fingerprinting, or two\u2011factor triggers. By creating a custom Warden strategy, you gain full control over how credentials are validated and sessions are managed without modifying Devise core."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Define the strategy:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/warden_strategies.rb\nrequire 'base64'\n\nWarden::Strategies.add(:token_strategy) do\n  def valid?\n    request.headers['Authorization'].present?\n  end\n\n  def authenticate!\n    token = request.headers['Authorization']&.split(' ')&.last\n    payload = JWT.decode(token, Rails.application.credentials.secret_key_base)[0]\n    user = User.find_by(id: payload['sub'], token_version: payload['ver'])\n\n    user ? success!(user) : fail!('Invalid or expired token')\n  rescue JWT::DecodeError\n    fail!('Invalid token')\n  end\nend\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Hook into Devise:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/devise.rb\nDevise.setup do |config|\n  config.warden do |manager|\n    manager.default_strategies(scope: :user).unshift :token_strategy\n  end\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"This strategy will run before the standard database_authenticatable, allowing you to authenticate API requests seamlessly."})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(36672);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);