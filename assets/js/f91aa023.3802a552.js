"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23876],{44128:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/active_record_associations/beginner/inverse_of_option","title":"inverse_of_option","description":"\ud83d\udd04 Improve Performance with inverse_of","source":"@site/docs/rails/active_record_associations/beginner/inverse_of_option.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/inverse_of_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/inverse_of_option","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/inverse_of_option.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"has_one_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_one_association"},"next":{"title":"nested_attributes","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/nested_attributes"}}');var i=n(23420),r=n(65404);const t={},a=void 0,c={},d=[{value:"\ud83d\udd04 Improve Performance with <code>inverse_of</code>",id:"-improve-performance-with-inverse_of",level:2}];function l(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(o.h2,{id:"-improve-performance-with-inverse_of",children:["\ud83d\udd04 Improve Performance with ",(0,i.jsx)(o.code,{children:"inverse_of"})]}),"\n",(0,i.jsxs)(o.p,{children:[(0,i.jsx)(o.code,{children:"inverse_of"})," helps Rails avoid extra queries by linking objects in memory. Specify it on both sides of the association."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-ruby",children:"# app/models/author.rb\nclass Author < ApplicationRecord\n  has_many :books, inverse_of: :author\nend\n\n# app/models/book.rb\nclass Book < ApplicationRecord\n  belongs_to :author, inverse_of: :books\nend\n"})}),"\n",(0,i.jsxs)(o.p,{children:["Now ",(0,i.jsx)(o.code,{children:"book.author.books.first"})," uses the same ",(0,i.jsx)(o.code,{children:"Author"})," instance, reducing database calls."]})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,o,n)=>{n.d(o,{R:()=>t,x:()=>a});var s=n(36672);const i={},r=s.createContext(i);function t(e){const o=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);