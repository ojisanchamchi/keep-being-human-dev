"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11654],{49107:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"rails/debugging/expert/custom_exception_pry","title":"custom_exception_pry","description":"\ud83d\udea8 Custom Exception Hook into Pry","source":"@site/docs/rails/debugging/expert/custom_exception_pry.md","sourceDirName":"rails/debugging/expert","slug":"/rails/debugging/expert/custom_exception_pry","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/custom_exception_pry","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/debugging/expert/custom_exception_pry.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"byebug_advanced_mastery","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/byebug_advanced_mastery"},"next":{"title":"notifications_inspector","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/notifications_inspector"}}');var r=t(23420),i=t(65404);const s={},c=void 0,p={},a=[{value:"\ud83d\udea8 Custom Exception Hook into Pry",id:"-custom-exception-hook-into-pry",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-custom-exception-hook-into-pry",children:"\ud83d\udea8 Custom Exception Hook into Pry"}),"\n",(0,r.jsx)(n.p,{children:"By default Rails renders a debug page on exceptions. Override the exception app to drop into a pry session whenever an unhandled error occurs, giving you full request context on-demand."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/exception_pry.rb\nif Rails.env.development?\n  require 'pry-rails'\n  module PryExceptionHook\n    def render_exception(env, exception)\n      Rails.logger.error(\"Exception intercepted: #{exception.class} - #{exception.message}\")\n      require 'pry'; binding.pry\n      super\n    end\n  end\n\n  ActionDispatch::DebugExceptions.prepend(PryExceptionHook)\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now when an exception bubbles up, your server console will drop into a pry session with access to ",(0,r.jsx)(n.code,{children:"env"}),", ",(0,r.jsx)(n.code,{children:"exception"}),", and all local frames. Inspect params, session data, or even replay parts of the request programmatically."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var o=t(36672);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);