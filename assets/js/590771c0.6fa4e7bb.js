"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2483],{64996:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/security/expert/timing_attack_secure_compare","title":"timing_attack_secure_compare","description":"\u23f1\ufe0f Mitigating Timing Attacks with secure_compare","source":"@site/docs/rails/security/expert/timing_attack_secure_compare.md","sourceDirName":"rails/security/expert","slug":"/rails/security/expert/timing_attack_secure_compare","permalink":"/keep-being-human-dev/docs/rails/security/expert/timing_attack_secure_compare","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/security/expert/timing_attack_secure_compare.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"strict_cors_dynamic_origins","permalink":"/keep-being-human-dev/docs/rails/security/expert/strict_cors_dynamic_origins"},"next":{"title":"active_record_encryption","permalink":"/keep-being-human-dev/docs/rails/security/middle/active_record_encryption"}}');var n=i(23420),s=i(65404);const c={},a=void 0,o={},d=[{value:"\u23f1\ufe0f Mitigating Timing Attacks with secure_compare",id:"\ufe0f-mitigating-timing-attacks-with-secure_compare",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"\ufe0f-mitigating-timing-attacks-with-secure_compare",children:"\u23f1\ufe0f Mitigating Timing Attacks with secure_compare"}),"\n",(0,n.jsxs)(t.p,{children:["Plain ",(0,n.jsx)(t.code,{children:"=="})," leaks information via early exit on mismatch. Always use constant-time comparison for tokens, digests, or any sensitive string equality checks."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# app/services/token_validator.rb\nclass TokenValidator\n  def self.valid?(provided_token, stored_token)\n    return false unless provided_token.bytesize == stored_token.bytesize\n    ActiveSupport::SecurityUtils.secure_compare(provided_token, stored_token)\n  end\nend\n"})}),"\n",(0,n.jsxs)(t.p,{children:["In controllers or services, call ",(0,n.jsx)(t.code,{children:"TokenValidator.valid?"})," instead of ",(0,n.jsx)(t.code,{children:"=="})," when verifying API keys, session tokens, or 2FA codes."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>a});var r=i(36672);const n={},s=r.createContext(n);function c(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);