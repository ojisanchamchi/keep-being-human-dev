"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68460],{61994:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/action_cable/middle/cleanup_streams_on_unsubscribe","title":"cleanup_streams_on_unsubscribe","description":"\ud83e\uddf9 Clean Up Streams in unsubscribed","source":"@site/docs/rails/action_cable/middle/cleanup_streams_on_unsubscribe.md","sourceDirName":"rails/action_cable/middle","slug":"/rails/action_cable/middle/cleanup_streams_on_unsubscribe","permalink":"/keep-being-human-dev/docs/rails/action_cable/middle/cleanup_streams_on_unsubscribe","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/action_cable/middle/cleanup_streams_on_unsubscribe.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"redis_scaling_namespace_isolation","permalink":"/keep-being-human-dev/docs/rails/action_cable/expert/redis_scaling_namespace_isolation"},"next":{"title":"client_reconnection_resubscribe","permalink":"/keep-being-human-dev/docs/rails/action_cable/middle/client_reconnection_resubscribe"}}');var t=s(23420),r=s(65404);const c={},i=void 0,o={},l=[{value:"\ud83e\uddf9 Clean Up Streams in unsubscribed",id:"-clean-up-streams-in-unsubscribed",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-clean-up-streams-in-unsubscribed",children:"\ud83e\uddf9 Clean Up Streams in unsubscribed"}),"\n",(0,t.jsxs)(n.p,{children:["Prevent dangling subscriptions by stopping streams explicitly when a client disconnects. Use ",(0,t.jsx)(n.code,{children:"stop_all_streams"})," or ",(0,t.jsx)(n.code,{children:"stop_stream_from"})," in your channel's ",(0,t.jsx)(n.code,{children:"unsubscribed"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# app/channels/chat_room_channel.rb\nclass ChatRoomChannel < ApplicationCable::Channel\n  def subscribed\n    @stream_name = "chat_room_#{params[:room_id]}_messages"\n    stream_from @stream_name\n  end\n\n  def unsubscribed\n    stop_stream_from @stream_name\n    # or use stop_all_streams to remove every stream\n    # stop_all_streams\n  end\nend\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var a=s(36672);const t={},r=a.createContext(t);function c(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);