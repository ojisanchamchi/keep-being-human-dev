"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49311],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(36672);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},79738:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"gems/redis/advanced/redis_cluster_integration","title":"redis_cluster_integration","description":"\ud83c\udf10 Integrate with a Redis Cluster Seamlessly","source":"@site/docs/gems/redis/advanced/redis_cluster_integration.md","sourceDirName":"gems/redis/advanced","slug":"/gems/redis/advanced/redis_cluster_integration","permalink":"/keep-being-human-dev/docs/gems/redis/advanced/redis_cluster_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/redis/advanced/redis_cluster_integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ransack_sort_pagination","permalink":"/keep-being-human-dev/docs/gems/ransack/middle/ransack_sort_pagination"},"next":{"title":"redis_pubsub_connection_pool","permalink":"/keep-being-human-dev/docs/gems/redis/advanced/redis_pubsub_connection_pool"}}');var s=t(23420),r=t(65404);const a={},o=void 0,c={},d=[{value:"\ud83c\udf10 Integrate with a Redis Cluster Seamlessly",id:"-integrate-with-a-redis-cluster-seamlessly",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-integrate-with-a-redis-cluster-seamlessly",children:"\ud83c\udf10 Integrate with a Redis Cluster Seamlessly"}),"\n",(0,s.jsxs)(n.p,{children:["Connect Rails cache and Sidekiq to a Redis Cluster for high availability and horizontal scaling. Use ",(0,s.jsx)(n.code,{children:"redis-client"})," to automatically route commands and manage slots."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'redis-client', '~> 0.10'\n\n# config/initializers/redis.rb\nRedisClient.new(\n  nodes: [\n    { host: '10.0.0.1', port: 6379 },\n    { host: '10.0.0.2', port: 6379 }\n  ],\n  support_redirection: true\n).tap do |client|\n  Rails.application.config.cache_store = :redis_cache_store,\n    { client: client, expires_in: 1.hour }\n  Sidekiq.configure_server do |config|\n    config.redis = { client: client }\n  end\n  Sidekiq.configure_client do |config|\n    config.redis = { client: client }\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);