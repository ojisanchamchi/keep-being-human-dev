"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24989],{54778:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"rails/active_record/beginner/sorting_results","title":"sorting_results","description":"\u2699\ufe0f Sort Results with order","source":"@site/docs/rails/active_record/beginner/sorting_results.md","sourceDirName":"rails/active_record/beginner","slug":"/rails/active_record/beginner/sorting_results","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/sorting_results","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/beginner/sorting_results.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"reading_records","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/reading_records"},"next":{"title":"update_records","permalink":"/keep-being-human-dev/docs/rails/active_record/beginner/update_records"}}');var s=t(23420),o=t(65404);const i={},c=void 0,d={},a=[{value:"\u2699\ufe0f Sort Results with <code>order</code>",id:"\ufe0f-sort-results-with-order",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h2,{id:"\ufe0f-sort-results-with-order",children:["\u2699\ufe0f Sort Results with ",(0,s.jsx)(r.code,{children:"order"})]}),"\n",(0,s.jsxs)(r.p,{children:["Use the ",(0,s.jsx)(r.code,{children:"order"})," method to sort records by one or more columns. It accepts strings or hashes to define ascending/descending order. Chaining it after ",(0,s.jsx)(r.code,{children:"where"})," or before ",(0,s.jsx)(r.code,{children:"limit"})," is common for pagination and sorted views."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# Ascending order by created_at\nevents = Event.order(created_at: :asc)\n\n# Multiple columns, mixed directions\nusers = User.order(last_name: :asc, created_at: :desc)\n"})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>c});var n=t(36672);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);