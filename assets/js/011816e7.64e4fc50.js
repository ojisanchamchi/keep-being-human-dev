"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[23760],{57429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/strings/beginner/string_indexing","title":"string_indexing","description":"\ud83d\udd22 Accessing Characters by Index","source":"@site/docs/ruby/strings/beginner/string_indexing.md","sourceDirName":"ruby/strings/beginner","slug":"/ruby/strings/beginner/string_indexing","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_indexing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/beginner/string_indexing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"string_duplication","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_duplication"},"next":{"title":"string_interpolation","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/string_interpolation"}}');var s=t(23420),i=t(65404);const a={},c=void 0,o={},u=[{value:"\ud83d\udd22 Accessing Characters by Index",id:"-accessing-characters-by-index",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-accessing-characters-by-index",children:"\ud83d\udd22 Accessing Characters by Index"}),"\n",(0,s.jsx)(n.p,{children:"Strings in Ruby behave like arrays of bytes (in modern Ruby, of characters). You can use square brackets to get a character at a given index (starting from 0) or negative indexes from the end."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'s = "Ruby"\nputs s[0]    # => "R"\nputs s[2]    # => "b"\nputs s[-1]   # => "y"\n'})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(36672);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);