"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17538],{14110:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"rails/views/advanced/custom-form-builder","title":"custom-form-builder","description":"\ud83d\udcdd Tip: Create a Custom Form Builder for Consistent Markup","source":"@site/docs/rails/views/advanced/custom-form-builder.md","sourceDirName":"rails/views/advanced","slug":"/rails/views/advanced/custom-form-builder","permalink":"/keep-being-human-dev/docs/rails/views/advanced/custom-form-builder","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/views/advanced/custom-form-builder.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"cells-gem-usage","permalink":"/keep-being-human-dev/docs/rails/views/advanced/cells-gem-usage"},"next":{"title":"decorator-pattern-views","permalink":"/keep-being-human-dev/docs/rails/views/advanced/decorator-pattern-views"}}');var s=t(23420),o=t(65404);const a={},i=void 0,d={},c=[{value:"\ud83d\udcdd Tip: Create a Custom Form Builder for Consistent Markup",id:"-tip-create-a-custom-form-builder-for-consistent-markup",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-tip-create-a-custom-form-builder-for-consistent-markup",children:"\ud83d\udcdd Tip: Create a Custom Form Builder for Consistent Markup"}),"\n",(0,s.jsxs)(r.p,{children:["Subclass ",(0,s.jsx)(r.code,{children:"ActionView::Helpers::FormBuilder"})," to wrap common patterns (e.g., error display, wrappers) and register it via ",(0,s.jsx)(r.code,{children:"form_with"}),". This enforces a uniform input structure."]}),"\n",(0,s.jsx)(r.p,{children:"Example:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# app/forms/bootstrap_form_builder.rb\nclass BootstrapFormBuilder < ActionView::Helpers::FormBuilder\n  def text_field(method, options = {})\n    @template.content_tag(:div, class: 'form-group') do\n      super + error_message(method)\n    end\n  end\n\n  private\n\n  def error_message(method)\n    return '' unless object.errors[method].any?\n    @template.content_tag(:span, object.errors[method].join(', '), class: 'text-danger')\n  end\nend\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-erb",children:"<%= form_with(model: @user, builder: BootstrapFormBuilder) do |f| %>\n  <%= f.text_field :email %>\n  <%= f.submit %>\n<% end %>\n"})})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var n=t(36672);const s={},o=n.createContext(s);function a(e){const r=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);