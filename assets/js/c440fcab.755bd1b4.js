"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85482],{57446:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>t,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"rails/benchmarking/advanced/gc_profiler_memory","title":"gc_profiler_memory","description":"\ud83d\udcca Combine GC::Profiler and ObjectSpace for Memory Profiling","source":"@site/docs/rails/benchmarking/advanced/gc_profiler_memory.md","sourceDirName":"rails/benchmarking/advanced","slug":"/rails/benchmarking/advanced/gc_profiler_memory","permalink":"/keep-being-human-dev/docs/rails/benchmarking/advanced/gc_profiler_memory","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/benchmarking/advanced/gc_profiler_memory.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_ips_gem","permalink":"/keep-being-human-dev/docs/rails/benchmarking/advanced/benchmark_ips_gem"},"next":{"title":"micro_benchmark_bmbm","permalink":"/keep-being-human-dev/docs/rails/benchmarking/advanced/micro_benchmark_bmbm"}}');var o=r(23420),i=r(65404);const c={},t=void 0,m={},s=[{value:"\ud83d\udcca Combine GC::Profiler and ObjectSpace for Memory Profiling",id:"-combine-gcprofiler-and-objectspace-for-memory-profiling",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-combine-gcprofiler-and-objectspace-for-memory-profiling",children:"\ud83d\udcca Combine GC::Profiler and ObjectSpace for Memory Profiling"}),"\n",(0,o.jsxs)(n.p,{children:["Ruby\u2019s ",(0,o.jsx)(n.code,{children:"GC::Profiler"})," along with ",(0,o.jsx)(n.code,{children:"ObjectSpace.memsize_of_all"})," can reveal allocation hotspots during a benchmark. Enable the profiler, run your code block, then inspect GC and memory metrics to identify heavy allocators."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\nGC::Profiler.enable\ninitial_mem = ObjectSpace.memsize_of_all\n\ntime = Benchmark.measure do\n  10_000.times { Post.new(title: 'Benchmark').save! }\nend\n\nGC::Profiler.report\nputs \"Memory Change: #{(ObjectSpace.memsize_of_all - initial_mem) / 1024.0} KB\"\nputs \"Elapsed: #{time.real.round(2)}s\"\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var a=r(36672);const o={},i=a.createContext(o);function c(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);