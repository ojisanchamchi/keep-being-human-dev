"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[93307],{65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>u});var s=n(36672);const r={},i=s.createContext(r);function c(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:t},e.children)}},70624:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>u,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"ruby/strings/expert/grapheme_cluster_counting","title":"grapheme_cluster_counting","description":"\ud83d\udccf Count grapheme clusters with \\\\X in regex","source":"@site/docs/ruby/strings/expert/grapheme_cluster_counting.md","sourceDirName":"ruby/strings/expert","slug":"/ruby/strings/expert/grapheme_cluster_counting","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/grapheme_cluster_counting","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/expert/grapheme_cluster_counting.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"freeze_dedupe_strings","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/freeze_dedupe_strings"},"next":{"title":"handle_invalid_bytes_with_scrub","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/handle_invalid_bytes_with_scrub"}}');var r=n(23420),i=n(65404);const c={},u=void 0,a={},o=[{value:"\ud83d\udccf Count grapheme clusters with \\X in regex",id:"-count-grapheme-clusters-with-x-in-regex",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-count-grapheme-clusters-with-x-in-regex",children:"\ud83d\udccf Count grapheme clusters with \\X in regex"}),"\n",(0,r.jsxs)(t.p,{children:["Ruby\u2019s Oniguruma engine supports ",(0,r.jsx)(t.code,{children:"\\X"})," for extended grapheme clusters, ensuring you treat composed characters (emojis, accented letters) as single user\u2011perceived units. This is essential for accurate UI metrics, slicing, and validation in internationalized applications."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'s = "\ud83c\uddfa\ud83c\uddf8e\u0301"\nputs s.length              # => 4 (4 codepoints)\nputs s.scan(/\\X/).size    # => 2 ("\ud83c\uddfa\ud83c\uddf8" and "e\u0301")\n# You can also safely slice by cluster index:\nclusters = s.scan(/\\X/)\nputs clusters[1]           # => "e\u0301"\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);