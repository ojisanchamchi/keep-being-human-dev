"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[67398],{1679:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"javascript/turbo/middle/turbo_lazy_frame_loading","title":"turbo_lazy_frame_loading","description":"\u26a1\ufe0f Lazy-Load Turbo Frames","source":"@site/docs/javascript/turbo/middle/turbo_lazy_frame_loading.md","sourceDirName":"javascript/turbo/middle","slug":"/javascript/turbo/middle/turbo_lazy_frame_loading","permalink":"/keep-being-human-dev/docs/javascript/turbo/middle/turbo_lazy_frame_loading","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/turbo/middle/turbo_lazy_frame_loading.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"turbo_inject_streams_js","permalink":"/keep-being-human-dev/docs/javascript/turbo/middle/turbo_inject_streams_js"},"next":{"title":"turbo_link_prefetch","permalink":"/keep-being-human-dev/docs/javascript/turbo/middle/turbo_link_prefetch"}}');var n=r(23420),o=r(65404);const s={},i=void 0,c={},d=[{value:"\u26a1\ufe0f Lazy-Load Turbo Frames",id:"\ufe0f-lazy-load-turbo-frames",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"\ufe0f-lazy-load-turbo-frames",children:"\u26a1\ufe0f Lazy-Load Turbo Frames"}),"\n",(0,n.jsx)(t.p,{children:"You can lazy-load Turbo Frames by swapping in the frame's src attribute when it enters the viewport. This technique defers loading heavy content until needed, improving initial page load speed. Use the Intersection Observer API to detect visibility and update the frame src dynamically."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"document.addEventListener('turbo:load', () => {\n  const frames = document.querySelectorAll('turbo-frame[data-src]');\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const frame = entry.target;\n        frame.src = frame.dataset.src;\n        observer.unobserve(frame);\n      }\n    });\n  });\n\n  frames.forEach(frame => observer.observe(frame));\n});\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>i});var a=r(36672);const n={},o=a.createContext(n);function s(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);