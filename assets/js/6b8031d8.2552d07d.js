"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15731],{8802:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/oop/middle/dynamic_method_definitions","title":"dynamic_method_definitions","description":"\ud83d\udee0\ufe0f Define Methods Dynamically with define_method","source":"@site/docs/ruby/oop/middle/dynamic_method_definitions.md","sourceDirName":"ruby/oop/middle","slug":"/ruby/oop/middle/dynamic_method_definitions","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/dynamic_method_definitions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/middle/dynamic_method_definitions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"define_value_objects","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/define_value_objects"},"next":{"title":"leverage_struct_for_data_objects","permalink":"/keep-being-human-dev/docs/ruby/oop/middle/leverage_struct_for_data_objects"}}');var o=i(23420),d=i(65404);const s={},a=void 0,r={},c=[{value:"\ud83d\udee0\ufe0f Define Methods Dynamically with <code>define_method</code>",id:"\ufe0f-define-methods-dynamically-with-define_method",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"\ufe0f-define-methods-dynamically-with-define_method",children:["\ud83d\udee0\ufe0f Define Methods Dynamically with ",(0,o.jsx)(n.code,{children:"define_method"})]}),"\n",(0,o.jsx)(n.p,{children:"When similar methods differ only by name or behavior, avoid repetition by defining them programmatically. This keeps your code concise and reduces maintenance."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'class Notifier\n  %w[email sms push].each do |channel|\n    define_method("notify_#{channel}") do |message|\n      puts "Sending \\\\#{message} via #{channel.upcase}"\n    end\n  end\nend\n\nnotifier = Notifier.new\nnotifier.notify_email("Hello") # Sending Hello via EMAIL\nnotifier.notify_sms("Hi")     # Sending Hi via SMS\n'})})]})}function l(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(36672);const o={},d=t.createContext(o);function s(e){const n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);