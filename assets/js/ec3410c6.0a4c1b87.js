"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[10794],{15286:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/secrets_and_credentials/expert/aws_kms_credentials_provider","title":"aws_kms_credentials_provider","description":"\ud83d\udd10 AWS KMS as a Custom Key Provider","source":"@site/docs/rails/secrets_and_credentials/expert/aws_kms_credentials_provider.md","sourceDirName":"rails/secrets_and_credentials/expert","slug":"/rails/secrets_and_credentials/expert/aws_kms_credentials_provider","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/expert/aws_kms_credentials_provider","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/secrets_and_credentials/expert/aws_kms_credentials_provider.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"env_specific_credentials","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/beginner/env_specific_credentials"},"next":{"title":"credentials_rotation_task","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/expert/credentials_rotation_task"}}');var t=r(23420),a=r(65404);const i={},c=void 0,o={},d=[{value:"\ud83d\udd10 AWS KMS as a Custom Key Provider",id:"-aws-kms-as-a-custom-key-provider",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"-aws-kms-as-a-custom-key-provider",children:"\ud83d\udd10 AWS KMS as a Custom Key Provider"}),"\n",(0,t.jsx)(s.p,{children:"For heightened security, avoid storing your master key on disk by using AWS KMS to decrypt your credentials key at runtime. Create a custom key provider that calls KMS to unwrap an encrypted key blob stored in an environment variable."}),"\n",(0,t.jsxs)(s.p,{children:["In ",(0,t.jsx)(s.code,{children:"config/initializers/kms_credentials.rb"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"require 'aws-sdk-kms'\n\nkms_client = Aws::KMS::Client.new(region: 'us-east-1')\nkey_provider = -> do\n  # KMS_CREDENTIALS_BLOB is a Base64 of the encrypted master key\n  blob = Base64.decode64(ENV.fetch('KMS_CREDENTIALS_BLOB'))\n  kms_client.decrypt(ciphertext_blob: blob).plaintext\nend\n\nRails.application.config.read_encrypted_secrets = ActiveSupport::EncryptedConfiguration.new(\n  config_path: Rails.root.join('config/credentials/aws_kms.yml.enc'),\n  key_provider: key_provider,\n  env_cipher: 'RAILS_MASTER_KEY_IV' # optional: use ENV for the IV if you rotate it\n)\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Your ",(0,t.jsx)(s.code,{children:"aws_kms.yml.enc"})," remains encrypted with a data key from KMS; the code only holds the encrypted blob. Access credentials as usual:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"Rails.application.credentials.dig(:database, :username)\n"})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var n=r(36672);const t={},a=n.createContext(t);function i(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);