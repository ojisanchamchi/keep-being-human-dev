"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47330],{65404:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(36672);const a={},t=i.createContext(a);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},99180:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/active_record_validations/expert/advanced_uniqueness_scopes","title":"advanced_uniqueness_scopes","description":"\ud83d\udd0d Advanced Uniqueness with Scopes and Subqueries","source":"@site/docs/rails/active_record_validations/expert/advanced_uniqueness_scopes.md","sourceDirName":"rails/active_record_validations/expert","slug":"/rails/active_record_validations/expert/advanced_uniqueness_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/advanced_uniqueness_scopes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/expert/advanced_uniqueness_scopes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"uniqueness_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/beginner/uniqueness_validation"},"next":{"title":"complex_association_validations","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/complex_association_validations"}}');var a=s(23420),t=s(65404);const o={},c=void 0,r={},d=[{value:"\ud83d\udd0d Advanced Uniqueness with Scopes and Subqueries",id:"-advanced-uniqueness-with-scopes-and-subqueries",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-advanced-uniqueness-with-scopes-and-subqueries",children:"\ud83d\udd0d Advanced Uniqueness with Scopes and Subqueries"}),"\n",(0,a.jsxs)(n.p,{children:["Enforce uniqueness with complex scopes or dynamic conditions by combining ",(0,a.jsx)(n.code,{children:"uniqueness"})," validator with ",(0,a.jsx)(n.code,{children:"where"})," subqueries. This is essential for multitenant apps and soft-deletion logic."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# app/models/project.rb\nclass Project < ApplicationRecord\n  validates :name,\n    uniqueness: { \n      scope: :account_id,\n      conditions: -> { where(archived: false) }\n    }\nend\n\n# Ensure DB-level partial index too\nadd_index :projects, [:account_id, :name], unique: true, where: "archived = FALSE"\n'})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);