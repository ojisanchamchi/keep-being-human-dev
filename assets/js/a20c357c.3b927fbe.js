"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22431],{28809:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/active_record_associations/expert/association_callbacks_usage","title":"association_callbacks_usage","description":"\ud83d\udcdd Association Callbacks for Lifecycle Hooks","source":"@site/docs/rails/active_record_associations/expert/association_callbacks_usage.md","sourceDirName":"rails/active_record_associations/expert","slug":"/rails/active_record_associations/expert/association_callbacks_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/association_callbacks_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/expert/association_callbacks_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"validates_associated","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/validates_associated"},"next":{"title":"composite_primary_key_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/composite_primary_key_associations"}}');var i=a(23420),n=a(65404);const c={},t=void 0,r={},l=[{value:"\ud83d\udcdd Association Callbacks for Lifecycle Hooks",id:"-association-callbacks-for-lifecycle-hooks",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"-association-callbacks-for-lifecycle-hooks",children:"\ud83d\udcdd Association Callbacks for Lifecycle Hooks"}),"\n",(0,i.jsxs)(s.p,{children:["Use ",(0,i.jsx)(s.code,{children:"after_add"})," and ",(0,i.jsx)(s.code,{children:"before_remove"})," callbacks to tie side effects directly to association changes. This is especially useful for maintaining denormalized data or triggering background jobs."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:'class Playlist < ApplicationRecord\n  has_many :songs,\n           after_add:    ->(pl, s) { pl.log_addition(s) },\n           before_remove: ->(pl, s) { pl.archive_song(s) }\n\n  def log_addition(song)\n    Rails.logger.info "Added #{song.title} to #{name}"\n  end\n\n  def archive_song(song)\n    song.update!(archived: true)\n  end\nend\n'})})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,s,a)=>{a.d(s,{R:()=>c,x:()=>t});var o=a(36672);const i={},n=o.createContext(i);function c(e){const s=o.useContext(n);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(n.Provider,{value:s},e.children)}}}]);