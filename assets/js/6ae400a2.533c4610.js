"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49922],{47578:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"rails/controllers/expert/controller_concerns_adv","title":"controller_concerns_adv","description":"\ud83e\udde9 Advanced Controller Concerns for Cross\u2010Cutting Logic","source":"@site/docs/rails/controllers/expert/controller_concerns_adv.md","sourceDirName":"rails/controllers/expert","slug":"/rails/controllers/expert/controller_concerns_adv","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/controller_concerns_adv","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/expert/controller_concerns_adv.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_content_negotiation","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/advanced_content_negotiation"},"next":{"title":"dependency_injection_service_objects","permalink":"/keep-being-human-dev/docs/rails/controllers/expert/dependency_injection_service_objects"}}');var t=r(23420),c=r(65404);const s={},l=void 0,i={},a=[{value:"\ud83e\udde9 Advanced Controller Concerns for Cross\u2010Cutting Logic",id:"-advanced-controller-concerns-for-crosscutting-logic",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-advanced-controller-concerns-for-crosscutting-logic",children:"\ud83e\udde9 Advanced Controller Concerns for Cross\u2010Cutting Logic"}),"\n",(0,t.jsxs)(n.p,{children:["Extract complex before/after callbacks, parameter sanitization and shared utilities into concerns. Use ",(0,t.jsx)(n.code,{children:"included do"})," and ",(0,t.jsx)(n.code,{children:"ClassMethods"})," to inject actions, scopes, or filters at the class level, keeping controllers DRY and expressive."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/concerns/audit_trail.rb\nmodule AuditTrail\n  extend ActiveSupport::Concern\n\n  included do\n    before_action :record_audit\n  end\n\n  private\n\n  def record_audit\n    Audit.create!(user: current_user, path: request.fullpath)\n  end\n\n  module ClassMethods\n    def skip_audit_for(*actions)\n      skip_before_action :record_audit, only: actions\n    end\n  end\nend\n\n# app/controllers/posts_controller.rb\nclass PostsController < ApplicationController\n  include AuditTrail\n  skip_audit_for :index, :show\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(36672);const t={},c=o.createContext(t);function s(e){const n=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);