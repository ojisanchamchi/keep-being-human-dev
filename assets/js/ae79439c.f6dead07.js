"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28486],{65404:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>o});var t=r(36672);const s={},a=t.createContext(s);function d(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(a.Provider,{value:n},e.children)}},93173:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>d,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"ruby/csv/middle/headers_and_converters","title":"headers_and_converters","description":"\ud83d\udd27 Leverage Headers and Converters for Typed Data","source":"@site/docs/ruby/csv/middle/headers_and_converters.md","sourceDirName":"ruby/csv/middle","slug":"/ruby/csv/middle/headers_and_converters","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/headers_and_converters","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/csv/middle/headers_and_converters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"efficient_streaming","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/efficient_streaming"},"next":{"title":"resilient_parsing","permalink":"/keep-being-human-dev/docs/ruby/csv/middle/resilient_parsing"}}');var s=r(23420),a=r(65404);const d={},o=void 0,c={},i=[{value:"\ud83d\udd27 Leverage Headers and Converters for Typed Data",id:"-leverage-headers-and-converters-for-typed-data",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-leverage-headers-and-converters-for-typed-data",children:"\ud83d\udd27 Leverage Headers and Converters for Typed Data"}),"\n",(0,s.jsxs)(n.p,{children:["By enabling ",(0,s.jsx)(n.code,{children:"headers: true"})," and providing ",(0,s.jsx)(n.code,{children:"converters"}),", you get automatic type casting and easy access by column name. Ruby\u2019s CSV supports built\u2011in converters like ",(0,s.jsx)(n.code,{children:":numeric"})," and ",(0,s.jsx)(n.code,{children:":date"}),", or you can define your own to massage data on the fly."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"require 'csv'\n\noptions = {\n  headers: true,\n  converters: [:numeric, :date]\n}\n\nCSV.foreach('orders.csv', **options) do |row|\n  # row['total'] is now a Float, row['placed_on'] is a Date\n  puts \"Order ##{row['id']}: $#{row['total']} on #{row['placed_on']}\"\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);