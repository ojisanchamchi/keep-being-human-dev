"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11041],{50303:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/security/expert/cookie_secret_rotation","title":"cookie_secret_rotation","description":"\ud83d\udd04 Encrypted & Signed Cookie Rotation","source":"@site/docs/rails/security/expert/cookie_secret_rotation.md","sourceDirName":"rails/security/expert","slug":"/rails/security/expert/cookie_secret_rotation","permalink":"/keep-being-human-dev/docs/rails/security/expert/cookie_secret_rotation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/security/expert/cookie_secret_rotation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ci_dependency_audit","permalink":"/keep-being-human-dev/docs/rails/security/expert/ci_dependency_audit"},"next":{"title":"csp_violation_report_endpoint","permalink":"/keep-being-human-dev/docs/rails/security/expert/csp_violation_report_endpoint"}}');var n=i(23420),r=i(65404);const s={},c=void 0,a={},d=[{value:"\ud83d\udd04 Encrypted &amp; Signed Cookie Rotation",id:"-encrypted--signed-cookie-rotation",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-encrypted--signed-cookie-rotation",children:"\ud83d\udd04 Encrypted & Signed Cookie Rotation"}),"\n",(0,n.jsxs)(t.p,{children:["Rotating your ",(0,n.jsx)(t.code,{children:"secret_key_base"})," without invalidating all user sessions is critical during key rollover. Use Rails' cookie rotations to gracefully accept old cookies while issuing new ones under the fresh key."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# config/initializers/cookie_rotation.rb\nRails.application.config.action_dispatch.cookies_serializer = :json\nRails.application.config.action_dispatch.cookies_rotations.tap do |cookies|\n  # Rotate encrypted cookies\n  cookies.rotate :encrypted, Rails.application.credentials.old_secret_key_base\n  cookies.rotate :signed,    Rails.application.credentials.old_secret_key_base\nend\n"})}),"\n",(0,n.jsxs)(t.p,{children:["All existing cookies encrypted with ",(0,n.jsx)(t.code,{children:"old_secret_key_base"})," will still be decrypted, while new cookies will use the current ",(0,n.jsx)(t.code,{children:"secret_key_base"})," from ",(0,n.jsx)(t.code,{children:"Rails.application.credentials"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var o=i(36672);const n={},r=o.createContext(n);function s(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);