"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94206],{10827:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"ruby/classes_and_modules/middle/include_vs_extend","title":"include_vs_extend","description":"\ud83d\udd04 Include vs Extend","source":"@site/docs/ruby/classes_and_modules/middle/include_vs_extend.md","sourceDirName":"ruby/classes_and_modules/middle","slug":"/ruby/classes_and_modules/middle/include_vs_extend","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/include_vs_extend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/middle/include_vs_extend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_class_definition","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/dynamic_class_definition"},"next":{"title":"mixins_with_callbacks","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/mixins_with_callbacks"}}');var t=s(23420),c=s(65404);const l={},a=void 0,i={},o=[{value:"\ud83d\udd04 Include vs Extend",id:"-include-vs-extend",level:2}];function r(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-include-vs-extend",children:"\ud83d\udd04 Include vs Extend"}),"\n",(0,t.jsxs)(n.p,{children:["Understanding when to use ",(0,t.jsx)(n.code,{children:"include"})," versus ",(0,t.jsx)(n.code,{children:"extend"})," helps you organize shared behavior in classes and modules. ",(0,t.jsx)(n.code,{children:"include"})," mixes module methods as instance methods, while ",(0,t.jsx)(n.code,{children:"extend"})," adds them as class methods. Use ",(0,t.jsx)(n.code,{children:"extend"})," for utility methods scoped to the class and ",(0,t.jsx)(n.code,{children:"include"})," for behaviors each instance needs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'module Loggable\n  def log(message)\n    puts "[LOG] #{message}"\n  end\nend\n\nclass ServiceA\n  include Loggable   # service_a.log(...) available on instances\nend\n\nclass ServiceB\n  extend Loggable    # ServiceB.log(...) available on class\nend\n'})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var d=s(36672);const t={},c=d.createContext(t);function l(e){const n=d.useContext(c);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),d.createElement(c.Provider,{value:n},e.children)}}}]);