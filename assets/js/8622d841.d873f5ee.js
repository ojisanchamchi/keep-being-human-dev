"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[36168],{26692:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/partials/expert/namespaced_partial_overrides","title":"namespaced_partial_overrides","description":"\ud83c\udfa8 Namespaced Partial Overrides for Theming","source":"@site/docs/rails/partials/expert/namespaced_partial_overrides.md","sourceDirName":"rails/partials/expert","slug":"/rails/partials/expert/namespaced_partial_overrides","permalink":"/keep-being-human-dev/docs/rails/partials/expert/namespaced_partial_overrides","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/partials/expert/namespaced_partial_overrides.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_partial_resolution","permalink":"/keep-being-human-dev/docs/rails/partials/expert/dynamic_partial_resolution"},"next":{"title":"partial_with_layout","permalink":"/keep-being-human-dev/docs/rails/partials/expert/partial_with_layout"}}');var i=a(23420),n=a(65404);const s={},o=void 0,p={},l=[{value:"\ud83c\udfa8 Namespaced Partial Overrides for Theming",id:"-namespaced-partial-overrides-for-theming",level:2}];function d(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"-namespaced-partial-overrides-for-theming",children:"\ud83c\udfa8 Namespaced Partial Overrides for Theming"}),"\n",(0,i.jsx)(r.p,{children:"Enable app-specific or engine-level overrides by prepending view paths at runtime. This allows you to ship default partials in gems or engines and let applications override them without touching your codebase."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ruby",children:"# config/initializers/view_paths.rb\nRails.application.config.to_prepare do\n  ApplicationController.prepend_view_path(Rails.root.join('app','views','overrides'))\nend\n"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-erb",children:'# app/views/overrides/products/_product.html.erb\n<div class="themed-product">\n  \x3c!-- override default product partial here --\x3e\n</div>\n'})})]})}function c(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},65404:(e,r,a)=>{a.d(r,{R:()=>s,x:()=>o});var t=a(36672);const i={},n=t.createContext(i);function s(e){const r=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);