"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[32278],{44893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/mailers/beginner/test_mailers","title":"test_mailers","description":"\u2705 Testing Mailers","source":"@site/docs/rails/mailers/beginner/test_mailers.md","sourceDirName":"rails/mailers/beginner","slug":"/rails/mailers/beginner/test_mailers","permalink":"/keep-being-human-dev/docs/rails/mailers/beginner/test_mailers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/mailers/beginner/test_mailers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"smtp_configuration","permalink":"/keep-being-human-dev/docs/rails/mailers/beginner/smtp_configuration"},"next":{"title":"custom_delivery_method","permalink":"/keep-being-human-dev/docs/rails/mailers/expert/custom_delivery_method"}}');var s=t(23420),i=t(65404);const a={},o=void 0,l={},c=[{value:"\u2705 Testing Mailers",id:"-testing-mailers",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-testing-mailers",children:"\u2705 Testing Mailers"}),"\n",(0,s.jsx)(n.p,{children:"Use built\u2011in helpers to verify emails are enqueued, sent, and contain the correct content in your test suite. Here\u2019s an example with RSpec:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# spec/mailers/user_mailer_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe UserMailer, type: :mailer do\n  describe '#welcome_email' do\n    let(:user) { create(:user, email: 'foo@example.com', name: 'Foo') }\n    let(:mail) { UserMailer.welcome_email(user) }\n\n    it 'renders the headers' do\n      expect(mail.subject).to eq('Welcome to My App')\n      expect(mail.to).to eq(['foo@example.com'])\n      expect(mail.from).to eq(['no-reply@example.com'])\n    end\n\n    it 'renders the body' do\n      expect(mail.body.encoded).to match(\"Hello #{user.name}\")\n    end\n  end\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"This ensures your mailer methods generate emails with the intended headers and content."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(36672);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);