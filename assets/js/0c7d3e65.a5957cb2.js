"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[26098],{65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var i=r(36672);const a={},d=i.createContext(a);function s(e){const n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(d.Provider,{value:n},e.children)}},68714:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rails/middleware/beginner/cors_middleware","title":"cors_middleware","description":"\ud83c\udf10 Handling CORS with rack-cors Middleware","source":"@site/docs/rails/middleware/beginner/cors_middleware.md","sourceDirName":"rails/middleware/beginner","slug":"/rails/middleware/beginner/cors_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/cors_middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/beginner/cors_middleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"response_timing_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/response_timing_middleware"},"next":{"title":"custom_middleware_setup","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/custom_middleware_setup"}}');var a=r(23420),d=r(65404);const s={},t=void 0,o={},c=[{value:"\ud83c\udf10 Handling CORS with rack-cors Middleware",id:"-handling-cors-with-rack-cors-middleware",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-handling-cors-with-rack-cors-middleware",children:"\ud83c\udf10 Handling CORS with rack-cors Middleware"}),"\n",(0,a.jsxs)(n.p,{children:["To safely allow cross-origin requests (e.g., from your front-end at a different domain), use the ",(0,a.jsx)(n.code,{children:"rack-cors"})," gem. Configure it in Rails to define which origins and HTTP methods are permitted."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'rack-cors'\n\n# config/application.rb\nmodule YourApp\n  class Application < Rails::Application\n    # Insert CORS middleware at the top\n    config.middleware.insert_before 0, Rack::Cors do\n      allow do\n        origins 'https://example.com'\n        resource '/api/*',\n                 headers: :any,\n                 methods: [:get, :post, :put, :delete, :options]\n      end\n    end\n  end\nend\n\n# Now your API routes under /api will accept requests from example.com\n"})})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);