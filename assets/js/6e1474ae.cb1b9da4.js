"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77004],{49832:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>p});const c=JSON.parse('{"id":"gems/rspec/advanced/monkey_patch_rspec_dsl","title":"monkey_patch_rspec_dsl","description":"\ud83d\udc12 Safely Monkey-Patch RSpec DSL for Custom Syntax","source":"@site/docs/gems/rspec/advanced/monkey_patch_rspec_dsl.md","sourceDirName":"gems/rspec/advanced","slug":"/gems/rspec/advanced/monkey_patch_rspec_dsl","permalink":"/keep-being-human-dev/docs/gems/rspec/advanced/monkey_patch_rspec_dsl","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/advanced/monkey_patch_rspec_dsl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"let_lazy_loaded_dependencies","permalink":"/keep-being-human-dev/docs/gems/rspec/advanced/let_lazy_loaded_dependencies"},"next":{"title":"profiling_slow_specs","permalink":"/keep-being-human-dev/docs/gems/rspec/advanced/profiling_slow_specs"}}');var t=s(23420),o=s(65404);const a={},d=void 0,r={},p=[{value:"\ud83d\udc12 Safely Monkey-Patch RSpec DSL for Custom Syntax",id:"-safely-monkey-patch-rspec-dsl-for-custom-syntax",level:2}];function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-safely-monkey-patch-rspec-dsl-for-custom-syntax",children:"\ud83d\udc12 Safely Monkey-Patch RSpec DSL for Custom Syntax"}),"\n",(0,t.jsx)(n.p,{children:"You can extend RSpec\u2019s DSL by redefining core methods or adding new ones, but ensure you isolate your changes to avoid conflicts. Wrap patches in modules and include them selectively via metadata, maintaining clarity and preventing global side effects."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# spec/support/monkey_patches/focus_helpers.rb\nmodule FocusHelpers\n  def focused_it(description, &block)\n    it description, :focus do\n      instance_exec(&block)\n    end\n  end\nend\n\nRSpec.configure do |config|\n  config.extend FocusHelpers, focused: true\nend\n\n# Usage in spec\nRSpec.describe 'Feature X', :focused do\n  focused_it 'only runs this example' do\n    expect(1 + 1).to eq(2)\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var c=s(36672);const t={},o=c.createContext(t);function a(e){const n=c.useContext(o);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),c.createElement(o.Provider,{value:n},e.children)}}}]);