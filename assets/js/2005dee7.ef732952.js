"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13021],{9858:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/secrets_and_credentials/advanced/nested_credentials_access","title":"nested_credentials_access","description":"\ud83e\udde9 Organize and Access Nested Credentials","source":"@site/docs/rails/secrets_and_credentials/advanced/nested_credentials_access.md","sourceDirName":"rails/secrets_and_credentials/advanced","slug":"/rails/secrets_and_credentials/advanced/nested_credentials_access","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/advanced/nested_credentials_access","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/secrets_and_credentials/advanced/nested_credentials_access.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"environment_specific_credentials","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/advanced/environment_specific_credentials"},"next":{"title":"accessing_credentials_in_code","permalink":"/keep-being-human-dev/docs/rails/secrets_and_credentials/beginner/accessing_credentials_in_code"}}');var a=n(23420),r=n(65404);const c={},d=void 0,i={},o=[{value:"\ud83e\udde9 Organize and Access Nested Credentials",id:"-organize-and-access-nested-credentials",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-organize-and-access-nested-credentials",children:"\ud83e\udde9 Organize and Access Nested Credentials"}),"\n",(0,a.jsxs)(s.p,{children:["For complex apps, store structured secrets using nested YAML in your credentials file. This keeps related values together and improves readability. You can then use ",(0,a.jsx)(s.code,{children:"dig"})," or symbol keys to retrieve deeply nested data without polluting your environment variables."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"# config/credentials/production.yml.enc\nmailer:\n  smtp:\n    address: smtp.example.com\n    port: 587\n    user_name: user@example.com\n    password: SUPER_SECRET\n"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"# config/initializers/smtp.rb\nsmtp_cfg = Rails.application.credentials.dig(:mailer, :smtp)\nActionMailer::Base.smtp_settings = {\n  address: smtp_cfg[:address],\n  port: smtp_cfg[:port],\n  user_name: smtp_cfg[:user_name],\n  password: smtp_cfg[:password],\n  authentication: :login\n}\n"})})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>d});var t=n(36672);const a={},r=t.createContext(a);function c(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);