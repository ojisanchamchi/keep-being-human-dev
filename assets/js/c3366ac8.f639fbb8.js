"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28676],{65404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(36672);const r={},a=t.createContext(r);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(a.Provider,{value:n},e.children)}},78088:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/classes_and_modules/middle/concern_pattern","title":"concern_pattern","description":"\ud83e\uddf1 Rails-Style Concern Pattern","source":"@site/docs/ruby/classes_and_modules/middle/concern_pattern.md","sourceDirName":"ruby/classes_and_modules/middle","slug":"/ruby/classes_and_modules/middle/concern_pattern","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/concern_pattern","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/middle/concern_pattern.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"class_eval_vs_module_eval","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/class_eval_vs_module_eval"},"next":{"title":"const_missing_autoload","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/const_missing_autoload"}}');var r=s(23420),a=s(65404);const c={},o=void 0,d={},l=[{value:"\ud83e\uddf1 Rails-Style Concern Pattern",id:"-rails-style-concern-pattern",level:2}];function i(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-rails-style-concern-pattern",children:"\ud83e\uddf1 Rails-Style Concern Pattern"}),"\n",(0,r.jsx)(n.p,{children:"Implement modules as concerns to group related methods and callbacks. This keeps your models and controllers cleaner by extracting reusable chunks of logic."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/models/concerns/archivable.rb\nmodule Archivable\n  extend ActiveSupport::Concern\n\n  included do\n    scope :archived, -> { where.not(archived_at: nil) }\n  end\n\n  def archive!\n    update!(archived_at: Time.current)\n  end\nend\n\nclass Document < ApplicationRecord\n  include Archivable\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}}}]);