"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[14326],{20329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/benchmarking/advanced/use_warmup_for_consistent_results","title":"use_warmup_for_consistent_results","description":"\ud83d\udd25 Implement Warmup Phases to Stabilize JIT and Caching Effects","source":"@site/docs/ruby/benchmarking/advanced/use_warmup_for_consistent_results.md","sourceDirName":"ruby/benchmarking/advanced","slug":"/ruby/benchmarking/advanced/use_warmup_for_consistent_results","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/advanced/use_warmup_for_consistent_results","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/advanced/use_warmup_for_consistent_results.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"profile_memory_allocations","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/advanced/profile_memory_allocations"},"next":{"title":"benchmark_bm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/beginner/benchmark_bm"}}');var a=t(23420),s=t(65404);const c={},o=void 0,i={},u=[{value:"\ud83d\udd25 Implement Warmup Phases to Stabilize JIT and Caching Effects",id:"-implement-warmup-phases-to-stabilize-jit-and-caching-effects",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-implement-warmup-phases-to-stabilize-jit-and-caching-effects",children:"\ud83d\udd25 Implement Warmup Phases to Stabilize JIT and Caching Effects"}),"\n",(0,a.jsxs)(n.p,{children:["A warmup phase lets Ruby's VM or any JIT compiler optimize hot code paths before measurement. In ",(0,a.jsx)(n.code,{children:"benchmark-ips"}),", you can adjust warmup duration to ensure caches and branch predictors settle."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark/ips'\n\nBenchmark.ips(warmup: 2, time: 5) do |x|\n  x.report('math sqrt') { Math.sqrt(123.456) }\n  x.report('pow operator') { 123.456**0.5 }\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(36672);const a={},s=r.createContext(a);function c(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);