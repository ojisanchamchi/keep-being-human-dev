"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64348],{65404:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var a=n(36672);const t={},r=a.createContext(t);function i(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:s},e.children)}},86110:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/ranges/expert/using_ranges_as_hash_keys","title":"using_ranges_as_hash_keys","description":"\ud83d\udddd\ufe0f Use Ranges as Hash Keys (and Avoid Pitfalls)","source":"@site/docs/ruby/ranges/expert/using_ranges_as_hash_keys.md","sourceDirName":"ruby/ranges/expert","slug":"/ruby/ranges/expert/using_ranges_as_hash_keys","permalink":"/keep-being-human-dev/docs/ruby/ranges/expert/using_ranges_as_hash_keys","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/ranges/expert/using_ranges_as_hash_keys.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"pattern_matching_with_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/expert/pattern_matching_with_ranges"},"next":{"title":"endless_beginless_ranges","permalink":"/keep-being-human-dev/docs/ruby/ranges/middle/endless_beginless_ranges"}}');var t=n(23420),r=n(65404);const i={},o=void 0,c={},d=[{value:"\ud83d\udddd\ufe0f Use Ranges as Hash Keys (and Avoid Pitfalls)",id:"\ufe0f-use-ranges-as-hash-keys-and-avoid-pitfalls",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"\ufe0f-use-ranges-as-hash-keys-and-avoid-pitfalls",children:"\ud83d\udddd\ufe0f Use Ranges as Hash Keys (and Avoid Pitfalls)"}),"\n",(0,t.jsxs)(s.p,{children:["Ruby allows Range objects as hash keys, but beware: ",(0,t.jsx)(s.code,{children:"hash"})," and ",(0,t.jsx)(s.code,{children:"eql?"})," depend on both endpoints and exclusivity. Two ranges with identical boundaries but different exclusivity are distinct; use ",(0,t.jsx)(s.code,{children:"cover?"})," in your lookup logic to abstract those nuances."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'pricing = {\n  (0..10)   => "$",\n  (11..20)  => "$$",\n  (21...30) => "$$$"\n}\n\ndef price_for(qty, table)\n  # direct lookup fails for exclusivity mismatches\n  entry = table.find { |range, _| range.cover?(qty) }\n  entry&.last\nend\n\nputs price_for(20, pricing)  # => "$$"\n'})})]})}function l(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);