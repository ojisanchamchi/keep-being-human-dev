"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[32757],{30563:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"gems/ransack/expert/complex_arel_ransacker_full_name","title":"complex_arel_ransacker_full_name","description":"\u2699\ufe0f Combine Multiple Columns Using Arel in a Custom Ransacker","source":"@site/docs/gems/ransack/expert/complex_arel_ransacker_full_name.md","sourceDirName":"gems/ransack/expert","slug":"/gems/ransack/expert/complex_arel_ransacker_full_name","permalink":"/keep-being-human-dev/docs/gems/ransack/expert/complex_arel_ransacker_full_name","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/ransack/expert/complex_arel_ransacker_full_name.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sorting_results","permalink":"/keep-being-human-dev/docs/gems/ransack/beginner/sorting_results"},"next":{"title":"dynamic_whitelisting_ransackable_scopes","permalink":"/keep-being-human-dev/docs/gems/ransack/expert/dynamic_whitelisting_ransackable_scopes"}}');var r=a(23420),t=a(65404);const c={},l=void 0,o={},i=[{value:"\u2699\ufe0f Combine Multiple Columns Using Arel in a Custom Ransacker",id:"\ufe0f-combine-multiple-columns-using-arel-in-a-custom-ransacker",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\ufe0f-combine-multiple-columns-using-arel-in-a-custom-ransacker",children:"\u2699\ufe0f Combine Multiple Columns Using Arel in a Custom Ransacker"}),"\n",(0,r.jsxs)(n.p,{children:["Create a composite ",(0,r.jsx)(n.code,{children:"full_name"})," ransacker that concatenates first and last names, normalizes casing, and even strips accents for robust searching. This uses low-level Arel nodes and Postgres\u2019 ",(0,r.jsx)(n.code,{children:"unaccent"})," extension to handle international names seamlessly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  ransacker :normalized_full_name do |parent|\n    fn = Arel::Nodes::NamedFunction\n    concat = Arel::Nodes::InfixOperation.new(\n      '||',\n      parent.table[:first_name],\n      Arel::Nodes::InfixOperation.new('||', fn.new('unaccent', [Arel::Nodes.build_quoted(' ')]), parent.table[:last_name])\n    )\n    fn.new('LOWER', [fn.new('unaccent', [concat])])\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Usage:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# case-insensitive, accent-insensitive search\nUser.ransack(normalized_full_name_eq: 'jos\xe9 silva').result\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>c,x:()=>l});var s=a(36672);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);