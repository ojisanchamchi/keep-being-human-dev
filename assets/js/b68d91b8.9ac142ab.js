"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[53991],{51597:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"gems/vcr/beginner/install_and_configure_vcr","title":"install_and_configure_vcr","description":"\ud83d\udee0\ufe0f Install and Configure VCR","source":"@site/docs/gems/vcr/beginner/install_and_configure_vcr.md","sourceDirName":"gems/vcr/beginner","slug":"/gems/vcr/beginner/install_and_configure_vcr","permalink":"/keep-being-human-dev/docs/gems/vcr/beginner/install_and_configure_vcr","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/vcr/beginner/install_and_configure_vcr.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"basic_cassette_usage","permalink":"/keep-being-human-dev/docs/gems/vcr/beginner/basic_cassette_usage"},"next":{"title":"vcr_custom_persister_and_serializer","permalink":"/keep-being-human-dev/docs/gems/vcr/expert/vcr_custom_persister_and_serializer"}}');var s=r(23420),c=r(65404);const i={},o=void 0,a={},d=[{value:"\ud83d\udee0\ufe0f Install and Configure VCR",id:"\ufe0f-install-and-configure-vcr",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-install-and-configure-vcr",children:"\ud83d\udee0\ufe0f Install and Configure VCR"}),"\n",(0,s.jsxs)(n.p,{children:["VCR records your HTTP interactions to cassette files so you can replay them in tests without hitting real services. Start by adding the ",(0,s.jsx)(n.code,{children:"vcr"})," and ",(0,s.jsx)(n.code,{children:"webmock"})," gems to your ",(0,s.jsx)(n.code,{children:"Gemfile"})," and running ",(0,s.jsx)(n.code,{children:"bundle install"}),". Then configure VCR in your ",(0,s.jsx)(n.code,{children:"spec_helper.rb"})," or ",(0,s.jsx)(n.code,{children:"rails_helper.rb"})," to set the cassette directory and hook into WebMock."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# spec/spec_helper.rb\nrequire 'vcr'\nrequire 'webmock/rspec'\n\nVCR.configure do |config|\n  config.cassette_library_dir = 'spec/vcr_cassettes'  # where cassettes are stored\n  config.hook_into :webmock                         # intercept HTTP with WebMock\n  config.configure_rspec_metadata!                  # enable `:vcr` metadata for RSpec\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(36672);const s={},c=t.createContext(s);function i(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);