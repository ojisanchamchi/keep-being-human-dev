"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38241],{61371:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"rails/console/expert/benchmark_explain_active_record","title":"benchmark_explain_active_record","description":"\ud83d\udd0d Benchmark and Explain ActiveRecord Queries","source":"@site/docs/rails/console/expert/benchmark_explain_active_record.md","sourceDirName":"rails/console/expert","slug":"/rails/console/expert/benchmark_explain_active_record","permalink":"/keep-being-human-dev/docs/rails/console/expert/benchmark_explain_active_record","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/console/expert/benchmark_explain_active_record.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"reload_rails_console","permalink":"/keep-being-human-dev/docs/rails/console/beginner/reload_rails_console"},"next":{"title":"custom_pry_rc_for_rails_console","permalink":"/keep-being-human-dev/docs/rails/console/expert/custom_pry_rc_for_rails_console"}}');var t=r(23420),a=r(65404);const o={},c=void 0,i={},l=[{value:"\ud83d\udd0d Benchmark and Explain ActiveRecord Queries",id:"-benchmark-and-explain-activerecord-queries",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-benchmark-and-explain-activerecord-queries",children:"\ud83d\udd0d Benchmark and Explain ActiveRecord Queries"}),"\n",(0,t.jsxs)(n.p,{children:["When you need to squeeze out extra performance, combine Ruby\u2019s ",(0,t.jsx)(n.code,{children:"Benchmark"})," with ActiveRecord\u2019s ",(0,t.jsx)(n.code,{children:"explain"})," to measure and analyze query plans on the fly. This helps you catch slow joins, missing indexes, and N+1 problems without leaving the console."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\n# Measure wall time for a complex query\nms = (Benchmark.realtime do\n  users = User.includes(:posts, :comments)\n              .where(active: true)\n              .where('posts.created_at > ?', 1.week.ago)\n              .to_a\nend * 1000).round(1)\nputs \"Loaded \x1b[32m#{users.size}\x1b[0m users in #{ms}ms\"\n\n# Print the query plan\nputs User.includes(:posts, :comments)\n         .where(active: true)\n         .where('posts.created_at > ?', 1.week.ago)\n         .explain\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(36672);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);