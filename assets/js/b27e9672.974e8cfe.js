"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68693],{51912:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"rails/performance/advanced/streaming_large_responses","title":"streaming_large_responses","description":"\ud83d\ude80 Streaming Large Responses with ActionController::Live","source":"@site/docs/rails/performance/advanced/streaming_large_responses.md","sourceDirName":"rails/performance/advanced","slug":"/rails/performance/advanced/streaming_large_responses","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/streaming_large_responses","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/advanced/streaming_large_responses.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sql_query_commenting","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/sql_query_commenting"},"next":{"title":"add_database_indexes","permalink":"/keep-being-human-dev/docs/rails/performance/beginner/add_database_indexes"}}');var t=r(23420),a=r(65404);const o={},i=void 0,c={},l=[{value:"\ud83d\ude80 Streaming Large Responses with ActionController::Live",id:"-streaming-large-responses-with-actioncontrollerlive",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-streaming-large-responses-with-actioncontrollerlive",children:"\ud83d\ude80 Streaming Large Responses with ActionController::Live"}),"\n",(0,t.jsxs)(n.p,{children:["For very large payloads (CSV, JSON, logs), streaming avoids loading the entire result set into memory. Include ",(0,t.jsx)(n.code,{children:"ActionController::Live"})," in your controller and write to the response in chunks, closing the stream when done."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'class ExportsController < ApplicationController\n  include ActionController::Live\n\n  def download_csv\n    response.headers["Content-Type"] = "text/csv"\n    response.headers["Content-Disposition"] = "attachment; filename=export.csv"\n\n    csv = CSV.new(response.stream)\n    User.find_each(batch_size: 1000) do |user|\n      csv << [user.id, user.email, user.created_at]\n    end\n  ensure\n    response.stream.close\n  end\nend\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var s=r(36672);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);