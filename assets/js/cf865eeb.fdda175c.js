"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[60577],{65404:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var o=i(36672);const r={},t=o.createContext(r);function a(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(t.Provider,{value:n},e.children)}},90268:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"rails/environments/expert/environment_layering_with_common","title":"environment_layering_with_common","description":"\ud83d\udcbc Layer Environment Configuration with a Shared Common File","source":"@site/docs/rails/environments/expert/environment_layering_with_common.md","sourceDirName":"rails/environments/expert","slug":"/rails/environments/expert/environment_layering_with_common","permalink":"/keep-being-human-dev/docs/rails/environments/expert/environment_layering_with_common","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/environments/expert/environment_layering_with_common.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_environment_switching_middleware","permalink":"/keep-being-human-dev/docs/rails/environments/expert/dynamic_environment_switching_middleware"},"next":{"title":"environment_file_configuration","permalink":"/keep-being-human-dev/docs/rails/environments/middle/environment_file_configuration"}}');var r=i(23420),t=i(65404);const a={},s=void 0,c={},m=[{value:"\ud83d\udcbc Layer Environment Configuration with a Shared Common File",id:"-layer-environment-configuration-with-a-shared-common-file",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-layer-environment-configuration-with-a-shared-common-file",children:"\ud83d\udcbc Layer Environment Configuration with a Shared Common File"}),"\n",(0,r.jsxs)(n.p,{children:["When managing multiple similar environments (e.g. staging, QA, preview), extract shared settings into a ",(0,r.jsx)(n.code,{children:"common.rb"})," and deep\u2011merge per\u2011env overrides. This ensures DRYness and allows you to evolve the common base without copy\u2011pasting."]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"config/environments/common.rb"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'Rails.application.configure do\n  # shared logging\n  config.log_level       = :info\n  config.log_tags        = [:request_id]\n\n  # shared cache store\n  config.cache_store     = :redis_cache_store,\n                         { url: ENV.fetch("REDIS_URL") }\nend\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"config/environments/staging.rb"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'require_relative "common"\n\nRails.application.configure do\n  # deep merge common settings\n  config = Rails.application.config\n  config.environment_variables = config_for(:environment).deep_symbolize_keys\n\n  # staging\u2011only overrides\n  config.log_level = :debug\n  config.action_mailer.perform_deliveries = true\nend\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);