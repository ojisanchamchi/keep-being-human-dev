"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[90970],{55951:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>r,frontMatter:()=>t,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"ruby/classes_and_modules/middle/self_included_hook","title":"self_included_hook","description":"\ud83d\udee0\ufe0f Using self.included for Configuration","source":"@site/docs/ruby/classes_and_modules/middle/self_included_hook.md","sourceDirName":"ruby/classes_and_modules/middle","slug":"/ruby/classes_and_modules/middle/self_included_hook","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/self_included_hook","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/middle/self_included_hook.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"refinements_example","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/refinements_example"},"next":{"title":"singleton_class_methods","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/middle/singleton_class_methods"}}');var o=s(23420),l=s(65404);const t={},a=void 0,i={},c=[{value:"\ud83d\udee0\ufe0f Using <code>self.included</code> for Configuration",id:"\ufe0f-using-selfincluded-for-configuration",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"\ufe0f-using-selfincluded-for-configuration",children:["\ud83d\udee0\ufe0f Using ",(0,o.jsx)(n.code,{children:"self.included"})," for Configuration"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"self.included(base)"})," hook lets a module configure the host class when included. This is useful for adding class methods, setting defaults, or injecting callbacks. Keep the setup logic contained and maintainable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"module Timestampable\n  def self.included(base)\n    base.extend ClassMethods\n    base.before_save :set_timestamp\n  end\n\n  module ClassMethods\n    def before_save(method)\n      @callbacks ||= []\n      @callbacks << method\n    end\n  end\n\n  def set_timestamp\n    self.updated_at = Time.now\n  end\nend\n\nclass Record\n  include Timestampable\nend\n"})})]})}function r(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var d=s(36672);const o={},l=d.createContext(o);function t(e){const n=d.useContext(l);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),d.createElement(l.Provider,{value:n},e.children)}}}]);