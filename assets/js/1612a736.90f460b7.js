"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[3160],{65404:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>c});var a=t(36672);const n={},s=a.createContext(n);function o(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(s.Provider,{value:r},e.children)}},82355:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"ruby/metaprogramming/beginner/attr_accessor_metaprog","title":"attr_accessor_metaprog","description":"\ud83d\udee1\ufe0f Generate Accessors with attr_accessor","source":"@site/docs/ruby/metaprogramming/beginner/attr_accessor_metaprog.md","sourceDirName":"ruby/metaprogramming/beginner","slug":"/ruby/metaprogramming/beginner/attr_accessor_metaprog","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/attr_accessor_metaprog","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/beginner/attr_accessor_metaprog.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"alias_method_usage","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/alias_method_usage"},"next":{"title":"class_eval_usage","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/class_eval_usage"}}');var n=t(23420),s=t(65404);const o={},c=void 0,i={},m=[{value:"\ud83d\udee1\ufe0f Generate Accessors with <code>attr_accessor</code>",id:"\ufe0f-generate-accessors-with-attr_accessor",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h2,{id:"\ufe0f-generate-accessors-with-attr_accessor",children:["\ud83d\udee1\ufe0f Generate Accessors with ",(0,n.jsx)(r.code,{children:"attr_accessor"})]}),"\n",(0,n.jsxs)(r.p,{children:["Ruby\u2019s ",(0,n.jsx)(r.code,{children:"attr_accessor"}),", ",(0,n.jsx)(r.code,{children:"attr_reader"}),", and ",(0,n.jsx)(r.code,{children:"attr_writer"})," are simple metaprogramming shortcuts for defining getter/setter methods. Instead of writing boilerplate, list attribute names and let Ruby auto-generate the methods."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ruby",children:'class User\n  attr_accessor :name, :email\nend\n\nu = User.new\nu.name = "Carol"\nu.email = "carol@example.com"\nputs u.name   # => "Carol"\n'})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);