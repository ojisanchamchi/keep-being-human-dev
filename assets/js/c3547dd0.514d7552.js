"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13207],{65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(36672);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}},69813:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/models/beginner/model_constants","title":"model_constants","description":"\ud83d\udccc Defining Constants for Shared Values","source":"@site/docs/rails/models/beginner/model_constants.md","sourceDirName":"rails/models/beginner","slug":"/rails/models/beginner/model_constants","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_constants","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/beginner/model_constants.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"model_callbacks","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_callbacks"},"next":{"title":"model_custom_queries","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_custom_queries"}}');var o=s(23420),r=s(65404);const a={},i=void 0,d={},l=[{value:"\ud83d\udccc Defining Constants for Shared Values",id:"-defining-constants-for-shared-values",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-defining-constants-for-shared-values",children:"\ud83d\udccc Defining Constants for Shared Values"}),"\n",(0,o.jsx)(n.p,{children:"Store shared, unchanging values (e.g., roles or statuses) as constants in your model to avoid magic strings."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'class User < ApplicationRecord\n  ROLES = %w[admin moderator member].freeze\n\n  validates :role, inclusion: { in: ROLES }\nend\n\n# Usage:\nUser::ROLES  # => ["admin", "moderator", "member"]\n'})}),"\n",(0,o.jsx)(n.p,{children:"Freezing the array prevents accidental modifications at runtime."})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);