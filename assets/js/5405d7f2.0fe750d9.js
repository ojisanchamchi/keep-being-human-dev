"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97298],{10254:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rails/versioning/advanced/paper_trail_advanced_usage","title":"paper_trail_advanced_usage","description":"\ud83d\udd75\ufe0f Advanced Model Versioning with PaperTrail","source":"@site/docs/rails/versioning/advanced/paper_trail_advanced_usage.md","sourceDirName":"rails/versioning/advanced","slug":"/rails/versioning/advanced/paper_trail_advanced_usage","permalink":"/keep-being-human-dev/docs/rails/versioning/advanced/paper_trail_advanced_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/versioning/advanced/paper_trail_advanced_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_api_version_constraints","permalink":"/keep-being-human-dev/docs/rails/versioning/advanced/dynamic_api_version_constraints"},"next":{"title":"serializer_version_selection","permalink":"/keep-being-human-dev/docs/rails/versioning/advanced/serializer_version_selection"}}');var i=a(23420),s=a(65404);const t={},o=void 0,d={},c=[{value:"\ud83d\udd75\ufe0f Advanced Model Versioning with PaperTrail",id:"\ufe0f-advanced-model-versioning-with-papertrail",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-advanced-model-versioning-with-papertrail",children:"\ud83d\udd75\ufe0f Advanced Model Versioning with PaperTrail"}),"\n",(0,i.jsx)(n.p,{children:"Use the PaperTrail gem to capture every change to your ActiveRecord models, enrich version metadata, and perform time-travel queries. This is ideal for audit logs, rollback features, or data comparisons across releases."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'paper_trail', '~> 12.0'\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  has_paper_trail on: [:create, :update, :destroy],\n                  ignore: [:last_sign_in_at],\n                  meta: { changed_by: :current_user_id }\n\n  private\n\n  def current_user_id\n    PaperTrail.request.whodunnit\n  end\nend\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/paper_trail.rb\nPaperTrail.configure do |config|\n  config.track_associations = true\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieve and restore past states:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'user = User.find(42)\n# List all versions\nuser.versions.each do |version|\n  puts "Version #{version.index} at #{version.created_at}: event=#{version.event}, by=#{version.whodunnit}"\nend\n\n# Time-travel reification\npast_user = user.versions.as_of(1.day.ago).reify\nputs past_user.attributes\n'})}),"\n",(0,i.jsx)(n.p,{children:"This setup gives you full auditability, custom metadata for tracing actors, and on\u2011the\u2011fly rollbacks or diffs between any two points in time."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var r=a(36672);const i={},s=r.createContext(i);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);