"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35766],{51048:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/controllers/advanced/jwt_authentication_in_controllers","title":"jwt_authentication_in_controllers","description":"\ud83d\udd12 Secure Controllers with JWT Authentication","source":"@site/docs/rails/controllers/advanced/jwt_authentication_in_controllers.md","sourceDirName":"rails/controllers/advanced","slug":"/rails/controllers/advanced/jwt_authentication_in_controllers","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/jwt_authentication_in_controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/controllers/advanced/jwt_authentication_in_controllers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"controller_testing_shared_examples","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/controller_testing_shared_examples"},"next":{"title":"n_plus_one_query_optimization","permalink":"/keep-being-human-dev/docs/rails/controllers/advanced/n_plus_one_query_optimization"}}');var o=n(23420),a=n(65404);const s={},i=void 0,c={},l=[{value:"\ud83d\udd12 Secure Controllers with JWT Authentication",id:"-secure-controllers-with-jwt-authentication",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-secure-controllers-with-jwt-authentication",children:"\ud83d\udd12 Secure Controllers with JWT Authentication"}),"\n",(0,o.jsx)(t.p,{children:"Use JWT for stateless API authentication. Decode tokens in a base controller filter and set current user accordingly."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"class Api::BaseController < ActionController::API\n  before_action :authenticate_request\n\n  private\n\n  def authenticate_request\n    token = request.headers['Authorization']&.split(' ')&.last\n    payload = JWT.decode(token, Rails.application.secrets.secret_key_base)[0]\n    @current_user = User.find(payload['user_id'])\n  rescue JWT::DecodeError\n    render json: { error: 'Unauthorized' }, status: :unauthorized\n  end\nend\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(36672);const o={},a=r.createContext(o);function s(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);