"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50038],{45582:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/active_record_associations/beginner/eager_loading_associations","title":"eager_loading_associations","description":"\u26a1 Eager Load Associations with includes","source":"@site/docs/rails/active_record_associations/beginner/eager_loading_associations.md","sourceDirName":"rails/active_record_associations/beginner","slug":"/rails/active_record_associations/beginner/eager_loading_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/eager_loading_associations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/beginner/eager_loading_associations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dependent_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/dependent_option"},"next":{"title":"has_and_belongs_to_many_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/beginner/has_and_belongs_to_many_association"}}');var i=n(23420),a=n(65404);const t={},r=void 0,c={},d=[{value:"\u26a1 Eager Load Associations with <code>includes</code>",id:"-eager-load-associations-with-includes",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.h2,{id:"-eager-load-associations-with-includes",children:["\u26a1 Eager Load Associations with ",(0,i.jsx)(s.code,{children:"includes"})]}),"\n",(0,i.jsxs)(s.p,{children:["Use ",(0,i.jsx)(s.code,{children:"includes"})," in queries to avoid N+1 queries when loading associations. It fetches related records in bulk."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"# In controller or scope\nposts = Post.includes(:comments).where(published: true)\nposts.each do |post|\n  puts post.comments.count\nend\n"})}),"\n",(0,i.jsx)(s.p,{children:"This performs two queries\u2014one for posts and one for comments\u2014instead of one per post for its comments."})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>r});var o=n(36672);const i={},a=o.createContext(i);function t(e){const s=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(a.Provider,{value:s},e.children)}}}]);