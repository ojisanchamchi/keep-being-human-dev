"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69733],{65404:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var t=i(36672);const r={},s=t.createContext(r);function a(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(s.Provider,{value:n},e.children)}},66899:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/middleware/beginner/request_logging_middleware","title":"request_logging_middleware","description":"\ud83d\udccb Logging Requests with Middleware","source":"@site/docs/rails/middleware/beginner/request_logging_middleware.md","sourceDirName":"rails/middleware/beginner","slug":"/rails/middleware/beginner/request_logging_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/request_logging_middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/beginner/request_logging_middleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"insert_middleware_position","permalink":"/keep-being-human-dev/docs/rails/middleware/beginner/insert_middleware_position"},"next":{"title":"conditional_asset_pipeline_forking","permalink":"/keep-being-human-dev/docs/rails/middleware/expert/conditional_asset_pipeline_forking"}}');var r=i(23420),s=i(65404);const a={},o=void 0,d={},l=[{value:"\ud83d\udccb Logging Requests with Middleware",id:"-logging-requests-with-middleware",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-logging-requests-with-middleware",children:"\ud83d\udccb Logging Requests with Middleware"}),"\n",(0,r.jsx)(n.p,{children:"You can build a simple logger middleware to track request timings and statuses. This is great for debugging performance bottlenecks without touching controllers. It wraps the downstream call, measures duration, and logs useful info."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# lib/request_logger.rb\nclass RequestLogger\n  def initialize(app)\n    @app = app\n  end\n\n  def call(env)\n    start_time = Time.now\n    status, headers, response = @app.call(env)\n    duration = ((Time.now - start_time) * 1000).round(1)\n    Rails.logger.info \"[RequestLogger] #{env['REQUEST_METHOD']} #{env['PATH_INFO']} -> #{status} (#{duration}ms)\"\n    [status, headers, response]\n  end\nend\n\n# config/application.rb\nmodule YourApp\n  class Application < Rails::Application\n    config.autoload_paths << Rails.root.join('lib')\n    config.middleware.use RequestLogger\n  end\nend\n"})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);