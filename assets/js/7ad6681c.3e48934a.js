"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[54627],{26722:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"ruby/openssl/beginner/generate_rsa_key_pair","title":"generate_rsa_key_pair","description":"\ud83d\udd11 Generate an RSA Key Pair","source":"@site/docs/ruby/openssl/beginner/generate_rsa_key_pair.md","sourceDirName":"ruby/openssl/beginner","slug":"/ruby/openssl/beginner/generate_rsa_key_pair","permalink":"/keep-being-human-dev/docs/ruby/openssl/beginner/generate_rsa_key_pair","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/openssl/beginner/generate_rsa_key_pair.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"create_sha256_digest","permalink":"/keep-being-human-dev/docs/ruby/openssl/beginner/create_sha256_digest"},"next":{"title":"hardware_engine_pkcs11","permalink":"/keep-being-human-dev/docs/ruby/openssl/expert/hardware_engine_pkcs11"}}');var a=r(23420),s=r(65404);const i={},o=void 0,c={},p=[{value:"\ud83d\udd11 Generate an RSA Key Pair",id:"-generate-an-rsa-key-pair",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-generate-an-rsa-key-pair",children:"\ud83d\udd11 Generate an RSA Key Pair"}),"\n",(0,a.jsx)(n.p,{children:"Ruby\u2019s OpenSSL library makes it easy to generate a new RSA key pair for secure communications. A 2048\u2011bit key is a good balance between security and performance for most beginner use cases. You can write the private and public keys directly to files for later use."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'openssl'\n\n# Generate a new 2048-bit RSA key\nkey = OpenSSL::PKey::RSA.new(2048)\n\n# Export and save the private key\nFile.write('private_key.pem', key.to_pem)\n\n# Extract and save the public key\npublic_key = key.public_key\nFile.write('public_key.pem', public_key.to_pem)\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(36672);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);