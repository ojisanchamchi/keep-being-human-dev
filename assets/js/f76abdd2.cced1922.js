"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28669],{53887:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"ruby/benchmarking/advanced/profile_memory_allocations","title":"profile_memory_allocations","description":"\ud83d\udcca Incorporate Memory Allocation Metrics into Your Benchmarks","source":"@site/docs/ruby/benchmarking/advanced/profile_memory_allocations.md","sourceDirName":"ruby/benchmarking/advanced","slug":"/ruby/benchmarking/advanced/profile_memory_allocations","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/advanced/profile_memory_allocations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/advanced/profile_memory_allocations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"disable_gc_for_stable_benchmarks","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/advanced/disable_gc_for_stable_benchmarks"},"next":{"title":"use_warmup_for_consistent_results","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/advanced/use_warmup_for_consistent_results"}}');var t=r(23420),a=r(65404);const c={},i=void 0,s={},l=[{value:"\ud83d\udcca Incorporate Memory Allocation Metrics into Your Benchmarks",id:"-incorporate-memory-allocation-metrics-into-your-benchmarks",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-incorporate-memory-allocation-metrics-into-your-benchmarks",children:"\ud83d\udcca Incorporate Memory Allocation Metrics into Your Benchmarks"}),"\n",(0,t.jsxs)(n.p,{children:["In addition to time, monitoring object allocations helps pinpoint memory bloat. You can capture allocation counts by combining ",(0,t.jsx)(n.code,{children:"GC.stat"})," or using the ",(0,t.jsx)(n.code,{children:"memory_profiler"})," gem before and after your code."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\nrequire 'memory_profiler'\n\nreport = MemoryProfiler.report do\n  10_000.times { Array.new(5) { rand } }\nend\nreport.pretty_print(to_file: 'allocations.txt')\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var o=r(36672);const t={},a=o.createContext(t);function c(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);