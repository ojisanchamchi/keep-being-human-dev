"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85719],{46097:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/arrays/middle/map_compact_chain","title":"map_compact_chain","description":"\ud83c\udfb2 Chaining map and compact to Transform and Clean","source":"@site/docs/ruby/arrays/middle/map_compact_chain.md","sourceDirName":"ruby/arrays/middle","slug":"/ruby/arrays/middle/map_compact_chain","permalink":"/keep-being-human-dev/docs/ruby/arrays/middle/map_compact_chain","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/middle/map_compact_chain.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lazy_enumerators","permalink":"/keep-being-human-dev/docs/ruby/arrays/middle/lazy_enumerators"},"next":{"title":"partition_array","permalink":"/keep-being-human-dev/docs/ruby/arrays/middle/partition_array"}}');var t=n(23420),c=n(65404);const o={},s=void 0,i={},d=[{value:"\ud83c\udfb2 Chaining <code>map</code> and <code>compact</code> to Transform and Clean",id:"-chaining-map-and-compact-to-transform-and-clean",level:2}];function m(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.h2,{id:"-chaining-map-and-compact-to-transform-and-clean",children:["\ud83c\udfb2 Chaining ",(0,t.jsx)(a.code,{children:"map"})," and ",(0,t.jsx)(a.code,{children:"compact"})," to Transform and Clean"]}),"\n",(0,t.jsxs)(a.p,{children:["When transforming arrays, chaining ",(0,t.jsx)(a.code,{children:"map"})," and ",(0,t.jsx)(a.code,{children:"compact"})," allows you to apply a transformation and immediately remove any ",(0,t.jsx)(a.code,{children:"nil"})," results. This avoids creating intermediate arrays with unwanted ",(0,t.jsx)(a.code,{children:"nil"})," elements."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:'data = ["1", "two", "3", "four"]\nnumbers = data\n  .map { |s| Integer(s) rescue nil }\n  .compact\n# => [1, 3]\n'})})]})}function l(e={}){const{wrapper:a}={...(0,c.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>s});var r=n(36672);const t={},c=r.createContext(t);function o(e){const a=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(c.Provider,{value:a},e.children)}}}]);