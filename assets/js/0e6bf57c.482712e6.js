"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80459],{22838:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/models/advanced/composite_primary_keys_usage","title":"composite_primary_keys_usage","description":"\ud83d\udd17 Utilizing Composite Primary Keys","source":"@site/docs/rails/models/advanced/composite_primary_keys_usage.md","sourceDirName":"rails/models/advanced","slug":"/rails/models/advanced/composite_primary_keys_usage","permalink":"/keep-being-human-dev/docs/rails/models/advanced/composite_primary_keys_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/advanced/composite_primary_keys_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bulk_upsert_with_upsert_all","permalink":"/keep-being-human-dev/docs/rails/models/advanced/bulk_upsert_with_upsert_all"},"next":{"title":"custom_attribute_api_types","permalink":"/keep-being-human-dev/docs/rails/models/advanced/custom_attribute_api_types"}}');var n=t(23420),a=t(65404);const r={},o=void 0,c={},l=[{value:"\ud83d\udd17 Utilizing Composite Primary Keys",id:"-utilizing-composite-primary-keys",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"-utilizing-composite-primary-keys",children:"\ud83d\udd17 Utilizing Composite Primary Keys"}),"\n",(0,n.jsxs)(s.p,{children:["Leverage the ",(0,n.jsx)(s.code,{children:"composite_primary_keys"})," gem to handle tables with multi-column primary keys in ActiveRecord. This allows models to work seamlessly with legacy schemas."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ruby",children:"# Gemfile\ngem 'composite_primary_keys'\n\n# app/models/subscription.rb\nclass Subscription < ActiveRecord::Base\n  self.primary_keys = :user_id, :plan_id\n\n  belongs_to :user\n  belongs_to :plan\nend\n\n# Usage\nsub = Subscription.find([42, 7])\nsub.update(active: true)\n"})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var i=t(36672);const n={},a=i.createContext(n);function r(e){const s=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);