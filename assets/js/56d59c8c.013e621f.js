"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11316],{25404:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"gems/sidekiq/expert/sidekiq_tenant_isolation_namespace","title":"sidekiq_tenant_isolation_namespace","description":"\ud83d\udee1\ufe0f Tenant-Isolated Sidekiq Queues with Redis Namespaces","source":"@site/docs/gems/sidekiq/expert/sidekiq_tenant_isolation_namespace.md","sourceDirName":"gems/sidekiq/expert","slug":"/gems/sidekiq/expert/sidekiq_tenant_isolation_namespace","permalink":"/keep-being-human-dev/docs/gems/sidekiq/expert/sidekiq_tenant_isolation_namespace","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/sidekiq/expert/sidekiq_tenant_isolation_namespace.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sidekiq_opentelemetry_middleware","permalink":"/keep-being-human-dev/docs/gems/sidekiq/expert/sidekiq_opentelemetry_middleware"},"next":{"title":"sidekiq_batch_grouping","permalink":"/keep-being-human-dev/docs/gems/sidekiq/middle/sidekiq_batch_grouping"}}');var s=i(23420),a=i(65404);const d={},o=void 0,r={},c=[{value:"\ud83d\udee1\ufe0f Tenant-Isolated Sidekiq Queues with Redis Namespaces",id:"\ufe0f-tenant-isolated-sidekiq-queues-with-redis-namespaces",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-tenant-isolated-sidekiq-queues-with-redis-namespaces",children:"\ud83d\udee1\ufe0f Tenant-Isolated Sidekiq Queues with Redis Namespaces"}),"\n",(0,s.jsx)(n.p,{children:"In multi-tenant architectures you can isolate Sidekiq data by using Redis namespaces per tenant. This ensures no cross-tenant data bleed and allows independent scaling and purging."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'redis-namespace'\n\n# config/initializers/sidekiq.rb\nSidekiq.configure_server do |config|\n  tenant_id = ENV.fetch('CURRENT_TENANT')\n  config.redis = { url: ENV['REDIS_URL'], namespace: \"sidekiq:#{tenant_id}\" }\nend\n\nSidekiq.configure_client do |config|\n  tenant_id = ENV.fetch('CURRENT_TENANT')\n  config.redis = { url: ENV['REDIS_URL'], namespace: \"sidekiq:#{tenant_id}\" }\nend\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var t=i(36672);const s={},a=t.createContext(s);function d(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);