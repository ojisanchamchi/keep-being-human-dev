"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50355],{4519:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"ruby/classes_and_modules/advanced/forwardable_mixin","title":"forwardable_mixin","description":"\ud83d\udd17 Delegation with the Forwardable Module","source":"@site/docs/ruby/classes_and_modules/advanced/forwardable_mixin.md","sourceDirName":"ruby/classes_and_modules/advanced","slug":"/ruby/classes_and_modules/advanced/forwardable_mixin","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/forwardable_mixin","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/advanced/forwardable_mixin.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"extend_class_methods_on_include","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/extend_class_methods_on_include"},"next":{"title":"freeze_module","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/advanced/freeze_module"}}');var t=d(23420),s=d(65404);const r={},o=void 0,l={},i=[{value:"\ud83d\udd17 Delegation with the <code>Forwardable</code> Module",id:"-delegation-with-the-forwardable-module",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"-delegation-with-the-forwardable-module",children:["\ud83d\udd17 Delegation with the ",(0,t.jsx)(n.code,{children:"Forwardable"})," Module"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Forwardable"})," lets you delegate selected methods to an internal object cleanly, avoiding boilerplate forwarding methods."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'require \'forwardable\'\n\nmodule Trackable\n  extend Forwardable\n  def_delegators :@delegatee, :start, :stop\n\n  def initialize(delegatee)\n    @delegatee = delegatee\n  end\nend\n\nclass Engine\n  def start; puts "Engine started" end\n  def stop;  puts "Engine stopped"  end\nend\n\nclass Vehicle\n  include Trackable\nend\n\nVehicle.new(Engine.new).start # => "Engine started"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"def_delegators"})," for multiple methods or ",(0,t.jsx)(n.code,{children:"def_delegator"})," for single ones."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,n,d)=>{d.d(n,{R:()=>r,x:()=>o});var a=d(36672);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);