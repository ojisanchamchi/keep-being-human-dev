"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[10998],{34821:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/uri/middle/merging_and_resolving_relative_uris","title":"merging_and_resolving_relative_uris","description":"\ud83d\udd00 Merging and Resolving Relative URIs","source":"@site/docs/ruby/uri/middle/merging_and_resolving_relative_uris.md","sourceDirName":"ruby/uri/middle","slug":"/ruby/uri/middle/merging_and_resolving_relative_uris","permalink":"/keep-being-human-dev/docs/ruby/uri/middle/merging_and_resolving_relative_uris","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/uri/middle/merging_and_resolving_relative_uris.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"constructing_uris_with_encoding","permalink":"/keep-being-human-dev/docs/ruby/uri/middle/constructing_uris_with_encoding"},"next":{"title":"parsing_modifying_query_params","permalink":"/keep-being-human-dev/docs/ruby/uri/middle/parsing_modifying_query_params"}}');var s=i(23420),t=i(65404);const a={},o=void 0,l={},d=[{value:"\ud83d\udd00 Merging and Resolving Relative URIs",id:"-merging-and-resolving-relative-uris",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-merging-and-resolving-relative-uris",children:"\ud83d\udd00 Merging and Resolving Relative URIs"}),"\n",(0,s.jsxs)(n.p,{children:["Ruby\u2019s ",(0,s.jsx)(n.code,{children:"URI"})," library can resolve relative paths against a base URI using ",(0,s.jsx)(n.code,{children:"URI#merge"})," or the ",(0,s.jsx)(n.code,{children:"URI.join"})," helper. This is handy for assembling endpoints or navigating through API link relations without manual string concatenation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"require 'uri'\n\nbase = URI('https://api.example.com/v1/')\n# Using merge\nfull = base.merge('users/123?include=details')\nputs full.to_s\n# => \"https://api.example.com/v1/users/123?include=details\"\n\n# Using join (handles leading/trailing slashes)\njoined = URI.join('https://api.example.com/v1', '/projects/456/')\nputs joined.to_s\n# => \"https://api.example.com/v1/projects/456/\"\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(36672);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);