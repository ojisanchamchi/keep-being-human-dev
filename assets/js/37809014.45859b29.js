"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[56569],{16386:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"gems/rspec/custom_matchers/middle/custom_failure_messages","title":"custom_failure_messages","description":"\ud83d\udeab Enhancing Failure Messages","source":"@site/docs/gems/rspec/custom_matchers/middle/custom_failure_messages.md","sourceDirName":"gems/rspec/custom_matchers/middle","slug":"/gems/rspec/custom_matchers/middle/custom_failure_messages","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/custom_failure_messages","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/custom_matchers/middle/custom_failure_messages.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"chained_custom_matcher","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/chained_custom_matcher"},"next":{"title":"parameterized_range_matcher","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/middle/parameterized_range_matcher"}}');var a=t(23420),c=t(65404);const r={},o=void 0,i={},u=[{value:"\ud83d\udeab Enhancing Failure Messages",id:"-enhancing-failure-messages",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-enhancing-failure-messages",children:"\ud83d\udeab Enhancing Failure Messages"}),"\n",(0,a.jsxs)(s.p,{children:["By customizing both positive and negative failure messages, you provide clearer test output. Use ",(0,a.jsx)(s.code,{children:"failure_message"})," and ",(0,a.jsx)(s.code,{children:"failure_message_when_negated"})," hooks:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:'RSpec::Matchers.define :be_even do\n  match do |actual|\n    actual.even?\n  end\n\n  failure_message do |actual|\n    "expected #{actual} to be even, but it was odd"\n  end\n\n  failure_message_when_negated do |actual|\n    "expected #{actual} not to be even, but it was"\n  end\nend\n'})}),"\n",(0,a.jsx)(s.p,{children:"Usage:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"expect(4).to be_even           # passes\nexpect(3).to be_even           # failure: expected 3 to be even, but it was odd\nexpect(4).not_to be_even       # failure: expected 4 not to be even, but it was\n"})})]})}function m(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>o});var n=t(36672);const a={},c=n.createContext(a);function r(e){const s=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);