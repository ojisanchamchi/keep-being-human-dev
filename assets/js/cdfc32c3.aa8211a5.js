"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[57794],{24297:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rails/testing/beginner/controller_request_spec","title":"controller_request_spec","description":"\ud83d\udea6 Testing Controller Actions with Request Specs","source":"@site/docs/rails/testing/beginner/controller_request_spec.md","sourceDirName":"rails/testing/beginner","slug":"/rails/testing/beginner/controller_request_spec","permalink":"/keep-being-human-dev/docs/rails/testing/beginner/controller_request_spec","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/beginner/controller_request_spec.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"testprof_factorydoctor_integration","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/testprof_factorydoctor_integration"},"next":{"title":"factorybot_basics","permalink":"/keep-being-human-dev/docs/rails/testing/beginner/factorybot_basics"}}');var r=s(23420),o=s(65404);const c={},i=void 0,a={},l=[{value:"\ud83d\udea6 Testing Controller Actions with Request Specs",id:"-testing-controller-actions-with-request-specs",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-testing-controller-actions-with-request-specs",children:"\ud83d\udea6 Testing Controller Actions with Request Specs"}),"\n",(0,r.jsxs)(t.p,{children:["Rails request specs let you simulate HTTP calls. Create a file under ",(0,r.jsx)(t.code,{children:"spec/requests"})," and use ",(0,r.jsx)(t.code,{children:"get"}),", ",(0,r.jsx)(t.code,{children:"post"}),", etc., to test endpoints and responses."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# spec/requests/articles_request_spec.rb\nRSpec.describe \"Articles\", type: :request do\n  describe \"GET /articles\" do\n    it 'returns a successful response' do\n      get '/articles'\n      expect(response).to have_http_status(:ok)\n    end\n  end\n\n  describe \"POST /articles\" do\n    it 'creates a new article' do\n      post '/articles', params: { article: { title: 'Hello', body: 'World' } }\n      expect(response).to have_http_status(:created)\n      expect(JSON.parse(response.body)['title']).to eq('Hello')\n    end\n  end\nend\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>i});var n=s(36672);const r={},o=n.createContext(r);function c(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);