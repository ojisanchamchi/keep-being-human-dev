"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12386],{65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(36672);const c={},a=t.createContext(c);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(a.Provider,{value:n},e.children)}},88150:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/exceptions/advanced/custom_exception_hierarchy","title":"custom_exception_hierarchy","description":"\ud83d\udee0\ufe0f Custom Exception Hierarchy","source":"@site/docs/ruby/exceptions/advanced/custom_exception_hierarchy.md","sourceDirName":"ruby/exceptions/advanced","slug":"/ruby/exceptions/advanced/custom_exception_hierarchy","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/custom_exception_hierarchy","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/exceptions/advanced/custom_exception_hierarchy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tally_element_counts","permalink":"/keep-being-human-dev/docs/ruby/enumerables/middle/tally_element_counts"},"next":{"title":"exception_cause_chaining","permalink":"/keep-being-human-dev/docs/ruby/exceptions/advanced/exception_cause_chaining"}}');var c=r(23420),a=r(65404);const s={},o=void 0,i={},u=[{value:"\ud83d\udee0\ufe0f Custom Exception Hierarchy",id:"\ufe0f-custom-exception-hierarchy",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"\ufe0f-custom-exception-hierarchy",children:"\ud83d\udee0\ufe0f Custom Exception Hierarchy"}),"\n",(0,c.jsx)(n.p,{children:"Define a clear hierarchy of domain-specific exceptions by subclassing StandardError. This lets you rescue granular errors without catching unrelated issues and improves maintainability. Organize exceptions by grouping them under a common base class and override messages or add attributes where needed."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:'module Payments\n  class Error < StandardError; end\n  class TransactionError < Error; end\n  class InsufficientFunds < TransactionError; end\n  class CurrencyMismatch < TransactionError; end\nend\n\nbegin\n  # some payment logic\n  raise Payments::InsufficientFunds, "Account balance too low"\nrescue Payments::TransactionError => e\n  logger.error("Payment failed: #{e.class} - #{e.message}")\nend\n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);