"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29476],{65404:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var s=r(36672);const n={},a=s.createContext(n);function i(e){const t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},73592:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"rails/active_record/expert/virtual_attributes_custom_types","title":"virtual_attributes_custom_types","description":"\ud83e\udde9 Virtual Attributes with Custom Types","source":"@site/docs/rails/active_record/expert/virtual_attributes_custom_types.md","sourceDirName":"rails/active_record/expert","slug":"/rails/active_record/expert/virtual_attributes_custom_types","permalink":"/keep-being-human-dev/docs/rails/active_record/expert/virtual_attributes_custom_types","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/expert/virtual_attributes_custom_types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sql_window_functions","permalink":"/keep-being-human-dev/docs/rails/active_record/expert/sql_window_functions"},"next":{"title":"arel_complex_queries","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/arel_complex_queries"}}');var n=r(23420),a=r(65404);const i={},o=void 0,c={},u=[{value:"\ud83e\udde9 Virtual Attributes with Custom Types",id:"-virtual-attributes-with-custom-types",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-virtual-attributes-with-custom-types",children:"\ud83e\udde9 Virtual Attributes with Custom Types"}),"\n",(0,n.jsx)(t.p,{children:"Create custom ActiveModel::Type classes to handle complex JSON structures or encryption transparently. This approach centralizes serialization logic."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"class JsonbType < ActiveModel::Type::Value\n  def cast(value)\n    case value\n    when String then JSON.parse(value)\n    else value\n    end\n  end\n\n  def serialize(value)\n    value.to_json\n  end\nend\n\n# In model\nevent_store :metadata, JsonbType.new\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);