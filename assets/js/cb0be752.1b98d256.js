"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[50983],{65404:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var r=t(36672);const o={},i=r.createContext(o);function d(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(i.Provider,{value:n},e.children)}},94484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/metaprogramming/expert/unbound_method_rebinding","title":"unbound_method_rebinding","description":"\ud83d\udd04 UnboundMethod Rebinding for Context Switching","source":"@site/docs/ruby/metaprogramming/expert/unbound_method_rebinding.md","sourceDirName":"ruby/metaprogramming/expert","slug":"/ruby/metaprogramming/expert/unbound_method_rebinding","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/unbound_method_rebinding","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/expert/unbound_method_rebinding.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"scoped_monkey_patching_with_refinements","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/scoped_monkey_patching_with_refinements"},"next":{"title":"alias_method_wrapping","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/alias_method_wrapping"}}');var o=t(23420),i=t(65404);const d={},a=void 0,s={},u=[{value:"\ud83d\udd04 UnboundMethod Rebinding for Context Switching",id:"-unboundmethod-rebinding-for-context-switching",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-unboundmethod-rebinding-for-context-switching",children:"\ud83d\udd04 UnboundMethod Rebinding for Context Switching"}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"UnboundMethod"})," to extract a method from one class or module and bind it to another object at runtime. This approach is useful for dynamic behavior swapping or mix-in replacement without inheritance."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'module Greeter\n  def greet\n    "Hello, #{name}!"\n  end\nend\n\nclass Person\n  attr_accessor :name\n  def initialize(name); @name = name; end\nend\n\n# Extract and rebind\num = Greeter.instance_method(:greet)\nperson = Person.new(\'Alice\')\nbound = um.bind(person)\nputs bound.call     # => "Hello, Alice!"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);