"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[79513],{53719:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/encryption/beginner/active_record_encryption","title":"active_record_encryption","description":"\ud83d\udee1\ufe0f Use Active Record Encryption (Rails\xa07+)","source":"@site/docs/rails/encryption/beginner/active_record_encryption.md","sourceDirName":"rails/encryption/beginner","slug":"/rails/encryption/beginner/active_record_encryption","permalink":"/keep-being-human-dev/docs/rails/encryption/beginner/active_record_encryption","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/encryption/beginner/active_record_encryption.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rotate_encryption_keys","permalink":"/keep-being-human-dev/docs/rails/encryption/advanced/rotate_encryption_keys"},"next":{"title":"message_encryptor_basics","permalink":"/keep-being-human-dev/docs/rails/encryption/beginner/message_encryptor_basics"}}');var c=r(23420),s=r(65404);const i={},o=void 0,a={},d=[{value:"\ud83d\udee1\ufe0f Use Active Record Encryption (Rails\xa07+)",id:"\ufe0f-use-active-record-encryption-rails7",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"\ufe0f-use-active-record-encryption-rails7",children:"\ud83d\udee1\ufe0f Use Active Record Encryption (Rails\xa07+)"}),"\n",(0,c.jsxs)(n.p,{children:["Rails\xa07 ships with built\u2011in model\u2010level encryption. After setting ",(0,c.jsx)(n.code,{children:"config.active_record.encryption.primary_key"})," (in ",(0,c.jsx)(n.code,{children:"credentials"})," or env vars), simply declare encrypted attributes:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  encrypts :ssn\nend\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Run a migration to store encrypted data (types ",(0,c.jsx)(n.code,{children:":binary"}),"):"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"class AddEncryptedSsnToUsers < ActiveRecord::Migration[7.0]\n  def change\n    add_column :users, :encrypted_ssn, :binary\n  end\nend\n"})}),"\n",(0,c.jsx)(n.p,{children:"Now Rails will automatically encrypt on write and decrypt on read:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"user = User.create!(ssn: '123-45-6789')\nuser.encrypted_ssn           # => 0xAFB34D...\nuser.ssn                     # => \"123-45-6789\"\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(36672);const c={},s=t.createContext(c);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);