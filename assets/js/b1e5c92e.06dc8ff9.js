"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[24321],{12328:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ruby/serialization/middle/customizing_to_json_example","title":"customizing_to_json_example","description":"\ud83d\udca1 Customize to_json for Selective Attributes","source":"@site/docs/ruby/serialization/middle/customizing_to_json_example.md","sourceDirName":"ruby/serialization/middle","slug":"/ruby/serialization/middle/customizing_to_json_example","permalink":"/keep-being-human-dev/docs/ruby/serialization/middle/customizing_to_json_example","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/serialization/middle/customizing_to_json_example.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"active_model_serializer_example","permalink":"/keep-being-human-dev/docs/ruby/serialization/middle/active_model_serializer_example"},"next":{"title":"using_oj_for_high_performance","permalink":"/keep-being-human-dev/docs/ruby/serialization/middle/using_oj_for_high_performance"}}');var o=i(23420),s=i(65404);const r={},a=void 0,l={},c=[{value:"\ud83d\udca1 Customize to_json for Selective Attributes",id:"-customize-to_json-for-selective-attributes",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-customize-to_json-for-selective-attributes",children:"\ud83d\udca1 Customize to_json for Selective Attributes"}),"\n",(0,o.jsxs)(t.p,{children:["Rails\u2019 built\u2011in ",(0,o.jsx)(t.code,{children:"to_json"})," lets you filter out sensitive fields and include related objects without writing manual loops. You can pass ",(0,o.jsx)(t.code,{children:":only"}),", ",(0,o.jsx)(t.code,{children:":except"})," and ",(0,o.jsx)(t.code,{children:":include"})," options to tailor the JSON payload to your API\u2019s needs."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"# Fetch a user and only serialize id, name, email, and their posts' titles\nuser = User.find(1)\njson = user.to_json(\n  only: [:id, :name, :email],\n  include: {\n    posts: { only: [:id, :title] }\n  }\n)\nputs json\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(36672);const o={},s=n.createContext(o);function r(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);