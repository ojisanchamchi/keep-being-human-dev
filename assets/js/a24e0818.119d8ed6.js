"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42380],{26578:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"rails/mailers/middle/customizing_layouts","title":"customizing_layouts","description":"\ud83c\udfa8 Customize Mailer Layouts","source":"@site/docs/rails/mailers/middle/customizing_layouts.md","sourceDirName":"rails/mailers/middle","slug":"/rails/mailers/middle/customizing_layouts","permalink":"/keep-being-human-dev/docs/rails/mailers/middle/customizing_layouts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/mailers/middle/customizing_layouts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"background_delivery_active_job","permalink":"/keep-being-human-dev/docs/rails/mailers/middle/background_delivery_active_job"},"next":{"title":"default_url_options","permalink":"/keep-being-human-dev/docs/rails/mailers/middle/default_url_options"}}');var n=s(23420),t=s(65404);const r={},l=void 0,o={},u=[{value:"\ud83c\udfa8 Customize Mailer Layouts",id:"-customize-mailer-layouts",level:2}];function c(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"-customize-mailer-layouts",children:"\ud83c\udfa8 Customize Mailer Layouts"}),"\n",(0,n.jsxs)(a.p,{children:["By default, Rails mailers use ",(0,n.jsx)(a.code,{children:"app/views/layouts/mailer.html.erb"}),". You can define custom layouts per mailer or per action to share wrapping styles and partials across emails. This helps maintain consistent branding and DRY up your templates."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"# app/mailers/user_mailer.rb\nclass UserMailer < ApplicationMailer\n  layout 'notification'  # uses app/views/layouts/notification.html.erb\n\n  def welcome_email(user)\n    @user = user\n    mail(to: @user.email, subject: 'Welcome!')\n  end\nend\n"})}),"\n",(0,n.jsx)(a.p,{children:"You can even specify a layout per action:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"class UserMailer < ApplicationMailer\n  layout :choose_layout\n\n  private\n\n  def choose_layout\n    action_name == 'alert' ? 'alert_layout' : 'mailer'\n  end\nend\n"})})]})}function d(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},65404:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>l});var i=s(36672);const n={},t=i.createContext(n);function r(e){const a=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(t.Provider,{value:a},e.children)}}}]);