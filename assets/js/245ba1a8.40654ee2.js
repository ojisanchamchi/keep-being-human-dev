"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94789],{31630:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"ruby/benchmarking/middle/benchmark_bm","title":"benchmark_bm","description":"\ud83d\ude80 Using Benchmark.bm for Basic Measurements","source":"@site/docs/ruby/benchmarking/middle/benchmark_bm.md","sourceDirName":"ruby/benchmarking/middle","slug":"/ruby/benchmarking/middle/benchmark_bm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_bm","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/middle/benchmark_bm.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"memory_and_gc_profiling","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/expert/memory_and_gc_profiling"},"next":{"title":"benchmark_bmbm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_bmbm"}}');var a=r(23420),s=r(65404);const c={},i=void 0,m={},o=[{value:"\ud83d\ude80 Using Benchmark.bm for Basic Measurements",id:"-using-benchmarkbm-for-basic-measurements",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-using-benchmarkbm-for-basic-measurements",children:"\ud83d\ude80 Using Benchmark.bm for Basic Measurements"}),"\n",(0,a.jsxs)(n.p,{children:["Ruby's standard Benchmark module provides the ",(0,a.jsx)(n.code,{children:"bm"})," method to tabulate real, user, and system times for labeled code blocks. This is ideal for quick comparisons across multiple approaches in a single run. You can optionally specify the column width for labels to keep the output aligned."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\nn = 500_000\nBenchmark.bm(10) do |x|\n  x.report('each')    { (1..n).each    { |i| Math.sqrt(i) } }\n  x.report('map')     { (1..n).map     { |i| Math.sqrt(i) } }\n  x.report('collect') { (1..n).collect { |i| Math.sqrt(i) } }\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>i});var t=r(36672);const a={},s=t.createContext(a);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);