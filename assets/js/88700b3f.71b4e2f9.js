"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[6315],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(36672);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},92656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/testing/advanced/property_based_testing_with_rantly","title":"property_based_testing_with_rantly","description":"\ud83c\udfb2 Property\u2011Based Testing with Rantly","source":"@site/docs/rails/testing/advanced/property_based_testing_with_rantly.md","sourceDirName":"rails/testing/advanced","slug":"/rails/testing/advanced/property_based_testing_with_rantly","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/property_based_testing_with_rantly","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/advanced/property_based_testing_with_rantly.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"parallel_test_execution","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/parallel_test_execution"},"next":{"title":"rspec_profile_slow_specs","permalink":"/keep-being-human-dev/docs/rails/testing/advanced/rspec_profile_slow_specs"}}');var s=n(23420),a=n(65404);const i={},o=void 0,c={},d=[{value:"\ud83c\udfb2 Property\u2011Based Testing with Rantly",id:"-propertybased-testing-with-rantly",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-propertybased-testing-with-rantly",children:"\ud83c\udfb2 Property\u2011Based Testing with Rantly"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.code,{children:"rantly"})," and ",(0,s.jsx)(t.code,{children:"rantly-rspec"})," gems to generate randomized inputs and verify invariants across a wide range of cases, catching edge conditions you might miss with example\u2011based specs."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# Gemfile:\ngem 'rantly'\ngem 'rantly-rspec'\n\n# spec/models/order_spec.rb\nrequire 'rantly/rspec_extensions'\n\nRSpec.describe Order, type: :model do\n  property_of { array(size: 10) { integer(0, 100) } }.check { |prices|\n    order = Order.new(prices: prices)\n    expect(order.total).to eq(prices.sum)\n  }\nend\n"})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);