"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9361],{60726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/strings/advanced/regex_match_performance","title":"regex_match_performance","description":"\ud83d\udd0d Use String#match? for Fast Regex Checks","source":"@site/docs/ruby/strings/advanced/regex_match_performance.md","sourceDirName":"ruby/strings/advanced","slug":"/ruby/strings/advanced/regex_match_performance","permalink":"/keep-being-human-dev/docs/ruby/strings/advanced/regex_match_performance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/advanced/regex_match_performance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"percent_quoting_variants","permalink":"/keep-being-human-dev/docs/ruby/strings/advanced/percent_quoting_variants"},"next":{"title":"common_string_methods","permalink":"/keep-being-human-dev/docs/ruby/strings/beginner/common_string_methods"}}');var s=n(23420),a=n(65404);const c={},o=void 0,i={},d=[{value:"\ud83d\udd0d Use String#match? for Fast Regex Checks",id:"-use-stringmatch-for-fast-regex-checks",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-use-stringmatch-for-fast-regex-checks",children:"\ud83d\udd0d Use String#match? for Fast Regex Checks"}),"\n",(0,s.jsxs)(t.p,{children:["Avoid the overhead of creating a MatchData object when you only need to test for a pattern. ",(0,s.jsx)(t.code,{children:"String#match?"})," returns a boolean and skips expensive backreferences handling internally, making it up to 2x faster for simple existence checks."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'text = "The quick brown fox jumps over the lazy dog"\n# slower: allocates MatchData\nexists = !!(text =~ /fox/)   #=> true\n# faster: no allocation\nexists = text.match?(/fox/)  #=> true\n'})})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var r=n(36672);const s={},a=r.createContext(s);function c(e){const t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);