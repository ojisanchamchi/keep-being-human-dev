"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59886],{45640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"gems/view_component/expert/dynamic_slots_composition","title":"dynamic_slots_composition","description":"\ud83c\udfa8 Dynamic Slots and Component Composition","source":"@site/docs/gems/view_component/expert/dynamic_slots_composition.md","sourceDirName":"gems/view_component/expert","slug":"/gems/view_component/expert/dynamic_slots_composition","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/dynamic_slots_composition","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/view_component/expert/dynamic_slots_composition.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"deep_testing_with_matchers","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/deep_testing_with_matchers"},"next":{"title":"hotwire_stimulus_integration","permalink":"/keep-being-human-dev/docs/gems/view_component/expert/hotwire_stimulus_integration"}}');var s=t(23420),i=t(65404);const c={},r=void 0,a={},d=[{value:"\ud83c\udfa8 Dynamic Slots and Component Composition",id:"-dynamic-slots-and-component-composition",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-dynamic-slots-and-component-composition",children:"\ud83c\udfa8 Dynamic Slots and Component Composition"}),"\n",(0,s.jsx)(n.p,{children:"Architect complex UIs by defining dynamic slots that accept hashes, procs, or nested components. This enables theming engines and conditional rendering without branching inside your base component."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'# app/components/card_component.rb\nclass CardComponent < ViewComponent::Base\n  renders_one :header\n  renders_one :body\n  renders_one :footer\n\n  def initialize(theme: :light)\n    @theme = theme\n  end\n\n  def call\n    content_tag :div, class: "card card-#{@theme}" do\n      safe_join([header, body, footer].compact)\n    end\n  end\nend\n\n# Usage in view:\n<%= render CardComponent.new(theme: :dark) do |c| %>\n  <% c.header { content_tag(:h3, "Title") } %>\n  <% c.body   { "Detailed description with <strong>HTML</strong>".html_safe } %>\n  <% c.footer { link_to "Learn more", "/docs", class: "btn" } %>\n<% end %>\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var o=t(36672);const s={},i=o.createContext(s);function c(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);