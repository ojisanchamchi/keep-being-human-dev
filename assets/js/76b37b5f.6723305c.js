"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[84255],{19804:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"ruby/hashes/beginner/iterating_over_hash","title":"iterating_over_hash","description":"\ud83d\udd04 Iterating Over Keys and Values","source":"@site/docs/ruby/hashes/beginner/iterating_over_hash.md","sourceDirName":"ruby/hashes/beginner","slug":"/ruby/hashes/beginner/iterating_over_hash","permalink":"/keep-being-human-dev/docs/ruby/hashes/beginner/iterating_over_hash","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/beginner/iterating_over_hash.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"hash_default_values","permalink":"/keep-being-human-dev/docs/ruby/hashes/beginner/hash_default_values"},"next":{"title":"merging_hashes","permalink":"/keep-being-human-dev/docs/ruby/hashes/beginner/merging_hashes"}}');var t=s(23420),a=s(65404);const i={},o=void 0,c={},h=[{value:"\ud83d\udd04 Iterating Over Keys and Values",id:"-iterating-over-keys-and-values",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-iterating-over-keys-and-values",children:"\ud83d\udd04 Iterating Over Keys and Values"}),"\n",(0,t.jsxs)(n.p,{children:["You can loop through hashes with ",(0,t.jsx)(n.code,{children:"each"}),", ",(0,t.jsx)(n.code,{children:"each_key"}),", or ",(0,t.jsx)(n.code,{children:"each_value"}),". This allows you to process or transform data in your hash easily."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'prices = { apple: 2, banana: 1, cherry: 3 }\n\n# Full iteration\nprices.each do |fruit, cost|\n  puts "#{fruit.capitalize}: $#{cost}"\nend\n\n# Only keys\nprices.each_key { |fruit| puts fruit }\n\n# Only values\nprices.each_value { |cost| puts cost }  \n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(36672);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);