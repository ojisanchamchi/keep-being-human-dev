"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83884],{44099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/models/advanced/custom_attribute_api_types","title":"custom_attribute_api_types","description":"\ud83d\udcbe Creating Virtual Attributes with the Attribute API","source":"@site/docs/rails/models/advanced/custom_attribute_api_types.md","sourceDirName":"rails/models/advanced","slug":"/rails/models/advanced/custom_attribute_api_types","permalink":"/keep-being-human-dev/docs/rails/models/advanced/custom_attribute_api_types","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/advanced/custom_attribute_api_types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"composite_primary_keys_usage","permalink":"/keep-being-human-dev/docs/rails/models/advanced/composite_primary_keys_usage"},"next":{"title":"db_check_constraints_for_validation","permalink":"/keep-being-human-dev/docs/rails/models/advanced/db_check_constraints_for_validation"}}');var n=a(23420),s=a(65404);const r={},o=void 0,c={},d=[{value:"\ud83d\udcbe Creating Virtual Attributes with the Attribute API",id:"-creating-virtual-attributes-with-the-attribute-api",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"-creating-virtual-attributes-with-the-attribute-api",children:"\ud83d\udcbe Creating Virtual Attributes with the Attribute API"}),"\n",(0,n.jsxs)(t.p,{children:["Define custom attribute types for serialization, coercion, and deserialization using the ",(0,n.jsx)(t.code,{children:"attribute"})," API. This is ideal for JSON blobs, encrypted values, or domain-specific types."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# lib/types/utc_datetime.rb\nclass Types::UtcDateTime < ActiveRecord::Type::DateTime\n  def serialize(value)\n    super(value&.utc)\n  end\nend\n\n# app/models/event.rb\nclass Event < ApplicationRecord\n  attribute :start_time, Types::UtcDateTime.new\n  attribute :metadata, :json, default: {}\nend\n\n# Usage\ne = Event.new(start_time: '2024-01-01T12:00:00+02:00')\ne.start_time # => 2024-01-01 10:00:00 UTC\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},65404:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var i=a(36672);const n={},s=i.createContext(n);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);