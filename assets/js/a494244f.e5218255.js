"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[44699],{45755:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/syntax/middle/safe_navigation_operator","title":"safe_navigation_operator","description":"\ud83d\udd0d Using the Safe Navigation Operator","source":"@site/docs/ruby/syntax/middle/safe_navigation_operator.md","sourceDirName":"ruby/syntax/middle","slug":"/ruby/syntax/middle/safe_navigation_operator","permalink":"/keep-being-human-dev/docs/ruby/syntax/middle/safe_navigation_operator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/middle/safe_navigation_operator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"pattern_matching_case_in","permalink":"/keep-being-human-dev/docs/ruby/syntax/middle/pattern_matching_case_in"},"next":{"title":"symbol_to_proc","permalink":"/keep-being-human-dev/docs/ruby/syntax/middle/symbol_to_proc"}}');var r=t(23420),i=t(65404);const o={},s=void 0,c={},d=[{value:"\ud83d\udd0d Using the Safe Navigation Operator",id:"-using-the-safe-navigation-operator",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-using-the-safe-navigation-operator",children:"\ud83d\udd0d Using the Safe Navigation Operator"}),"\n",(0,r.jsxs)(n.p,{children:["The safe navigation operator (",(0,r.jsx)(n.code,{children:"&."}),") lets you call methods on objects that might be ",(0,r.jsx)(n.code,{children:"nil"})," without raising a ",(0,r.jsx)(n.code,{children:"NoMethodError"}),". It returns ",(0,r.jsx)(n.code,{children:"nil"})," if the receiver is ",(0,r.jsx)(n.code,{children:"nil"}),", making chained calls safer and more concise."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'user = nil\n# Without safe navigation, this raises an error:\n# user.name #=> NoMethodError\n\n# With safe navigation:\nuser&.name  #=> nil\n\nuser = OpenStruct.new(name: "Alice")\nuser&.name  #=> "Alice"\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(36672);const r={},i=a.createContext(r);function o(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);