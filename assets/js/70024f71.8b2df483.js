"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[99142],{45965:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"gems/image_processing/expert/custom_mini_magick_operations","title":"custom_mini_magick_operations","description":"\ud83d\udee0\ufe0f Custom MiniMagick Operations","source":"@site/docs/gems/image_processing/expert/custom_mini_magick_operations.md","sourceDirName":"gems/image_processing/expert","slug":"/gems/image_processing/expert/custom_mini_magick_operations","permalink":"/keep-being-human-dev/docs/gems/image_processing/expert/custom_mini_magick_operations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/image_processing/expert/custom_mini_magick_operations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_caching_strategies","permalink":"/keep-being-human-dev/docs/gems/image_processing/expert/advanced_caching_strategies"},"next":{"title":"parallel_processing_pipeline","permalink":"/keep-being-human-dev/docs/gems/image_processing/expert/parallel_processing_pipeline"}}');var s=o(23420),t=o(65404);const r={},c=void 0,a={},m=[{value:"\ud83d\udee0\ufe0f Custom MiniMagick Operations",id:"\ufe0f-custom-minimagick-operations",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-custom-minimagick-operations",children:"\ud83d\udee0\ufe0f Custom MiniMagick Operations"}),"\n",(0,s.jsxs)(n.p,{children:["When you need a bespoke image operation not provided out of the box, you can inject custom MiniMagick commands into your pipeline. This allows you to leverage any ImageMagick feature (like convolution, morphology, or custom color adjustments) while still using the familiar ",(0,s.jsx)(n.code,{children:"image_processing"})," DSL."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'require "image_processing/mini_magick"\n\nmodule CustomProcessors\n  def self.your_custom_filter(img)\n    img.combine_options do |cmd|\n      cmd.contrast\n      cmd.morphology("Convolve", "Diamond:1")\n      cmd.colorspace("Gray")\n    end\n  end\nend\n\nprocessor = ImageProcessing::MiniMagick\n  .source("input.jpg")\n  .loader(page: 0)\n  .custom { |img| CustomProcessors.your_custom_filter(img) }\n  .convert("png")\n  .call\n\nputs "Result saved to ", processor.path\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var i=o(36672);const s={},t=i.createContext(s);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);