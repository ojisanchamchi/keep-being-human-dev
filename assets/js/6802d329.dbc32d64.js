"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15651],{33768:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"rails/helpers/expert/dsl_fluent_helpers","title":"dsl_fluent_helpers","description":"\ud83c\udfa8 Building a Fluent DSL in a Helper Module","source":"@site/docs/rails/helpers/expert/dsl_fluent_helpers.md","sourceDirName":"rails/helpers/expert","slug":"/rails/helpers/expert/dsl_fluent_helpers","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/dsl_fluent_helpers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/helpers/expert/dsl_fluent_helpers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"rails_helper_simple_format","permalink":"/keep-being-human-dev/docs/rails/helpers/beginner/rails_helper_simple_format"},"next":{"title":"include_helpers_in_mailers","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/include_helpers_in_mailers"}}');var r=t(23420),s=t(65404);const i={},a=void 0,d={},o=[{value:"\ud83c\udfa8 Building a Fluent DSL in a Helper Module",id:"-building-a-fluent-dsl-in-a-helper-module",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-building-a-fluent-dsl-in-a-helper-module",children:"\ud83c\udfa8 Building a Fluent DSL in a Helper Module"}),"\n",(0,r.jsx)(n.p,{children:"Encapsulate complex HTML structures in a builder class to provide a fluent, chainable interface. This pattern moves presentation logic into a small DSL, keeping your views expressive and concise."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/helpers/application_helper.rb\nmodule ApplicationHelper\n  def card_builder\n    CardBuilder.new(self)\n  end\n\n  class CardBuilder\n    def initialize(view); @view = view; end\n    def title(text); @title = text; self; end\n    def content(html); @content = html; self; end\n    def to_html\n      @view.content_tag(:div, class: 'card') do\n        @view.concat @view.content_tag(:h3, @title)\n        @view.concat @content\n      end\n    end\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use in views:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-erb",children:"<%= card_builder.title('Welcome').content(link_to('Get Started', signup_path)).to_html %>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var l=t(36672);const r={},s=l.createContext(r);function i(e){const n=l.useContext(s);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);