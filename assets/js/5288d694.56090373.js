"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13287],{65404:(e,a,c)=>{c.d(a,{R:()=>s,x:()=>r});var n=c(36672);const t={},i=n.createContext(t);function s(e){const a=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(i.Provider,{value:a},e.children)}},88486:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"rails/active_record_callbacks/advanced/active_support_callbacks_api","title":"active_support_callbacks_api","description":"\ud83d\udee0 Tip:Callbacks API Directly","source":"@site/docs/rails/active_record_callbacks/advanced/active_support_callbacks_api.md","sourceDirName":"rails/active_record_callbacks/advanced","slug":"/rails/active_record_callbacks/advanced/active_support_callbacks_api","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/active_support_callbacks_api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/advanced/active_support_callbacks_api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"validating_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/validating_associations"},"next":{"title":"around_transaction_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/advanced/around_transaction_callbacks"}}');var t=c(23420),i=c(65404);const s={},r=void 0,l={},o=[{value:"\ud83d\udee0 Tip: Leveraging ActiveSupport::Callbacks API Directly",id:"-tip-leveraging-activesupportcallbacks-api-directly",level:2}];function d(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"-tip-leveraging-activesupportcallbacks-api-directly",children:"\ud83d\udee0 Tip: Leveraging ActiveSupport::Callbacks API Directly"}),"\n",(0,t.jsxs)(a.p,{children:["For ultimate flexibility, include ",(0,t.jsx)(a.code,{children:"ActiveSupport::Callbacks"})," to define and manage callbacks outside ActiveRecord\u2014ideal for POROs or service objects."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:"class EmailPreparation\n  include ActiveSupport::Callbacks\n  define_callbacks :prepare\n\n  set_callback :prepare, :before, :sanitize_content\n  set_callback :prepare, :after, :compress_images\n\n  def call(data)\n    @data = data\n    run_callbacks :prepare do\n      # final assembly\n      send_email\n    end\n  end\n\n  private\n\n  def sanitize_content\n    @data[:body].strip!\n  end\n\n  def compress_images\n    ImageCompressor.compress(@data[:images])\n  end\n\n  def send_email\n    EmailService.deliver(@data)\n  end\nend\n"})}),"\n",(0,t.jsx)(a.p,{children:"This pattern gives you full callback semantics in any Ruby object."})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);