"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[57532],{27783:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/pundit/middle/policy_scope_in_controller","title":"policy_scope_in_controller","description":"\ud83d\udd0d Use policy_scope in Controllers","source":"@site/docs/gems/pundit/middle/policy_scope_in_controller.md","sourceDirName":"gems/pundit/middle","slug":"/gems/pundit/middle/policy_scope_in_controller","permalink":"/keep-being-human-dev/docs/gems/pundit/middle/policy_scope_in_controller","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/pundit/middle/policy_scope_in_controller.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"pundit_rspec_custom_matchers","permalink":"/keep-being-human-dev/docs/gems/pundit/expert/pundit_rspec_custom_matchers"},"next":{"title":"verify_authorization_callbacks","permalink":"/keep-being-human-dev/docs/gems/pundit/middle/verify_authorization_callbacks"}}');var c=o(23420),t=o(65404);const i={},r=void 0,l={},d=[{value:"\ud83d\udd0d Use <code>policy_scope</code> in Controllers",id:"-use-policy_scope-in-controllers",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h2,{id:"-use-policy_scope-in-controllers",children:["\ud83d\udd0d Use ",(0,c.jsx)(n.code,{children:"policy_scope"})," in Controllers"]}),"\n",(0,c.jsxs)(n.p,{children:["Using ",(0,c.jsx)(n.code,{children:"policy_scope"})," ensures you only fetch records the current user is allowed to see. Define a ",(0,c.jsx)(n.code,{children:"Scope"})," class in your policy to centralize filtering logic and avoid leaking unauthorized data."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"class PostsController < ApplicationController\n  def index\n    @posts = policy_scope(Post)\n  end\nend\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ruby",children:"class PostPolicy < ApplicationPolicy\n  class Scope < Scope\n    def resolve\n      if user.admin?\n        scope.all\n      else\n        scope.where(published: true)\n      end\n    end\n  end\nend\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var s=o(36672);const c={},t=s.createContext(c);function i(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);