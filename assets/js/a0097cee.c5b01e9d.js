"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[87601],{65404:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>s});var o=i(36672);const t={},a=o.createContext(t);function c(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(a.Provider,{value:n},e.children)}},71289:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"rails/configuration/advanced/config_for_nested_yaml","title":"config_for_nested_yaml","description":"\ud83d\udee0 Advanced Nested YAML and ERB with config_for","source":"@site/docs/rails/configuration/advanced/config_for_nested_yaml.md","sourceDirName":"rails/configuration/advanced","slug":"/rails/configuration/advanced/config_for_nested_yaml","permalink":"/keep-being-human-dev/docs/rails/configuration/advanced/config_for_nested_yaml","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/configuration/advanced/config_for_nested_yaml.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"conditional_middleware_configuration","permalink":"/keep-being-human-dev/docs/rails/configuration/advanced/conditional_middleware_configuration"},"next":{"title":"dynamic_custom_config_x","permalink":"/keep-being-human-dev/docs/rails/configuration/advanced/dynamic_custom_config_x"}}');var t=i(23420),a=i(65404);const c={},s=void 0,r={},d=[{value:"\ud83d\udee0 Advanced Nested YAML and ERB with <code>config_for</code>",id:"-advanced-nested-yaml-and-erb-with-config_for",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h2,{id:"-advanced-nested-yaml-and-erb-with-config_for",children:["\ud83d\udee0 Advanced Nested YAML and ERB with ",(0,t.jsx)(n.code,{children:"config_for"})]}),"\n",(0,t.jsxs)(n.p,{children:["Rails\u2019 ",(0,t.jsx)(n.code,{children:"config_for"})," method can load complex, environment\u2011aware settings from YAML files that leverage ERB and YAML anchors. This approach allows you to define defaults, environment overrides, and even computed values in one place, avoiding repetitive initializers."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create ",(0,t.jsx)(n.code,{children:"config/service_settings.yml"})," with defaults, anchors, and ERB:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# config/service_settings.yml\ndefaults: &defaults\n  timeout: 5\n  retries: 3\n\nproduction:\n  <<: *defaults\n  endpoint: <%= ENV.fetch("SERVICE_URL") %>/api/v1\n\ndevelopment:\n  <<: *defaults\n  endpoint: "http://localhost:3001/api/v1"\n\ntest:\n  <<: *defaults\n  endpoint: "http://test.local/api/v1"\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["In ",(0,t.jsx)(n.code,{children:"config/application.rb"}),", wire it into ",(0,t.jsx)(n.code,{children:"config.x"}),":"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# config/application.rb\nmodule MyApp\n  class Application < Rails::Application\n    config.x.service = config_for(:service_settings)\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Access in your code:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# app/services/my_service.rb\ntimeout = Rails.configuration.x.service["timeout"]\nendpoint = Rails.configuration.x.service["endpoint"]\n'})})]})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);