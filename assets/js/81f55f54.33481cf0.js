"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49055],{17693:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/middleware/advanced/conditional_middleware_insertion","title":"conditional_middleware_insertion","description":"\u2699\ufe0f Conditional Middleware Insertion","source":"@site/docs/rails/middleware/advanced/conditional_middleware_insertion.md","sourceDirName":"rails/middleware/advanced","slug":"/rails/middleware/advanced/conditional_middleware_insertion","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/conditional_middleware_insertion","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/advanced/conditional_middleware_insertion.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"using_helpers_in_mailers","permalink":"/keep-being-human-dev/docs/rails/mailers/middle/using_helpers_in_mailers"},"next":{"title":"custom_logging_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/custom_logging_middleware"}}');var d=i(23420),t=i(65404);const o={},a=void 0,s={},l=[{value:"\u2699\ufe0f Conditional Middleware Insertion",id:"\ufe0f-conditional-middleware-insertion",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"\ufe0f-conditional-middleware-insertion",children:"\u2699\ufe0f Conditional Middleware Insertion"}),"\n",(0,d.jsxs)(n.p,{children:["Sometimes you only need middleware in specific environments or paths (e.g., monitoring in production). Use ",(0,d.jsx)(n.code,{children:"config.middleware.insert_before"})," or ",(0,d.jsx)(n.code,{children:"insert_after"})," inside environment configs, or wrap registration in a condition to avoid unnecessary overhead."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ruby",children:"# config/environments/production.rb\nif ENV['ENABLE_MONITORING'] == 'true'\n  config.middleware.insert_before 0, Rack::Runtime\n  config.middleware.use Monitoring::RequestTracker\nend\n\n# Alternatively, inject only for API routes in an initializer\nRails.application.config.middleware.insert_after ActionDispatch::Executor do |builder|\n  if Rails.env.production?\n    builder.use ApiRateLimiter, path_prefix: '/api'\n  end\nend\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(36672);const d={},t=r.createContext(d);function o(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);