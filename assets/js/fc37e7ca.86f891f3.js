"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64672],{65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(36672);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},92528:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/metaprogramming/beginner/const_missing_lazy_loading","title":"const_missing_lazy_loading","description":"\ud83c\udfaf Lazy Load Constants with const_missing","source":"@site/docs/ruby/metaprogramming/beginner/const_missing_lazy_loading.md","sourceDirName":"ruby/metaprogramming/beginner","slug":"/ruby/metaprogramming/beginner/const_missing_lazy_loading","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/const_missing_lazy_loading","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/beginner/const_missing_lazy_loading.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"class_inherited_hook","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/class_inherited_hook"},"next":{"title":"define_method_dynamic","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/define_method_dynamic"}}');var i=s(23420),o=s(65404);const a={},r=void 0,c={},d=[{value:"\ud83c\udfaf Lazy Load Constants with <code>const_missing</code>",id:"-lazy-load-constants-with-const_missing",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"-lazy-load-constants-with-const_missing",children:["\ud83c\udfaf Lazy Load Constants with ",(0,i.jsx)(n.code,{children:"const_missing"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"const_missing"})," is triggered when an undefined constant is accessed. You can use it to autoload classes or modules on demand, keeping startup time low and dependencies minimal."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"module AutoLoader\n  def const_missing(name)\n    file = \"./#{name.to_s.downcase}.rb\"\n    require file if File.exist?(file)\n    const_get(name)\n  end\nend\n\nclass MyApp\n  extend AutoLoader\nend\n\n# Accessing MyApp::User triggers require './user.rb'\n# user = MyApp::User.new\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);