"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[99375],{65404:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var a=n(36672);const t={},r=a.createContext(t);function o(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(r.Provider,{value:s},e.children)}},67511:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/metaprogramming/beginner/class_eval_usage","title":"class_eval_usage","description":"\ud83d\udca1 Add Methods to a Class with class_eval","source":"@site/docs/ruby/metaprogramming/beginner/class_eval_usage.md","sourceDirName":"ruby/metaprogramming/beginner","slug":"/ruby/metaprogramming/beginner/class_eval_usage","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/class_eval_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/beginner/class_eval_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"attr_accessor_metaprog","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/attr_accessor_metaprog"},"next":{"title":"class_inherited_hook","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/class_inherited_hook"}}');var t=n(23420),r=n(65404);const o={},c=void 0,i={},l=[{value:"\ud83d\udca1 Add Methods to a Class with <code>class_eval</code>",id:"-add-methods-to-a-class-with-class_eval",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"-add-methods-to-a-class-with-class_eval",children:["\ud83d\udca1 Add Methods to a Class with ",(0,t.jsx)(s.code,{children:"class_eval"})]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"class_eval"})," (or ",(0,t.jsx)(s.code,{children:"module_eval"}),") executes a string or block in the context of a class/module definition. This is useful to inject methods or constants after a class is defined, enabling flexible extensions or plugins."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:'class Person; end\n\nPerson.class_eval do\n  def greet\n    "Hello from #{self.class}!"\n  end\nend\n\np = Person.new\nputs p.greet    # => "Hello from Person!"\n'})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);