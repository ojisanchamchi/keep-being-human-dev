"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[87149],{43222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"rails/active_record_querying/advanced/upsert_all_conflicts","title":"upsert_all_conflicts","description":"\u2b06\ufe0f Use upsert_all with Conflict Targets","source":"@site/docs/rails/active_record_querying/advanced/upsert_all_conflicts.md","sourceDirName":"rails/active_record_querying/advanced","slug":"/rails/active_record_querying/advanced/upsert_all_conflicts","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/upsert_all_conflicts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/advanced/upsert_all_conflicts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"union_relations","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/union_relations"},"next":{"title":"window_functions","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/advanced/window_functions"}}');var s=n(23420),i=n(65404);const a={},c=void 0,o={},l=[{value:"\u2b06\ufe0f Use upsert_all with Conflict Targets",id:"\ufe0f-use-upsert_all-with-conflict-targets",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"\ufe0f-use-upsert_all-with-conflict-targets",children:"\u2b06\ufe0f Use upsert_all with Conflict Targets"}),"\n",(0,s.jsxs)(t.p,{children:["Rails 6+ provides ",(0,s.jsx)(t.code,{children:"upsert_all"})," to batch-insert records and handle conflicts via ",(0,s.jsx)(t.code,{children:"unique_by"}),". This is ideal for high-performance data ingestion without multiple round trips."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"# Bulk insert or update products by SKU\nProduct.upsert_all([\n  {sku: 'A100', name: 'Widget', price: 9.99},\n  {sku: 'B200', name: 'Gadget', price: 19.99}\n], unique_by: :sku)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(36672);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);