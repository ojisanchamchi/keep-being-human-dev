"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9831],{65404:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>r});var s=a(36672);const o={},d=s.createContext(o);function t(e){const n=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(d.Provider,{value:n},e.children)}},93319:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/oop/advanced/modules_as_namespaces_and_mixins","title":"modules_as_namespaces_and_mixins","description":"\ud83e\udde9 Organize Code with Modules as Namespaces and Mixins","source":"@site/docs/ruby/oop/advanced/modules_as_namespaces_and_mixins.md","sourceDirName":"ruby/oop/advanced","slug":"/ruby/oop/advanced/modules_as_namespaces_and_mixins","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/modules_as_namespaces_and_mixins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/advanced/modules_as_namespaces_and_mixins.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_as_proxy","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/method_missing_as_proxy"},"next":{"title":"refinements_for_scoped_patching","permalink":"/keep-being-human-dev/docs/ruby/oop/advanced/refinements_for_scoped_patching"}}');var o=a(23420),d=a(65404);const t={},r=void 0,i={},c=[{value:"\ud83e\udde9 Organize Code with Modules as Namespaces and Mixins",id:"-organize-code-with-modules-as-namespaces-and-mixins",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-organize-code-with-modules-as-namespaces-and-mixins",children:"\ud83e\udde9 Organize Code with Modules as Namespaces and Mixins"}),"\n",(0,o.jsx)(n.p,{children:"Modules in Ruby can serve both as namespaces to prevent constant collisions and as mixins to share behavior across classes. By structuring your modules hierarchically, you can keep your codebase tidy and avoid polluting the global scope."}),"\n",(0,o.jsx)(n.p,{children:"Example of using modules as namespaces:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"module PaymentGateway\n  module Stripe\n    class Client\n      def charge(amount)\n        # implementation\n      end\n    end\n  end\nend\n\n# Usage\ntarget = PaymentGateway::Stripe::Client.new\n"})}),"\n",(0,o.jsx)(n.p,{children:"Mixin behavior across classes:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"module Trackable\n  def track(event)\n    puts \"Tracking \x1b[32m\x1b[0m#{event}\"  # colorized output\n  end\nend\n\nclass Order\n  include Trackable\nend\n\norder = Order.new\norder.track('order_created')\n"})})]})}function l(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);