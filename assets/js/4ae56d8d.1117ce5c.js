"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[31214],{17424:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/authentication_and_authorization/beginner/simple_role_authorization","title":"simple_role_authorization","description":"\ud83c\udfa9 Implement Simple Role-Based Authorization","source":"@site/docs/rails/authentication_and_authorization/beginner/simple_role_authorization.md","sourceDirName":"rails/authentication_and_authorization/beginner","slug":"/rails/authentication_and_authorization/beginner/simple_role_authorization","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/simple_role_authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/beginner/simple_role_authorization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sessions_controller_setup","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/sessions_controller_setup"},"next":{"title":"cancancan_ability_caching_preload","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/expert/cancancan_ability_caching_preload"}}');var r=i(23420),a=i(65404);const o={},s=void 0,l={},c=[{value:"\ud83c\udfa9 Implement Simple Role-Based Authorization",id:"-implement-simple-role-based-authorization",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-implement-simple-role-based-authorization",children:"\ud83c\udfa9 Implement Simple Role-Based Authorization"}),"\n",(0,r.jsxs)(n.p,{children:["For basic authorization, add a ",(0,r.jsx)(n.code,{children:"role"})," attribute to your ",(0,r.jsx)(n.code,{children:"User"})," model and check it in controllers or views. This allows granting admin or other privileges easily."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.code,{children:"role"})," to users (e.g., ",(0,r.jsx)(n.code,{children:":user"})," or ",(0,r.jsx)(n.code,{children:":admin"}),"):"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"rails generate migration AddRoleToUsers role:string\nrails db:migrate\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Set a default role in the model:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"class User < ApplicationRecord\n  has_secure_password\n  after_initialize :set_default_role, if: :new_record?\n\n  def set_default_role\n    self.role ||= 'user'\n  end\n\n  def admin?\n    role == 'admin'\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Restrict access in controllers:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"class Admin::DashboardController < ApplicationController\n  before_action :require_login\n  before_action :require_admin\n\n  private\n\n  def require_admin\n    redirect_to root_path, alert: 'Access denied' unless current_user&.admin?\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var t=i(36672);const r={},a=t.createContext(r);function o(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);