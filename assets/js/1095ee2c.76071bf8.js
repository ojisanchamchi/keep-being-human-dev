"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2457],{65404:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>s});var r=a(36672);const n={},i=r.createContext(n);function o(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},98377:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/arrays/advanced/grouping_with_each_with_object","title":"grouping_with_each_with_object","description":"\ud83c\udff7\ufe0f Dual Grouping with eachwithobject","source":"@site/docs/ruby/arrays/advanced/grouping_with_each_with_object.md","sourceDirName":"ruby/arrays/advanced","slug":"/ruby/arrays/advanced/grouping_with_each_with_object","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/grouping_with_each_with_object","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/advanced/grouping_with_each_with_object.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_uniq","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/custom_uniq"},"next":{"title":"lazy_enumerators","permalink":"/keep-being-human-dev/docs/ruby/arrays/advanced/lazy_enumerators"}}');var n=a(23420),i=a(65404);const o={},s=void 0,c={},u=[{value:"\ud83c\udff7\ufe0f Dual Grouping with <code>each_with_object</code>",id:"\ufe0f-dual-grouping-with-each_with_object",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h2,{id:"\ufe0f-dual-grouping-with-each_with_object",children:["\ud83c\udff7\ufe0f Dual Grouping with ",(0,n.jsx)(t.code,{children:"each_with_object"})]}),"\n",(0,n.jsxs)(t.p,{children:["When you need multiple groupings in one pass, use ",(0,n.jsx)(t.code,{children:"each_with_object"})," to build a hash of arrays or counters. This avoids multiple iterations and keeps the logic in a single traversal for better performance on large datasets."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:'items = %w[apple banana apricot berry avocado]\ngroups = items.each_with_object({ starts_with_a: [], starts_with_b: [] }) do |item, h|\n  key = item.start_with?(\'a\') ? :starts_with_a : :starts_with_b\n  h[key] << item\nend\n# => {starts_with_a: ["apple","apricot","avocado"], starts_with_b: ["banana","berry"]}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);