"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[93708],{11791:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>m,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"ruby/benchmarking/middle/benchmark_realtime","title":"benchmark_realtime","description":"\u23f1\ufe0f Using Benchmark.realtime for Quick Inline Timings","source":"@site/docs/ruby/benchmarking/middle/benchmark_realtime.md","sourceDirName":"ruby/benchmarking/middle","slug":"/ruby/benchmarking/middle/benchmark_realtime","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_realtime","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/middle/benchmark_realtime.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_bmbm","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_bmbm"},"next":{"title":"benchmark_results_formatting","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/middle/benchmark_results_formatting"}}');var i=r(23420),a=r(65404);const s={},m=void 0,c={},o=[{value:"\u23f1\ufe0f Using Benchmark.realtime for Quick Inline Timings",id:"\ufe0f-using-benchmarkrealtime-for-quick-inline-timings",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-using-benchmarkrealtime-for-quick-inline-timings",children:"\u23f1\ufe0f Using Benchmark.realtime for Quick Inline Timings"}),"\n",(0,i.jsxs)(n.p,{children:["When you need a fast, one-off timing without the table layout, ",(0,i.jsx)(n.code,{children:"Benchmark.realtime"})," returns the elapsed time in seconds as a float. It's perfect for measuring small snippets inline or storing the duration in a variable. Combine it with custom output to integrate into scripts or logs."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\nstart_time = Benchmark.realtime do\n  sleep(2)\nend\nputs \"Operation took #{start_time.round(3)}s\"\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>m});var t=r(36672);const i={},a=t.createContext(i);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);