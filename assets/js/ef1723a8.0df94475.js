"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77640],{12648:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>c,contentTitle:()=>n,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/active_record_associations/expert/multi_level_through_alias","title":"multi_level_through_alias","description":"\ud83d\udd17 Multi-level Through Association Aliases","source":"@site/docs/rails/active_record_associations/expert/multi_level_through_alias.md","sourceDirName":"rails/active_record_associations/expert","slug":"/rails/active_record_associations/expert/multi_level_through_alias","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/multi_level_through_alias","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/expert/multi_level_through_alias.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"eager_load_override_select","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/eager_load_override_select"},"next":{"title":"polymorphic_counter_cache","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/polymorphic_counter_cache"}}');var i=a(23420),r=a(65404);const o={},n=void 0,c={},l=[{value:"\ud83d\udd17 Multi-level Through Association Aliases",id:"-multi-level-through-association-aliases",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"-multi-level-through-association-aliases",children:"\ud83d\udd17 Multi-level Through Association Aliases"}),"\n",(0,i.jsxs)(s.p,{children:["You can chain multiple ",(0,i.jsx)(s.code,{children:"has_many :through"})," associations and alias them for readability in large domains. This pattern helps you traverse several join models in one step, improving code clarity and avoiding nested queries."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"class User < ApplicationRecord\n  has_many :memberships\n  has_many :teams, through: :memberships\n  has_many :team_projects, through: :teams, source: :projects, class_name: 'Project'\nend\n\nclass Team < ApplicationRecord\n  has_many :memberships\n  has_many :users, through: :memberships\n  has_many :projects\nend\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},65404:(e,s,a)=>{a.d(s,{R:()=>o,x:()=>n});var t=a(36672);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function n(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);