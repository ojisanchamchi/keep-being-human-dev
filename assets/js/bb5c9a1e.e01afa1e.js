"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[28987],{20060:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/active_record_validations/advanced/json_schema_validation","title":"json_schema_validation","description":"\ud83d\udcdc Validating Serialized JSON with a JSON Schema","source":"@site/docs/rails/active_record_validations/advanced/json_schema_validation.md","sourceDirName":"rails/active_record_validations/advanced","slug":"/rails/active_record_validations/advanced/json_schema_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/advanced/json_schema_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/advanced/json_schema_validation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"i18n_error_messages","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/advanced/i18n_error_messages"},"next":{"title":"multi_attribute_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/advanced/multi_attribute_validation"}}');var t=n(23420),s=n(65404);const r={},o=void 0,c={},d=[{value:"\ud83d\udcdc Validating Serialized JSON with a JSON Schema",id:"-validating-serialized-json-with-a-json-schema",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"-validating-serialized-json-with-a-json-schema",children:"\ud83d\udcdc Validating Serialized JSON with a JSON Schema"}),"\n",(0,t.jsxs)(a.p,{children:["For models that serialize JSON blobs, integrate a JSON Schema validator (e.g., ",(0,t.jsx)(a.code,{children:"json-schema"})," gem) in a custom validation to enforce structure and types."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:"# Gemfile\ngem 'json-schema'\n\n# app/models/service_config.rb\nclass ServiceConfig < ApplicationRecord\n  serialize :settings, JSON\n  validate :settings_must_match_schema\n\n  def settings_must_match_schema\n    schema = Rails.root.join('config', 'schemas', 'service_config.json').read\n    JSON::Validator.fully_validate(JSON.parse(schema), settings).each do |error|\n      errors.add(:settings, error)\n    end\n  end\nend\n"})})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>o});var i=n(36672);const t={},s=i.createContext(t);function r(e){const a=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:a},e.children)}}}]);