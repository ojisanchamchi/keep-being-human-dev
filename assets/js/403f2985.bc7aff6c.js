"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[8946],{26260:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/debugging/expert/byebug_advanced_mastery","title":"byebug_advanced_mastery","description":"\ud83d\udc1e Advanced Byebug Mastery","source":"@site/docs/rails/debugging/expert/byebug_advanced_mastery.md","sourceDirName":"rails/debugging/expert","slug":"/rails/debugging/expert/byebug_advanced_mastery","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/byebug_advanced_mastery","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/debugging/expert/byebug_advanced_mastery.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"binding_of_caller_usage","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/binding_of_caller_usage"},"next":{"title":"custom_exception_pry","permalink":"/keep-being-human-dev/docs/rails/debugging/expert/custom_exception_pry"}}');var a=r(23420),s=r(65404);const i={},o=void 0,d={},c=[{value:"\ud83d\udc1e Advanced Byebug Mastery",id:"-advanced-byebug-mastery",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-advanced-byebug-mastery",children:"\ud83d\udc1e Advanced Byebug Mastery"}),"\n",(0,a.jsxs)(n.p,{children:["Byebug is more than just ",(0,a.jsx)(n.code,{children:"binding.byebug"}),"\u2014you can define conditional breakpoints, navigate frames, and even create custom commands in your ",(0,a.jsx)(n.code,{children:".byebugrc"}),". This tip shows how to set up complex logic, manipulate variables at runtime, and script byebug to automate repetitive debugging tasks."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Place this in .byebugrc in your home directory\n# Set breakpoint at UsersController#index only if current_user.admin?\nbreak app/controllers/users_controller.rb:10 if current_user&.admin?\n\n# Define a custom command to print relevant request info\ndefcmd req_info\nenvironment[:request]&.inspect\nend\n\n# Automatically list local variables when hitting a breakpoint\ndisplay local_variables\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then in your controller:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"def index\n  binding.byebug\n  @users = User.all\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Run the server, hit the route, and byebug will trigger with your scripted commands. Use ",(0,a.jsx)(n.code,{children:"up"}),"/",(0,a.jsx)(n.code,{children:"down"})," to move frames, ",(0,a.jsx)(n.code,{children:"eval"})," to modify state, and ",(0,a.jsx)(n.code,{children:"restart"})," to replay your session logic."]})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(36672);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);