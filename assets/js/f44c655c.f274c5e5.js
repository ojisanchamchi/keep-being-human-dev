"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95917],{65404:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(36672);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},83291:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"ruby/benchmarking/expert/automated_benchmark_reports","title":"automated_benchmark_reports","description":"\ud83d\udee0 Automate Benchmark Suites with Interactive HTML Reports","source":"@site/docs/ruby/benchmarking/expert/automated_benchmark_reports.md","sourceDirName":"ruby/benchmarking/expert","slug":"/ruby/benchmarking/expert/automated_benchmark_reports","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/expert/automated_benchmark_reports","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/expert/automated_benchmark_reports.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_tms_attributes","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/beginner/benchmark_tms_attributes"},"next":{"title":"benchmark_ips_config","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/expert/benchmark_ips_config"}}');var a=r(23420),s=r(65404);const o={},i=void 0,c={},u=[{value:"\ud83d\udee0 Automate Benchmark Suites with Interactive HTML Reports",id:"-automate-benchmark-suites-with-interactive-html-reports",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-automate-benchmark-suites-with-interactive-html-reports",children:"\ud83d\udee0 Automate Benchmark Suites with Interactive HTML Reports"}),"\n",(0,a.jsx)(t.p,{children:"Integrate your benchmark harness into CI to generate versioned HTML dashboards. Use ERB and Chart.js to produce interactive reports for trend analysis and track regressions over time."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"require 'benchmark'\nrequire 'erb'\nrequire 'json'\n\n# Step 1: run benchmarks\nresults = Benchmark.bmbm do |x|\n  x.report('alpha') { alpha_task }\n  x.report('beta')  { beta_task  }\nend\n\n# Step 2: prepare data for chart\nchart_data = results.map { |r| { name: r.label, time: r.real } }\n\n# Step 3: render HTML\ntemplate = ERB.new(File.read('report_template.html.erb'))\nFile.write('bench_report.html', template.result_with_hash(data: chart_data.to_json))\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Then, in your GitHub Actions pipeline, upload ",(0,a.jsx)(t.code,{children:"bench_report.html"})," as an artifact or deploy to GitHub Pages for continuous visibility."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);