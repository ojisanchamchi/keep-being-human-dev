"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[34490],{65404:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>i});var n=r(36672);const t={},o=n.createContext(t);function a(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(o.Provider,{value:s},e.children)}},89099:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ruby/hashes/middle/transform_keys","title":"transform_keys","description":"\ud83d\udddd\ufe0f Transforming Keys with transform_keys","source":"@site/docs/ruby/hashes/middle/transform_keys.md","sourceDirName":"ruby/hashes/middle","slug":"/ruby/hashes/middle/transform_keys","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/transform_keys","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/middle/transform_keys.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"sort_by_key_or_value","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/sort_by_key_or_value"},"next":{"title":"transform_values","permalink":"/keep-being-human-dev/docs/ruby/hashes/middle/transform_values"}}');var t=r(23420),o=r(65404);const a={},i=void 0,d={},c=[{value:"\ud83d\udddd\ufe0f Transforming Keys with <code>transform_keys</code>",id:"\ufe0f-transforming-keys-with-transform_keys",level:2}];function m(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.h2,{id:"\ufe0f-transforming-keys-with-transform_keys",children:["\ud83d\udddd\ufe0f Transforming Keys with ",(0,t.jsx)(s.code,{children:"transform_keys"})]}),"\n",(0,t.jsxs)(s.p,{children:["Analogous to ",(0,t.jsx)(s.code,{children:"transform_values"}),", Ruby\u2019s ",(0,t.jsx)(s.code,{children:"Hash#transform_keys"})," applies a block to each key and returns a new hash. This is helpful when you need to normalize key formats (e.g., string \u2192 symbol)."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ruby",children:"params = { 'user_id' => 1, 'user_name' => 'Alice' }\n# Convert string keys to symbols\nsymbolized = params.transform_keys { |k| k.to_sym }\n# => { :user_id => 1, :user_name => 'Alice' }\n"})})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);