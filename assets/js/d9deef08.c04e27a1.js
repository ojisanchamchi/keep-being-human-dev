"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[93346],{57706:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"ruby/regex/middle/character_classes","title":"character_classes","description":"\ud83d\udd22 Use Character Classes and Shorthand","source":"@site/docs/ruby/regex/middle/character_classes.md","sourceDirName":"ruby/regex/middle","slug":"/ruby/regex/middle/character_classes","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/character_classes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/middle/character_classes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"anchor_validations","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/anchor_validations"},"next":{"title":"gsub_with_block","permalink":"/keep-being-human-dev/docs/ruby/regex/middle/gsub_with_block"}}');var a=r(23420),n=r(65404);const c={},d=void 0,o={},i=[{value:"\ud83d\udd22 Use Character Classes and Shorthand",id:"-use-character-classes-and-shorthand",level:2}];function l(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"-use-character-classes-and-shorthand",children:"\ud83d\udd22 Use Character Classes and Shorthand"}),"\n",(0,a.jsxs)(s.p,{children:["Character classes let you match sets of characters concisely. You can combine shorthand classes like ",(0,a.jsx)(s.code,{children:"\\d"})," (digits) and custom ranges like ",(0,a.jsx)(s.code,{children:"[A-Fa-f]"})," to fine-tune your patterns."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-ruby",children:"pattern = /[A-Za-z]\\w{2,10}\\d*/   # starts with a letter, 2\u201310 word chars, optional digits\n'Hello123'.match?(pattern)          # => true\n'1Hello'.match?(pattern)           # => false\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Use ",(0,a.jsx)(s.code,{children:"\\s"}),", ",(0,a.jsx)(s.code,{children:"\\S"}),", ",(0,a.jsx)(s.code,{children:"\\w"}),", ",(0,a.jsx)(s.code,{children:"\\W"}),", ",(0,a.jsx)(s.code,{children:"\\d"}),", and ",(0,a.jsx)(s.code,{children:"\\D"})," to cover common classes without lengthy lists."]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>d});var t=r(36672);const a={},n=t.createContext(a);function c(e){const s=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);