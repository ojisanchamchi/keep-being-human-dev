"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[16762],{8682:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"rails/performance/expert/partial_expression_indexes","title":"partial_expression_indexes","description":"\ud83d\ude80 Master Partial & Expression Indexes","source":"@site/docs/rails/performance/expert/partial_expression_indexes.md","sourceDirName":"rails/performance/expert","slug":"/rails/performance/expert/partial_expression_indexes","permalink":"/keep-being-human-dev/docs/rails/performance/expert/partial_expression_indexes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/expert/partial_expression_indexes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"middleware_stack_refinement","permalink":"/keep-being-human-dev/docs/rails/performance/expert/middleware_stack_refinement"},"next":{"title":"puma_connection_pool_tuning","permalink":"/keep-being-human-dev/docs/rails/performance/expert/puma_connection_pool_tuning"}}');var t=r(23420),i=r(65404);const a={},o=void 0,d={},c=[{value:"\ud83d\ude80 Master Partial &amp; Expression Indexes",id:"-master-partial--expression-indexes",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-master-partial--expression-indexes",children:"\ud83d\ude80 Master Partial & Expression Indexes"}),"\n",(0,t.jsx)(n.p,{children:"Leverage PostgreSQL\u2019s partial and expression indexes to minimize index size and boost query performance by indexing only the rows or expressions you actually need. This is invaluable for tables with heterogeneous data distributions or large JSONB columns where only a subset is queried frequently."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# Add a partial index to only index active users\nclass AddActiveUsersIndex < ActiveRecord::Migration[6.1]\n  def change\n    add_index :users, :email,\n      unique: true,\n      where: \"status = 'active'\"\n\n    # Expression index on lower(email) for case\u2010insensitive searches\n    execute <<~SQL\n      CREATE INDEX index_users_on_lower_email ON users (lower(email));\n    SQL\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"EXPLAIN ANALYZE"})," to verify index usage and adjust the ",(0,t.jsx)(n.code,{children:"WHERE"})," clause or expression to match your hottest paths."]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(36672);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);