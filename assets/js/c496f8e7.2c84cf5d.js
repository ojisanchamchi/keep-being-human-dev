"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[95469],{65404:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>l});var t=s(36672);const n={},r=t.createContext(n);function i(e){const a=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(r.Provider,{value:a},e.children)}},90936:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/testing/expert/parallel_capybara_tests","title":"parallel_capybara_tests","description":"\ud83c\udfad Run Parallel Capybara System Tests with Headless Chrome","source":"@site/docs/rails/testing/expert/parallel_capybara_tests.md","sourceDirName":"rails/testing/expert","slug":"/rails/testing/expert/parallel_capybara_tests","permalink":"/keep-being-human-dev/docs/rails/testing/expert/parallel_capybara_tests","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/expert/parallel_capybara_tests.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"mutant_integration","permalink":"/keep-being-human-dev/docs/rails/testing/expert/mutant_integration"},"next":{"title":"test_prof_optimizations","permalink":"/keep-being-human-dev/docs/rails/testing/expert/test_prof_optimizations"}}');var n=s(23420),r=s(65404);const i={},l=void 0,o={},c=[{value:"\ud83c\udfad Run Parallel Capybara System Tests with Headless Chrome",id:"-run-parallel-capybara-system-tests-with-headless-chrome",level:2}];function p(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"-run-parallel-capybara-system-tests-with-headless-chrome",children:"\ud83c\udfad Run Parallel Capybara System Tests with Headless Chrome"}),"\n",(0,n.jsxs)(a.p,{children:["Scale your system specs by running multiple headless Chrome sessions in parallel. Combine ",(0,n.jsx)(a.strong,{children:"parallel_tests"})," with proper DB-cleaning to cut build times significantly."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"# Gemfile\ngroup :test do\n  gem 'parallel_tests'\n  gem 'database_cleaner-active_record'\nend\n"})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-ruby",children:"# spec/spec_helper.rb\nrequire 'parallel_tests'\nrequire 'database_cleaner/active_record'\n\nRSpec.configure do |config|\n  config.use_transactional_fixtures = false\n\n  config.before(:suite) do\n    DatabaseCleaner.strategy = :truncation\n  end\n\n  config.before(:each) do\n    DatabaseCleaner.start\n  end\n\n  config.after(:each) do\n    DatabaseCleaner.clean\n  end\nend\n\nCapybara.register_driver :chrome_headless do |app|\n  caps = Selenium::WebDriver::Remote::Capabilities.chrome(\n    chromeOptions: { args: %w[headless disable-gpu no-sandbox window-size=1400,1400] }\n  )\n  Capybara::Selenium::Driver.new(app, browser: :chrome, desired_capabilities: caps)\nend\nCapybara.javascript_driver = :chrome_headless\n"})}),"\n",(0,n.jsx)(a.p,{children:"Execute:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"bundle exec parallel_rspec spec/system -n 4 --serialize-stdout\n"})}),"\n",(0,n.jsxs)(a.p,{children:["Adjust ",(0,n.jsx)(a.code,{children:"-n"})," to your CPU count and watch your system suite finish in minutes, not hours."]})]})}function d(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);