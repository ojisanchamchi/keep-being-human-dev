"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[4306],{65404:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>r});var s=n(36672);const l={},t=s.createContext(l);function o(e){const i=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:i},e.children)}},78742:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/file_io/middle/line_by_line_processing.md","title":"line_by_line_processing.md","description":"\ud83d\udcd1 Processing Files Line by Line with File.foreach","source":"@site/docs/ruby/file_io/middle/line_by_line_processing.md.md","sourceDirName":"ruby/file_io/middle","slug":"/ruby/file_io/middle/line_by_line_processing.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/line_by_line_processing.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/middle/line_by_line_processing.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"file_open_block.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/file_open_block.md"},"next":{"title":"tempfile_usage.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/tempfile_usage.md"}}');var l=n(23420),t=n(65404);const o={},r=void 0,c={},d=[{value:"\ud83d\udcd1 Processing Files Line by Line with File.foreach",id:"-processing-files-line-by-line-with-fileforeach",level:2}];function a(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.h2,{id:"-processing-files-line-by-line-with-fileforeach",children:"\ud83d\udcd1 Processing Files Line by Line with File.foreach"}),"\n",(0,l.jsxs)(i.p,{children:[(0,l.jsx)(i.code,{children:"File.foreach"})," yields each line directly and handles opening/closing for you. It\u2019s ideal for memory-efficient line-based parsing."]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{className:"language-ruby",children:"File.foreach('config/settings.yml') do |line|\n  next if line.strip.empty?\n  key, value = line.split(':', 2)\n  process_setting(key.strip, value.strip)\nend\n"})})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);