"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29961],{37330:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"gems/image_processing/middle/chain_transformations","title":"chain_transformations","description":"\ud83d\udd04 Chain Multiple Transformations","source":"@site/docs/gems/image_processing/middle/chain_transformations.md","sourceDirName":"gems/image_processing/middle","slug":"/gems/image_processing/middle/chain_transformations","permalink":"/keep-being-human-dev/docs/gems/image_processing/middle/chain_transformations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/image_processing/middle/chain_transformations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"background_processing","permalink":"/keep-being-human-dev/docs/gems/image_processing/middle/background_processing"},"next":{"title":"variants_resizing_format","permalink":"/keep-being-human-dev/docs/gems/image_processing/middle/variants_resizing_format"}}');var t=i(23420),a=i(65404);const o={},r=void 0,c={},m=[{value:"\ud83d\udd04 Chain Multiple Transformations",id:"-chain-multiple-transformations",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-chain-multiple-transformations",children:"\ud83d\udd04 Chain Multiple Transformations"}),"\n",(0,t.jsx)(n.p,{children:"You can combine multiple image_processing operations in a pipeline to perform complex edits. This example uses the gem directly to resize, crop, rotate, and convert the uploaded file before attaching it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# app/services/image_pipeline.rb\nclass ImagePipeline\n  def self.call(uploaded_io)\n    ImageProcessing::MiniMagick\n      .source(uploaded_io)\n      .resize_to_limit(800, 800)\n      .crop("800x800+0+0")\n      .rotate("90")\n      .convert("png")\n      .call\n  end\nend\n\n# Usage in controller\nprocessed_file = ImagePipeline.call(params[:image].tempfile.path)\n@photo.image.attach(\n  io: File.open(processed_file.path),\n  filename: "processed.png",\n  content_type: "image/png"\n)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(36672);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);