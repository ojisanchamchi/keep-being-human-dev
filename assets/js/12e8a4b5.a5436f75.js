"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[75781],{33161:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"ruby/file_io/expert/nonblocking_file_io","title":"nonblocking_file_io","description":"\u2699\ufe0f Implement Nonblocking Reads with read_nonblock and select","source":"@site/docs/ruby/file_io/expert/nonblocking_file_io.md","sourceDirName":"ruby/file_io/expert","slug":"/ruby/file_io/expert/nonblocking_file_io","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/nonblocking_file_io","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/expert/nonblocking_file_io.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"memory_map_file","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/memory_map_file"},"next":{"title":"sparse_file_manipulation","permalink":"/keep-being-human-dev/docs/ruby/file_io/expert/sparse_file_manipulation"}}');var r=o(23420),t=o(65404);const s={},c=void 0,l={},a=[{value:"\u2699\ufe0f Implement Nonblocking Reads with <code>read_nonblock</code> and <code>select</code>",id:"\ufe0f-implement-nonblocking-reads-with-read_nonblock-and-select",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"\ufe0f-implement-nonblocking-reads-with-read_nonblock-and-select",children:["\u2699\ufe0f Implement Nonblocking Reads with ",(0,r.jsx)(n.code,{children:"read_nonblock"})," and ",(0,r.jsx)(n.code,{children:"select"})]}),"\n",(0,r.jsxs)(n.p,{children:["For event-driven applications (network proxies, high-speed processors), combine ",(0,r.jsx)(n.code,{children:"IO#read_nonblock"})," with ",(0,r.jsx)(n.code,{children:"IO.select"})," to avoid blocking the reactor thread on disk reads."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"file = File.open('stream.log', 'r')\nfile.sync = true\n\nloop do\n  ready = IO.select([file], nil, nil, 0.1)\n  if ready\n    begin\n      chunk = file.read_nonblock(4096)\n      process(chunk)\n    rescue IO::WaitReadable\n      next\n    rescue EOFError\n      break\n    end\n  end\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"This pattern ensures your event loop remains responsive even under heavy disk I/O pressure."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var i=o(36672);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);