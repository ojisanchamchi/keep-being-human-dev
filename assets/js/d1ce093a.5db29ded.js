"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80551],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var c=t(36672);const r={},a=c.createContext(r);function i(e){const n=c.useContext(a);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),c.createElement(a.Provider,{value:n},e.children)}},96578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"rails/i18n/expert/custom_active_record_backend","title":"custom_active_record_backend","description":"\ud83d\ude80 Custom ActiveRecord I18n Backend","source":"@site/docs/rails/i18n/expert/custom_active_record_backend.md","sourceDirName":"rails/i18n/expert","slug":"/rails/i18n/expert/custom_active_record_backend","permalink":"/keep-being-human-dev/docs/rails/i18n/expert/custom_active_record_backend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/i18n/expert/custom_active_record_backend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"complex_pluralization_rules","permalink":"/keep-being-human-dev/docs/rails/i18n/expert/complex_pluralization_rules"},"next":{"title":"namespace_lazy_lookups","permalink":"/keep-being-human-dev/docs/rails/i18n/expert/namespace_lazy_lookups"}}');var r=t(23420),a=t(65404);const i={},o=void 0,s={},d=[{value:"\ud83d\ude80 Custom ActiveRecord I18n Backend",id:"-custom-activerecord-i18n-backend",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-custom-activerecord-i18n-backend",children:"\ud83d\ude80 Custom ActiveRecord I18n Backend"}),"\n",(0,r.jsxs)(n.p,{children:["You can persist translations in the database to allow runtime updates and CMS\u2011style editing without redeploys. By extending ",(0,r.jsx)(n.code,{children:"I18n::Backend::Simple"})," with ",(0,r.jsx)(n.code,{children:"I18n::Backend::KeyValue"})," or using the ",(0,r.jsx)(n.code,{children:"i18n-active_record"})," gem, you gain CRUD over your locales and can override YAML files at boot time."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/i18n_backend.rb\nrequire 'i18n/backend/active_record'\nI18n::Backend::ActiveRecord.send(:include, I18n::Backend::Memoize)\nI18n::Backend::Chain.new(\n  I18n::Backend::ActiveRecord.new,\n  I18n::Backend::Simple.new\n).tap { |backend| I18n.backend = backend }\n\n# create table via rails g migration CreateTranslations\n# fields: locale, key, value, interpolations, is_proc\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once set up, you can use ",(0,r.jsx)(n.code,{children:"Translation.create(locale: 'fr', key: 'greeting.hello', value: 'Bonjour')"})," to override or add new entries on the fly."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);