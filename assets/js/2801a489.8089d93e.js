"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[986],{35652:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"ruby/json/advanced/custom_generator_state_for_json","title":"custom_generator_state_for_json","description":"\ud83d\udee0\ufe0f Extending JSON::State for Custom Serialization","source":"@site/docs/ruby/json/advanced/custom_generator_state_for_json.md","sourceDirName":"ruby/json/advanced","slug":"/ruby/json/advanced/custom_generator_state_for_json","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/custom_generator_state_for_json","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/json/advanced/custom_generator_state_for_json.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tab_completion","permalink":"/keep-being-human-dev/docs/ruby/irb/middle/tab_completion"},"next":{"title":"high_performance_parsing_with_oj","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/high_performance_parsing_with_oj"}}');var r=n(23420),a=n(65404);const s={},i=void 0,c={},d=[{value:"\ud83d\udee0\ufe0f Extending JSON::Ext::Generator::State for Custom Serialization",id:"\ufe0f-extending-jsonextgeneratorstate-for-custom-serialization",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"\ufe0f-extending-jsonextgeneratorstate-for-custom-serialization",children:"\ud83d\udee0\ufe0f Extending JSON::Ext::Generator::State for Custom Serialization"}),"\n",(0,r.jsxs)(t.p,{children:["For low-level control over JSON output\u2014such as tweaking whitespace, injecting metadata, or handling circular references\u2014subclass JSON::Ext::Generator::State. Override methods like ",(0,r.jsx)(t.code,{children:"array"}),", ",(0,r.jsx)(t.code,{children:"hash"}),", or ",(0,r.jsx)(t.code,{children:"generate_value"})," to implement complex serialization logic."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'require \'json\'\n\nclass PrettyState < JSON::Ext::Generator::State\n  def initialize(options = {})\n    super\n    self.space = " "            # Space after colon\n    self.space_before = ""      # No space before colon\n    self.object_nl = "\\n"      # Newline after object\n    self.array_nl = "\\n"       # Newline after array elements\n  end\n\n  # Insert a custom header before root object\n  def generate(object)\n    write("/* Generated at: #{Time.now.utc} */\\n")\n    super\n  end\nend\n\ndata = {name: \'Alice\', scores: [10, 20, 30]}\njson = JSON.generate(data, state: PrettyState.new)\nputs json\n'})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(36672);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);