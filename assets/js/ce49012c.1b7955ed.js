"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[44522],{44507:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>g,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/logging/advanced/lograge_logstash_integration","title":"lograge_logstash_integration","description":"\ud83d\ude80 Integrate Lograge with Logstash","source":"@site/docs/rails/logging/advanced/lograge_logstash_integration.md","sourceDirName":"rails/logging/advanced","slug":"/rails/logging/advanced/lograge_logstash_integration","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/lograge_logstash_integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/advanced/lograge_logstash_integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_log_formatter","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/custom_log_formatter"},"next":{"title":"sql_query_context_logging","permalink":"/keep-being-human-dev/docs/rails/logging/advanced/sql_query_context_logging"}}');var a=t(23420),r=t(65404);const g={},s=void 0,i={},l=[{value:"\ud83d\ude80 Integrate Lograge with Logstash",id:"-integrate-lograge-with-logstash",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-integrate-lograge-with-logstash",children:"\ud83d\ude80 Integrate Lograge with Logstash"}),"\n",(0,a.jsxs)(n.p,{children:["Combine ",(0,a.jsx)(n.code,{children:"lograge"})," with the ",(0,a.jsx)(n.code,{children:"logstash-logger"})," gem to ship logs directly to your Logstash instance over TCP or UDP. This reduces overhead and ensures your logs are available in real-time for search and visualization."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\ngem 'lograge'\ngem 'logstash-logger'\n\n# config/environments/production.rb\nRails.application.configure do\n  config.lograge.enabled = true\n  config.lograge.formatter = Lograge::Formatters::Logstash.new\n\n  config.logger = LogStashLogger.new(\n    type: :tcp,\n    host: 'logstash.example.com',\n    port: 5000,\n    sync: true\n  )\nend\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>g,x:()=>s});var o=t(36672);const a={},r=o.createContext(a);function g(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:g(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);