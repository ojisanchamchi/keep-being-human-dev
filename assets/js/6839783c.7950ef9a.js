"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17270],{13143:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>b,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rails/active_record_callbacks/beginner/before_save_callback","title":"before_save_callback","description":"\ud83d\udcbe Persist Timestamps or Flags with before_save","source":"@site/docs/rails/active_record_callbacks/beginner/before_save_callback.md","sourceDirName":"rails/active_record_callbacks/beginner","slug":"/rails/active_record_callbacks/beginner/before_save_callback","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_save_callback","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_callbacks/beginner/before_save_callback.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"before_create_default_status","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_create_default_status"},"next":{"title":"before_validation_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_callbacks/beginner/before_validation_usage"}}');var r=s(23420),n=s(65404);const c={},i=void 0,l={},o=[{value:"\ud83d\udcbe Persist Timestamps or Flags with <code>before_save</code>",id:"-persist-timestamps-or-flags-with-before_save",level:2}];function d(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.h2,{id:"-persist-timestamps-or-flags-with-before_save",children:["\ud83d\udcbe Persist Timestamps or Flags with ",(0,r.jsx)(a.code,{children:"before_save"})]}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.code,{children:"before_save"})," callback runs just before a record is written to the database. This is perfect for setting flags or timestamps not handled by Rails by default."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:"class Article < ApplicationRecord\n  before_save :set_published_at\n\n  private\n\n  def set_published_at\n    self.published_at ||= Time.current if published?\n  end\nend\n"})}),"\n",(0,r.jsxs)(a.p,{children:["If an article is marked ",(0,r.jsx)(a.code,{children:"published"})," and ",(0,r.jsx)(a.code,{children:"published_at"})," is blank, this callback sets the timestamp automatically."]})]})}function b(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,a,s)=>{s.d(a,{R:()=>c,x:()=>i});var t=s(36672);const r={},n=t.createContext(r);function c(e){const a=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(n.Provider,{value:a},e.children)}}}]);