"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[71813],{65404:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>o});var n=t(36672);const i={},r=n.createContext(i);function a(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:s},e.children)}},98756:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"rails/testing/middle/json_api_parsing","title":"json_api_parsing","description":"\ud83d\uddc4 Testing JSON APIs with Parsed Response","source":"@site/docs/rails/testing/middle/json_api_parsing.md","sourceDirName":"rails/testing/middle","slug":"/rails/testing/middle/json_api_parsing","permalink":"/keep-being-human-dev/docs/rails/testing/middle/json_api_parsing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/testing/middle/json_api_parsing.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"file_uploads_fixture","permalink":"/keep-being-human-dev/docs/rails/testing/middle/file_uploads_fixture"},"next":{"title":"reuse_tests_shared_examples","permalink":"/keep-being-human-dev/docs/rails/testing/middle/reuse_tests_shared_examples"}}');var i=t(23420),r=t(65404);const a={},o=void 0,d={},p=[{value:"\ud83d\uddc4 Testing JSON APIs with Parsed Response",id:"-testing-json-apis-with-parsed-response",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"-testing-json-apis-with-parsed-response",children:"\ud83d\uddc4 Testing JSON APIs with Parsed Response"}),"\n",(0,i.jsx)(s.p,{children:"In request specs, parse JSON responses into Ruby hashes to assert on structure and values. This makes your tests more expressive and avoids brittle string matching."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:"# spec/requests/api/v1/users_spec.rb\ndescribe 'GET /api/v1/users', type: :request do\n  let!(:users) { create_list(:user, 3) }\n\n  before { get '/api/v1/users', headers: { 'Accept' => 'application/json' } }\n\n  it 'returns all users' do\n    expect(response).to have_http_status(:ok)\n    json = JSON.parse(response.body)\n    expect(json['users'].size).to eq 3\n    expect(json['users'].first).to include('id', 'email')\n  end\nend\n"})})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);