"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[15018],{65404:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>u});var n=t(36672);const s={},i=n.createContext(s);function o(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function u(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:r},e.children)}},87020:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"ruby/strings/expert/reuse_string_buffers_replace","title":"reuse_string_buffers_replace","description":"\ud83d\ude80 Reuse string buffers with String#replace","source":"@site/docs/ruby/strings/expert/reuse_string_buffers_replace.md","sourceDirName":"ruby/strings/expert","slug":"/ruby/strings/expert/reuse_string_buffers_replace","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/reuse_string_buffers_replace","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/expert/reuse_string_buffers_replace.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"override_dup_with_initialize_copy","permalink":"/keep-being-human-dev/docs/ruby/strings/expert/override_dup_with_initialize_copy"},"next":{"title":"dynamic_gsub_blocks","permalink":"/keep-being-human-dev/docs/ruby/strings/middle/dynamic_gsub_blocks"}}');var s=t(23420),i=t(65404);const o={},u=void 0,c={},a=[{value:"\ud83d\ude80 Reuse string buffers with String#replace",id:"-reuse-string-buffers-with-stringreplace",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-reuse-string-buffers-with-stringreplace",children:"\ud83d\ude80 Reuse string buffers with String#replace"}),"\n",(0,s.jsxs)(r.p,{children:["Allocating fresh strings in hot loops can trigger GC churn. By pre\u2011allocating a single buffer and using ",(0,s.jsx)(r.code,{children:"String#replace"}),", you overwrite its content without reallocating the object. This technique is critical in high\u2011throughput parsing or formatting workloads."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"buffer = String.new\n100_000.times do |i|\n  buffer.replace(i.to_s)\n  process(buffer)  # do something CPU-bound with the string\nend\n# `buffer` object_id stays constant, avoiding temporary allocations\n"})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);