"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[47793],{65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(36672);const a={},s=t.createContext(a);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},98669:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ruby/numbers/beginner/generating_random_numbers","title":"generating_random_numbers","description":"\ud83c\udfb2 Generating Random Numbers","source":"@site/docs/ruby/numbers/beginner/generating_random_numbers.md","sourceDirName":"ruby/numbers/beginner","slug":"/ruby/numbers/beginner/generating_random_numbers","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/generating_random_numbers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/beginner/generating_random_numbers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"basic_arithmetic","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/basic_arithmetic"},"next":{"title":"integer_vs_float","permalink":"/keep-being-human-dev/docs/ruby/numbers/beginner/integer_vs_float"}}');var a=r(23420),s=r(65404);const o={},i=void 0,u={},d=[{value:"\ud83c\udfb2 Generating Random Numbers",id:"-generating-random-numbers",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-generating-random-numbers",children:"\ud83c\udfb2 Generating Random Numbers"}),"\n",(0,a.jsxs)(n.p,{children:["Ruby\u2019s ",(0,a.jsx)(n.code,{children:"rand"})," method lets you generate random numbers. Call ",(0,a.jsx)(n.code,{children:"rand"})," without arguments for a float between 0.0 and 1.0, with an integer for values from ",(0,a.jsx)(n.code,{children:"0"})," up to (but not including) that integer, or with a range for inclusive bounds."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"puts rand         # => 0.0...1.0\nputs rand(10)     # => an Integer from 0 to 9\nputs rand(1..6)   # => simulating a dice roll, 1 through 6\n"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);