"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[54254],{65404:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(36672);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},92199:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"ruby/symbols/middle/symbol_to_proc_enumeration","title":"symbol_to_proc_enumeration","description":"\ud83c\udf00 Use Symbol#to_proc for Concise Enumerations","source":"@site/docs/ruby/symbols/middle/symbol_to_proc_enumeration.md","sourceDirName":"ruby/symbols/middle","slug":"/ruby/symbols/middle/symbol_to_proc_enumeration","permalink":"/keep-being-human-dev/docs/ruby/symbols/middle/symbol_to_proc_enumeration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/symbols/middle/symbol_to_proc_enumeration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_method_invocation","permalink":"/keep-being-human-dev/docs/ruby/symbols/middle/dynamic_method_invocation"},"next":{"title":"endless_method_definition","permalink":"/keep-being-human-dev/docs/ruby/syntax/advanced/endless_method_definition"}}');var s=o(23420),r=o(65404);const i={},a=void 0,c={},m=[{value:"\ud83c\udf00 Use Symbol#to_proc for Concise Enumerations",id:"-use-symbolto_proc-for-concise-enumerations",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-use-symbolto_proc-for-concise-enumerations",children:"\ud83c\udf00 Use Symbol#to_proc for Concise Enumerations"}),"\n",(0,s.jsxs)(n.p,{children:["Symbol#to_proc lets you convert a symbol into a proc, trimming boilerplate when working with Enumerable methods. The ",(0,s.jsx)(n.code,{children:"&:method"})," shorthand improves readability and can be marginally faster than full blocks. It\u2019s perfect for mapping, selecting, or chaining transformations without extra syntax."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'names = ["alice", "bob", "charlie"]\nupcased = names.map(&:upcase)\n# => ["ALICE", "BOB", "CHARLIE"]\n\n# Combine with select\nshort_names = names.select { |n| n.length < 5 }.map(&:capitalize)\n# => ["Alice", "Bob"]\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);