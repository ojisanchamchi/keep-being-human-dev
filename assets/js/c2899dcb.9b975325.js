"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[19965],{65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var a=s(36672);const t={},o=a.createContext(t);function r(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(o.Provider,{value:n},e.children)}},82188:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/variables/middle/block_vs_method_variable_scope","title":"block_vs_method_variable_scope","description":"\ud83d\udd10 Understand Variable Scope in Blocks vs Methods","source":"@site/docs/ruby/variables/middle/block_vs_method_variable_scope.md","sourceDirName":"ruby/variables/middle","slug":"/ruby/variables/middle/block_vs_method_variable_scope","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/block_vs_method_variable_scope","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/variables/middle/block_vs_method_variable_scope.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"thread_fiber_local_variables_expert","permalink":"/keep-being-human-dev/docs/ruby/variables/expert/thread_fiber_local_variables_expert"},"next":{"title":"memoization_with_or_equal","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/memoization_with_or_equal"}}');var t=s(23420),o=s(65404);const r={},i=void 0,d={},l=[{value:"\ud83d\udd10 Understand Variable Scope in Blocks vs Methods",id:"-understand-variable-scope-in-blocks-vs-methods",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-understand-variable-scope-in-blocks-vs-methods",children:"\ud83d\udd10 Understand Variable Scope in Blocks vs Methods"}),"\n",(0,t.jsxs)(n.p,{children:["Ruby\u2019s blocks and methods handle local variables differently. Blocks are closures that can read and modify variables from the surrounding scope, whereas method definitions introduce a new local scope. Knowing this distinction prevents ",(0,t.jsx)(n.code,{children:"NameError"}),"s and unintended side effects."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# Block scope shares outer variables\nx = 5\n3.times do |i|\n  x += i\nend\nputs x  # => 8 (5 + 0 + 1 + 2)\n\n# Method scope is isolated\ndef update_y\n  y = 10\nend\nupdate_y\nputs defined?(y)  # => nil (y is not accessible here)\n\n# Block parameters shadow outer variables\nvalue = 100\n[1, 2, 3].each do |value|\n  puts value      # prints 1, 2, 3\nend\nputs value        # => 100 (outer `value` unchanged)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);