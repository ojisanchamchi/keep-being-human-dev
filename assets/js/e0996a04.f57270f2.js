"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86213],{15190:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record/middle/pluck_and_select_optimization","title":"pluck_and_select_optimization","description":"\ud83d\ude80 Fetch Specific Columns with pluck and select","source":"@site/docs/rails/active_record/middle/pluck_and_select_optimization.md","sourceDirName":"rails/active_record/middle","slug":"/rails/active_record/middle/pluck_and_select_optimization","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/pluck_and_select_optimization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/middle/pluck_and_select_optimization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"optimistic_locking","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/optimistic_locking"},"next":{"title":"transactions_and_rollback","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/transactions_and_rollback"}}');var i=c(23420),s=c(65404);const a={},o=void 0,r={},d=[{value:"\ud83d\ude80 Fetch Specific Columns with <code>pluck</code> and <code>select</code>",id:"-fetch-specific-columns-with-pluck-and-select",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h2,{id:"-fetch-specific-columns-with-pluck-and-select",children:["\ud83d\ude80 Fetch Specific Columns with ",(0,i.jsx)(t.code,{children:"pluck"})," and ",(0,i.jsx)(t.code,{children:"select"})]}),"\n",(0,i.jsxs)(t.p,{children:["Reduce memory usage by loading only needed fields. Use ",(0,i.jsx)(t.code,{children:"pluck"})," when you only need raw values, and ",(0,i.jsx)(t.code,{children:"select"})," when you want model instances with partial attributes."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ruby",children:"# Get an array of email strings:\nemails = User.where(subscribed: true).pluck(:email)\n\n# Load only id and name into User objects:\nusers = User.select(:id, :name).where('created_at > ?', 1.month.ago)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,t,c)=>{c.d(t,{R:()=>a,x:()=>o});var n=c(36672);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);