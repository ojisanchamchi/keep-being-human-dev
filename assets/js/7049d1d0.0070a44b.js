"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[3722],{65404:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>s});var r=n(36672);const t={},c=r.createContext(t);function a(e){const i=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(c.Provider,{value:i},e.children)}},71412:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"ruby/numbers/middle/bigdecimal_precision","title":"bigdecimal_precision","description":"\ud83e\uddee Accurate Decimal with BigDecimal","source":"@site/docs/ruby/numbers/middle/bigdecimal_precision.md","sourceDirName":"ruby/numbers/middle","slug":"/ruby/numbers/middle/bigdecimal_precision","permalink":"/keep-being-human-dev/docs/ruby/numbers/middle/bigdecimal_precision","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/middle/bigdecimal_precision.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"expert_rational_complex","permalink":"/keep-being-human-dev/docs/ruby/numbers/expert/expert_rational_complex"},"next":{"title":"clamp_numbers","permalink":"/keep-being-human-dev/docs/ruby/numbers/middle/clamp_numbers"}}');var t=n(23420),c=n(65404);const a={},s=void 0,o={},l=[{value:"\ud83e\uddee Accurate Decimal with BigDecimal",id:"-accurate-decimal-with-bigdecimal",level:2}];function d(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"-accurate-decimal-with-bigdecimal",children:"\ud83e\uddee Accurate Decimal with BigDecimal"}),"\n",(0,t.jsxs)(i.p,{children:["Use ",(0,t.jsx)(i.code,{children:"BigDecimal"})," for financial or scientific calculations where floating\u2011point errors are unacceptable. Always ",(0,t.jsx)(i.code,{children:"require 'bigdecimal'"})," (and ",(0,t.jsx)(i.code,{children:"'bigdecimal/util'"})," for String conversions)."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:"require 'bigdecimal'\nrequire 'bigdecimal/util'\n\nprice = '19.99'.to_d\ntax_rate = '0.075'.to_d\n\ntotal = price + (price * tax_rate)\nputs total.to_s('F')\n# => \"21.48825\"\n"})})]})}function u(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);