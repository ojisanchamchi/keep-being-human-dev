"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[85815],{1410:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"ruby/methods/middle/public_send_vs_send","title":"public_send_vs_send","description":"\ud83d\udd12 Choosing public_send over send for Safer Metaprogramming","source":"@site/docs/ruby/methods/middle/public_send_vs_send.md","sourceDirName":"ruby/methods/middle","slug":"/ruby/methods/middle/public_send_vs_send","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/public_send_vs_send","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/methods/middle/public_send_vs_send.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"forwardable_delegation","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/forwardable_delegation"},"next":{"title":"splat_and_double_splat","permalink":"/keep-being-human-dev/docs/ruby/methods/middle/splat_and_double_splat"}}');var d=s(23420),o=s(65404);const r={},i=void 0,c={},a=[{value:"\ud83d\udd12 Choosing public_send over send for Safer Metaprogramming",id:"-choosing-public_send-over-send-for-safer-metaprogramming",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"-choosing-public_send-over-send-for-safer-metaprogramming",children:"\ud83d\udd12 Choosing public_send over send for Safer Metaprogramming"}),"\n",(0,d.jsxs)(n.p,{children:["While ",(0,d.jsx)(n.code,{children:"send"})," lets you call any method (public, protected, or private), ",(0,d.jsx)(n.code,{children:"public_send"})," restricts calls to public methods, reducing the risk of unintentionally bypassing encapsulation. Prefer ",(0,d.jsx)(n.code,{children:"public_send"})," when you don't need to access private methods."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ruby",children:"class Secret\n  def public_method\n    'public'\n  end\n  private\ndef private_method\n    'secret'\n  end\nend\n\nobj = Secret.new\nobj.public_send(:public_method)   #=> \"public\"\nobj.public_send(:private_method)  #=> NoMethodError\nobj.send(:private_method)         #=> \"secret\"  # Avoid unless necessary\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(36672);const d={},o=t.createContext(d);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);