"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[89341],{46868:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_validations/expert/complex_association_validations","title":"complex_association_validations","description":"\ud83d\udd17 Validating Complex Associations","source":"@site/docs/rails/active_record_validations/expert/complex_association_validations.md","sourceDirName":"rails/active_record_validations/expert","slug":"/rails/active_record_validations/expert/complex_association_validations","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/complex_association_validations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/expert/complex_association_validations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_uniqueness_scopes","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/advanced_uniqueness_scopes"},"next":{"title":"composable_lambda_validators","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/composable_lambda_validators"}}');var n=a(23420),s=a(65404);const o={},r=void 0,c={},d=[{value:"\ud83d\udd17 Validating Complex Associations",id:"-validating-complex-associations",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"-validating-complex-associations",children:"\ud83d\udd17 Validating Complex Associations"}),"\n",(0,n.jsxs)(i.p,{children:["Validate nested and deeply associated records by using ",(0,n.jsx)(i.code,{children:"validates_associated"})," with ",(0,n.jsx)(i.code,{children:"inverse_of"}),", ensuring full object graph integrity. Combine with ",(0,n.jsx)(i.code,{children:"reject_if"})," and custom proc logic to conditionally build children."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-ruby",children:"# app/models/order.rb\nclass Order < ApplicationRecord\n  has_many :line_items, inverse_of: :order\n  accepts_nested_attributes_for :line_items, reject_if: ->(attrs) { attrs['quantity'].to_i.zero? }\n  validates_associated :line_items\nend\n\n# app/models/line_item.rb\nclass LineItem < ApplicationRecord\n  belongs_to :order, inverse_of: :line_items\n  validates :quantity, numericality: { greater_than: 0 }\nend\n"})})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,i,a)=>{a.d(i,{R:()=>o,x:()=>r});var t=a(36672);const n={},s=t.createContext(n);function o(e){const i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);