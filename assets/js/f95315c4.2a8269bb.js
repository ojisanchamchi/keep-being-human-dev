"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[21179],{55605:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"gems/geocoder/beginner/geocoder_reverse_usage","title":"geocoder_reverse_usage","description":"\ud83d\udd04 Perform Reverse Geocoding","source":"@site/docs/gems/geocoder/beginner/geocoder_reverse_usage.md","sourceDirName":"gems/geocoder/beginner","slug":"/gems/geocoder/beginner/geocoder_reverse_usage","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_reverse_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/geocoder/beginner/geocoder_reverse_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"geocoder_model_setup","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_model_setup"},"next":{"title":"bulk_reverse_geocoding_sidekiq","permalink":"/keep-being-human-dev/docs/gems/geocoder/expert/bulk_reverse_geocoding_sidekiq"}}');var s=o(23420),t=o(65404);const d={},c=void 0,i={},a=[{value:"\ud83d\udd04 Perform Reverse Geocoding",id:"-perform-reverse-geocoding",level:2}];function g(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"-perform-reverse-geocoding",children:"\ud83d\udd04 Perform Reverse Geocoding"}),"\n",(0,s.jsxs)(r.p,{children:["Reverse geocoding lets you convert coordinates back into a human-readable address. Use ",(0,s.jsx)(r.code,{children:"reverse_geocoded_by"})," in your model or call ",(0,s.jsx)(r.code,{children:"Geocoder.search"})," directly when needed, for example, to display the nearest address from latitude/longitude."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:'# app/models/user.rb\nclass User < ApplicationRecord\n  reverse_geocoded_by :latitude, :longitude do |obj, results|\n    if geo = results.first\n      obj.city    = geo.city\n      obj.country = geo.country\n    end\n  end\n  after_validation :reverse_geocode, if: ->(obj){ obj.latitude_changed? || obj.longitude_changed? }\nend\n\n# Or on the fly\nresults = Geocoder.search([40.7143528, -74.0059731])\naddress = results.first.address  # "New York, NY, USA"\n'})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},65404:(e,r,o)=>{o.d(r,{R:()=>d,x:()=>c});var n=o(36672);const s={},t=n.createContext(s);function d(e){const r=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);