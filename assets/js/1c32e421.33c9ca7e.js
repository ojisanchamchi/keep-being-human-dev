"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80160],{17201:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/active_record_associations/middle/touch_option","title":"touch_option","description":"\ud83d\udee1\ufe0f Keeping Timestamps Fresh with touch: true","source":"@site/docs/rails/active_record_associations/middle/touch_option.md","sourceDirName":"rails/active_record_associations/middle","slug":"/rails/active_record_associations/middle/touch_option","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/touch_option","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/middle/touch_option.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"polymorphic_association","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/polymorphic_association"},"next":{"title":"validating_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/validating_associations"}}');var o=i(23420),n=i(65404);const a={},c=void 0,r={},d=[{value:"\ud83d\udee1\ufe0f Keeping Timestamps Fresh with <code>touch: true</code>",id:"\ufe0f-keeping-timestamps-fresh-with-touch-true",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.h2,{id:"\ufe0f-keeping-timestamps-fresh-with-touch-true",children:["\ud83d\udee1\ufe0f Keeping Timestamps Fresh with ",(0,o.jsx)(t.code,{children:"touch: true"})]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"touch: true"})," option on a ",(0,o.jsx)(t.code,{children:"belongs_to"})," association updates the parent\u2019s ",(0,o.jsx)(t.code,{children:"updated_at"})," when the child changes. This helps cache invalidation and external services tracking modification times. Use it to signal that the parent\u2019s data has been indirectly altered."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"class Comment < ApplicationRecord\n  belongs_to :post, touch: true\nend\n\nclass Post < ApplicationRecord\n  # When a comment is created/updated/destroyed, post.updated_at will be refreshed.\nend\n"})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var s=i(36672);const o={},n=s.createContext(o);function a(e){const t=s.useContext(n);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);