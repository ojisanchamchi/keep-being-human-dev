"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[21204],{65404:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var i=s(36672);const a={},t=i.createContext(a);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(t.Provider,{value:n},e.children)}},90746:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/websockets/advanced/redis_pubsub_scaling","title":"redis_pubsub_scaling","description":"\ud83d\uddc4\ufe0f Scaling ActionCable with Redis Pub/Sub","source":"@site/docs/rails/websockets/advanced/redis_pubsub_scaling.md","sourceDirName":"rails/websockets/advanced","slug":"/rails/websockets/advanced/redis_pubsub_scaling","permalink":"/keep-being-human-dev/docs/rails/websockets/advanced/redis_pubsub_scaling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/websockets/advanced/redis_pubsub_scaling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"reconnect_backoff","permalink":"/keep-being-human-dev/docs/rails/websockets/advanced/reconnect_backoff"},"next":{"title":"broadcast_from_controller","permalink":"/keep-being-human-dev/docs/rails/websockets/beginner/broadcast_from_controller"}}');var a=s(23420),t=s(65404);const c={},r=void 0,o={},d=[{value:"\ud83d\uddc4\ufe0f Scaling ActionCable with Redis Pub/Sub",id:"\ufe0f-scaling-actioncable-with-redis-pubsub",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-scaling-actioncable-with-redis-pubsub",children:"\ud83d\uddc4\ufe0f Scaling ActionCable with Redis Pub/Sub"}),"\n",(0,a.jsx)(n.p,{children:"Configure Redis as the adapter to scale WebSocket servers horizontally and leverage Redis Pub/Sub for high-throughput message distribution. Ensure each environment isolates its channels with a prefix."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'# config/cable.yml\nproduction:\n  adapter: redis\n  url: <%= ENV.fetch("REDIS_URL") %>\n  channel_prefix: my_app_production\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/action_cable.rb\nRails.application.config.after_initialize do\n  ActionCable.server.config.pubsub_adapter = :redis\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Adjust Redis pool size and timeouts in ",(0,a.jsx)(n.code,{children:"config/redis.yml"})," or your environment variables to match your expected connection load."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);