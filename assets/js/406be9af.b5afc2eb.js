"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[55184],{65404:(e,t,r)=>{r.d(t,{R:()=>c,x:()=>i});var n=r(36672);const s={},a=n.createContext(s);function c(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(a.Provider,{value:t},e.children)}},84237:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"gems/bcrypt/expert/bcrypt_legacy_migration","title":"bcrypt_legacy_migration","description":"\ud83d\udd04 Seamless Migration from Legacy Hash Algorithms","source":"@site/docs/gems/bcrypt/expert/bcrypt_legacy_migration.md","sourceDirName":"gems/bcrypt/expert","slug":"/gems/bcrypt/expert/bcrypt_legacy_migration","permalink":"/keep-being-human-dev/docs/gems/bcrypt/expert/bcrypt_legacy_migration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/bcrypt/expert/bcrypt_legacy_migration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bcrypt_async_hashing","permalink":"/keep-being-human-dev/docs/gems/bcrypt/expert/bcrypt_async_hashing"},"next":{"title":"bcrypt_pepper_cost_configuration","permalink":"/keep-being-human-dev/docs/gems/bcrypt/expert/bcrypt_pepper_cost_configuration"}}');var s=r(23420),a=r(65404);const c={},i=void 0,o={},p=[{value:"\ud83d\udd04 Seamless Migration from Legacy Hash Algorithms",id:"-seamless-migration-from-legacy-hash-algorithms",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-seamless-migration-from-legacy-hash-algorithms",children:"\ud83d\udd04 Seamless Migration from Legacy Hash Algorithms"}),"\n",(0,s.jsx)(t.p,{children:"Migrate users from MD5 or SHA1 to bcrypt without forcing a password reset. Detect legacy digests on login, verify them, then transparently rehash with bcrypt+pepper and clear legacy fields for future authentications."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'# app/models/user.rb\nclass User < ApplicationRecord\n  has_secure_password validations: false\n\n  # legacy_digest holds old MD5/SHA1\n  def authenticate(unencrypted_password)\n    if legacy_digest.present? && legacy_verify(unencrypted_password)\n      # Rehash with bcrypt and pepper, remove legacy digest\n      self.password = unencrypted_password\n      self.legacy_digest = nil\n      save!(validate: false)\n      self\n    elsif super(unencrypted_password)\n      self\n    else\n      false\n    end\n  end\n\n  private\n\n  def legacy_verify(raw)\n    Digest::SHA1.hexdigest("#{salt}#{raw}") == legacy_digest\n  end\nend\n'})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);