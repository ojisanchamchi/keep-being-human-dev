"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69997],{14501:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>g,toc:()=>r});const g=JSON.parse('{"id":"rails/logging/middle/tagged_logging","title":"tagged_logging","description":"\ud83c\udff7\ufe0f Tag Requests with TaggedLogging","source":"@site/docs/rails/logging/middle/tagged_logging.md","sourceDirName":"rails/logging/middle","slug":"/rails/logging/middle/tagged_logging","permalink":"/keep-being-human-dev/docs/rails/logging/middle/tagged_logging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/middle/tagged_logging.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"silence_logging","permalink":"/keep-being-human-dev/docs/rails/logging/middle/silence_logging"},"next":{"title":"async_mail_delivery","permalink":"/keep-being-human-dev/docs/rails/mailers/advanced/async_mail_delivery"}}');var t=i(23420),o=i(65404);const s={},a=void 0,l={},r=[{value:"\ud83c\udff7\ufe0f Tag Requests with TaggedLogging",id:"\ufe0f-tag-requests-with-taggedlogging",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-tag-requests-with-taggedlogging",children:"\ud83c\udff7\ufe0f Tag Requests with TaggedLogging"}),"\n",(0,t.jsxs)(n.p,{children:["TaggedLogging lets you add contextual tags (like request IDs or user IDs) to your logs, making it easier to filter and trace. By wrapping your ",(0,t.jsx)(n.code,{children:"Rails.logger"})," in ",(0,t.jsx)(n.code,{children:"ActiveSupport::TaggedLogging"}),", each log line will include the tags you set."]}),"\n",(0,t.jsx)(n.p,{children:"You can add tags in a controller or middleware:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# config/application.rb\nconfig.log_tags = [ :request_id, ->(req) { "User:#{req.session[:user_id]}" } ]\n\n# or manually in a controller\nclass ApplicationController < ActionController::Base\n  around_action :add_log_tags\n\n  private\n\n  def add_log_tags(&block)\n    Rails.logger.tagged("Session:", session.id) { block.call }\n  end\nend\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now each log entry will look like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'[Session:] [d3f2e1b4] Started GET "/" for 127.0.0.1\n'})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var g=i(36672);const t={},o=g.createContext(t);function s(e){const n=g.useContext(o);return g.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),g.createElement(o.Provider,{value:n},e.children)}}}]);