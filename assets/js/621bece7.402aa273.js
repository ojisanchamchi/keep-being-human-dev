"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[57686],{44967:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>f,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"rails/active_record_querying/beginner/find_vs_find_by","title":"find_vs_find_by","description":"\ud83c\udd94 find vs find_by","source":"@site/docs/rails/active_record_querying/beginner/find_vs_find_by.md","sourceDirName":"rails/active_record_querying/beginner","slug":"/rails/active_record_querying/beginner/find_vs_find_by","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/find_vs_find_by","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_querying/beginner/find_vs_find_by.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"find_or_create_by","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/find_or_create_by"},"next":{"title":"first_last","permalink":"/keep-being-human-dev/docs/rails/active_record_querying/beginner/first_last"}}');var s=i(23420),t=i(65404);const d={},c=void 0,o={},a=[{value:"\ud83c\udd94 <code>find</code> vs <code>find_by</code>",id:"-find-vs-find_by",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-find-vs-find_by",children:["\ud83c\udd94 ",(0,s.jsx)(n.code,{children:"find"})," vs ",(0,s.jsx)(n.code,{children:"find_by"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"find"})," retrieves a record by its primary key and raises an exception if not found. ",(0,s.jsx)(n.code,{children:"find_by"})," returns the first matching record or ",(0,s.jsx)(n.code,{children:"nil"})," when none exists. Use ",(0,s.jsx)(n.code,{children:"find_by"})," for safe lookups when the record might not exist."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# Raises ActiveRecord::RecordNotFound if ID 1 doesn't exist\nuser = User.find(1)\n\n# Returns nil if no user with email exists\nuser = User.find_by(email: 'user@example.com')\n"})})]})}function f(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var r=i(36672);const s={},t=r.createContext(s);function d(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);