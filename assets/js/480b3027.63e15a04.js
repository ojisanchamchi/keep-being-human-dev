"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[713],{65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>c});var r=a(36672);const t={},i=r.createContext(t);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(i.Provider,{value:n},e.children)}},92455:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"ruby/arrays/beginner/cleaning_arrays","title":"cleaning_arrays","description":"\ud83e\uddf9 Cleaning up Arrays with uniq and compact","source":"@site/docs/ruby/arrays/beginner/cleaning_arrays.md","sourceDirName":"ruby/arrays/beginner","slug":"/ruby/arrays/beginner/cleaning_arrays","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/cleaning_arrays","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/beginner/cleaning_arrays.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"array_creation","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/array_creation"},"next":{"title":"combining_arrays","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/combining_arrays"}}');var t=a(23420),i=a(65404);const s={},c=void 0,o={},u=[{value:"\ud83e\uddf9 Cleaning up Arrays with uniq and compact",id:"-cleaning-up-arrays-with-uniq-and-compact",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-cleaning-up-arrays-with-uniq-and-compact",children:"\ud83e\uddf9 Cleaning up Arrays with uniq and compact"}),"\n",(0,t.jsxs)(n.p,{children:["To remove duplicates use ",(0,t.jsx)(n.code,{children:"uniq"}),", and to drop ",(0,t.jsx)(n.code,{children:"nil"})," values use ",(0,t.jsx)(n.code,{children:"compact"}),". Chain them to clean data in one go."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"data = [1, nil, 2, 2, nil, 3]\n\nclean = data.uniq.compact  # => [1, 2, 3]\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);