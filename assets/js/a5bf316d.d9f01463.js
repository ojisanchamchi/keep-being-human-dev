"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[51231],{65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(36672);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},96555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ruby/json/beginner/json_file_io","title":"json_file_io","description":"\ud83d\udcc2 Read and Write JSON Files","source":"@site/docs/ruby/json/beginner/json_file_io.md","sourceDirName":"ruby/json/beginner","slug":"/ruby/json/beginner/json_file_io","permalink":"/keep-being-human-dev/docs/ruby/json/beginner/json_file_io","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/json/beginner/json_file_io.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"streaming_large_json_with_oj_schandler","permalink":"/keep-being-human-dev/docs/ruby/json/advanced/streaming_large_json_with_oj_schandler"},"next":{"title":"json_generate_basics","permalink":"/keep-being-human-dev/docs/ruby/json/beginner/json_generate_basics"}}');var s=t(23420),r=t(65404);const o={},a=void 0,d={},c=[{value:"\ud83d\udcc2 Read and Write JSON Files",id:"-read-and-write-json-files",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-read-and-write-json-files",children:"\ud83d\udcc2 Read and Write JSON Files"}),"\n",(0,s.jsxs)(n.p,{children:["Combining Ruby\u2019s ",(0,s.jsx)(n.code,{children:"File"})," class with ",(0,s.jsx)(n.code,{children:"json"})," makes it easy to persist data or load configurations. To read a JSON file, use ",(0,s.jsx)(n.code,{children:"File.read"})," and ",(0,s.jsx)(n.code,{children:"JSON.parse"}),". To write, use ",(0,s.jsx)(n.code,{children:"File.write"})," along with ",(0,s.jsx)(n.code,{children:"JSON.pretty_generate"})," for human-friendly formatting."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'require \'json\'\n\n# Writing to a file\ndata = { settings: { theme: "dark", notifications: true } }\nFile.write("config.json", JSON.pretty_generate(data))\n\n# Reading from a file\njson_text = File.read("config.json")\nconfig = JSON.parse(json_text)\nputs config["settings"]["theme"]  # => "dark"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.code,{children:"pretty_generate"})," adds newlines and indentation, making the JSON file easy to read and edit by hand."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);