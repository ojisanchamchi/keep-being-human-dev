"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27677],{9249:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/authentication_and_authorization/advanced/pundit_policy_caching","title":"pundit_policy_caching","description":"\ud83d\udee1\ufe0f Cache Pundit Policy Results with Redis","source":"@site/docs/rails/authentication_and_authorization/advanced/pundit_policy_caching.md","sourceDirName":"rails/authentication_and_authorization/advanced","slug":"/rails/authentication_and_authorization/advanced/pundit_policy_caching","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/pundit_policy_caching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/advanced/pundit_policy_caching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"multi_tenant_policy_scoping","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/advanced/multi_tenant_policy_scoping"},"next":{"title":"bcrypt_user_auth","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/bcrypt_user_auth"}}');var a=i(23420),c=i(65404);const o={},r=void 0,s={},d=[{value:"\ud83d\udee1\ufe0f Cache Pundit Policy Results with Redis",id:"\ufe0f-cache-pundit-policy-results-with-redis",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"\ufe0f-cache-pundit-policy-results-with-redis",children:"\ud83d\udee1\ufe0f Cache Pundit Policy Results with Redis"}),"\n",(0,a.jsx)(n.p,{children:"In high\u2011traffic endpoints, repeatedly instantiating Pundit policies can degrade performance. By caching policy decisions in Redis for the duration of a request (or a defined TTL), you can skip re\u2011evaluation for identical objects and actions."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# app/controllers/application_controller.rb\nclass ApplicationController < ActionController::Base\n  include Pundit\n\n  def policy_for(record)\n    cache_key = "policy:#{current_user.id}:#{record.class.name}:#{record.id}:#{action_name}"\n    Rails.cache.fetch(cache_key, expires_in: 5.minutes) do\n      super\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"# config/environments/production.rb\nRails.application.configure do\n  config.cache_store = :redis_cache_store, { url: ENV['REDIS_URL'], namespace: 'cache' }\nend\n"})}),"\n",(0,a.jsxs)(n.p,{children:["This memoizes ",(0,a.jsx)(n.code,{children:"policy"})," objects and ",(0,a.jsx)(n.code,{children:"authorize"})," checks, reducing DB calls and speeding up response times."]})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(36672);const a={},c=t.createContext(a);function o(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);