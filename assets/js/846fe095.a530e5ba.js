"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[20210],{65404:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>i});var t=n(36672);const r={},d=t.createContext(r);function s(e){const a=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(d.Provider,{value:a},e.children)}},93308:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"gems/faraday/advanced/faraday_custom_hmac_middleware","title":"faraday_custom_hmac_middleware","description":"\u2699\ufe0f Custom HMAC Authentication Middleware","source":"@site/docs/gems/faraday/advanced/faraday_custom_hmac_middleware.md","sourceDirName":"gems/faraday/advanced","slug":"/gems/faraday/advanced/faraday_custom_hmac_middleware","permalink":"/keep-being-human-dev/docs/gems/faraday/advanced/faraday_custom_hmac_middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/faraday/advanced/faraday_custom_hmac_middleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"faker_with_factorybot","permalink":"/keep-being-human-dev/docs/gems/faker/middle/faker_with_factorybot"},"next":{"title":"faraday_retry_exponential_backoff","permalink":"/keep-being-human-dev/docs/gems/faraday/advanced/faraday_retry_exponential_backoff"}}');var r=n(23420),d=n(65404);const s={},i=void 0,o={},c=[{value:"\u2699\ufe0f Custom HMAC Authentication Middleware",id:"\ufe0f-custom-hmac-authentication-middleware",level:2}];function u(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.h2,{id:"\ufe0f-custom-hmac-authentication-middleware",children:"\u2699\ufe0f Custom HMAC Authentication Middleware"}),"\n",(0,r.jsx)(a.p,{children:"For advanced security in Faraday, you can implement custom middleware to sign each request with HMAC instead of relying on external gems. This allows you to insert your own logic before the request is sent, compute signatures on headers or body, and ensure consistency across services."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:"# lib/faraday/middleware/hmac_auth.rb\nrequire 'openssl'\n\nmodule Faraday\n  class HmacAuth < Faraday::Middleware\n    def initialize(app, api_key:, secret:)\n      super(app)\n      @api_key = api_key\n      @secret  = secret\n    end\n\n    def call(env)\n      timestamp = Time.now.to_i.to_s\n      signature = OpenSSL::HMAC.hexdigest('SHA256', @secret, env.body.to_s + timestamp)\n\n      env.request_headers['X-Api-Key']    = @api_key\n      env.request_headers['X-Signature']  = signature\n      env.request_headers['X-Timestamp']  = timestamp\n\n      @app.call(env)\n    end\n  end\nend\n\n# Configuration in your client setup\nconnection = Faraday.new('https://api.example.com') do |f|\n  f.request :url_encoded\n  f.use Faraday::HmacAuth, api_key: ENV['API_KEY'], secret: ENV['API_SECRET']\n  f.adapter :net_http\nend\n"})})]})}function m(e={}){const{wrapper:a}={...(0,d.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);