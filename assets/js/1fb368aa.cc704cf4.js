"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[191],{65404:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>o});var i=n(36672);const r={},s=i.createContext(r);function t(e){const a=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:a},e.children)}},94141:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/api_mode/advanced/advanced_jsonapi_serializer","title":"advanced_jsonapi_serializer","description":"\ud83d\ude80 Advanced JSON:API Serialization","source":"@site/docs/rails/api_mode/advanced/advanced_jsonapi_serializer.md","sourceDirName":"rails/api_mode/advanced","slug":"/rails/api_mode/advanced/advanced_jsonapi_serializer","permalink":"/keep-being-human-dev/docs/rails/api_mode/advanced/advanced_jsonapi_serializer","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/api_mode/advanced/advanced_jsonapi_serializer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"use_time_current_for_timezone","permalink":"/keep-being-human-dev/docs/rails/active_support/middle/use_time_current_for_timezone"},"next":{"title":"custom_rack_middleware_injection","permalink":"/keep-being-human-dev/docs/rails/api_mode/advanced/custom_rack_middleware_injection"}}');var r=n(23420),s=n(65404);const t={},o=void 0,c={},d=[{value:"\ud83d\ude80 Advanced JSON Serialization",id:"-advanced-json-serialization",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.h2,{id:"-advanced-json-serialization",children:["\ud83d\ude80 Advanced JSON",":API"," Serialization"]}),"\n",(0,r.jsxs)(a.p,{children:["Leverage the ",(0,r.jsx)(a.code,{children:"jsonapi-serializer"})," gem for blazing\u2011fast serialization with support for relationships, sparse fieldsets, and caching. Predefine ",(0,r.jsx)(a.code,{children:"cache_options"})," to avoid repeated allocations and embed polymorphic associations gracefully."]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ruby",children:"# app/serializers/article_serializer.rb\nclass ArticleSerializer\n  include JSONAPI::Serializer\n  set_type :article\n  set_id :uuid  # use UUID or custom key\n\n  attributes :title, :published_at\n  belongs_to :author, serializer: UserSerializer\n  has_many :comments\n\n  # Enable fragment caching for each record\n  cache_options store: Rails.cache, namespace: 'jsonapi', expires_in: 1.hour\nend\n\n# Controller\nclass Api::V1::ArticlesController < ApplicationController\n  def index\n    articles = Article.includes(:author, :comments).page(params[:page])\n    render json: ArticleSerializer.new(articles, include: %i[author comments]).serializable_hash\n  end\nend\n"})})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);