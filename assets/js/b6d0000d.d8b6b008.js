"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38507],{48917:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/file_io/advanced/memory_mapped_file","title":"memory_mapped_file","description":"\ud83d\uddfa Memory-Mapped File Access","source":"@site/docs/ruby/file_io/advanced/memory_mapped_file.md","sourceDirName":"ruby/file_io/advanced","slug":"/ruby/file_io/advanced/memory_mapped_file","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/memory_mapped_file","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/advanced/memory_mapped_file.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"fcntl_flags","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/fcntl_flags"},"next":{"title":"nonblocking_io_select","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/nonblocking_io_select"}}');var r=a(23420),t=a(65404);const o={},s=void 0,c={},d=[{value:"\ud83d\uddfa Memory-Mapped File Access",id:"-memory-mapped-file-access",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-memory-mapped-file-access",children:"\ud83d\uddfa Memory-Mapped File Access"}),"\n",(0,r.jsxs)(n.p,{children:["Memory mapping a file lets the OS handle paging, which can yield significant performance improvements for random reads/writes on large data sets. Use the ",(0,r.jsx)(n.code,{children:"mmap"})," gem to map a file into Ruby\u2019s address space and treat it like a ",(0,r.jsx)(n.code,{children:"String"})," or ",(0,r.jsx)(n.code,{children:"IO"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"require 'mmap'\n\nmmap = Mmap.new('large.dat', Mmap::MAP_SHARED)\n# Read a slice without copying\nheader = mmap[0, 256]\n# Modify in-place\nmmap[10_000, 4] = [42].pack('L<')\nmmap.sync # flush changes to disk\nmmap.unmap\n"})}),"\n",(0,r.jsx)(n.p,{children:"This technique is ideal for binary protocols or database-like access patterns."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>s});var i=a(36672);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);