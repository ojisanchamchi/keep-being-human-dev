"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[65994],{56082:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/active_storage/middle/generating_and_displaying_variants","title":"generating_and_displaying_variants","description":"\ud83d\udcd0 Create and Display Image Variants","source":"@site/docs/rails/active_storage/middle/generating_and_displaying_variants.md","sourceDirName":"rails/active_storage/middle","slug":"/rails/active_storage/middle/generating_and_displaying_variants","permalink":"/keep-being-human-dev/docs/rails/active_storage/middle/generating_and_displaying_variants","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_storage/middle/generating_and_displaying_variants.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"direct_uploads_with_javascript","permalink":"/keep-being-human-dev/docs/rails/active_storage/middle/direct_uploads_with_javascript"},"next":{"title":"purging_unused_blobs_and_attachments","permalink":"/keep-being-human-dev/docs/rails/active_storage/middle/purging_unused_blobs_and_attachments"}}');var s=n(23420),i=n(65404);const r={},d=void 0,o={},c=[{value:"\ud83d\udcd0 Create and Display Image Variants",id:"-create-and-display-image-variants",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h2,{id:"-create-and-display-image-variants",children:"\ud83d\udcd0 Create and Display Image Variants"}),"\n",(0,s.jsx)(a.p,{children:"Active Storage can generate resized or cropped variants on the fly for responsive images. This helps you serve appropriately sized images without storing duplicates."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ruby",children:"# app/models/photo.rb\nclass Photo < ApplicationRecord\n  has_one_attached :image\n\n  def thumb\n    image.variant(resize_to_limit: [200, 200]).processed\n  end\nend\n"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-erb",children:'<%= image_tag @photo.thumb, alt: "Thumbnail" %>\n'})}),"\n",(0,s.jsxs)(a.p,{children:["Call ",(0,s.jsx)(a.code,{children:".processed"})," to force immediate processing (useful in tests or background jobs). Variants are cached, so subsequent requests are fast."]})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>d});var t=n(36672);const s={},i=t.createContext(s);function r(e){const a=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);