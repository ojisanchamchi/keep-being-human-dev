"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97010],{49052:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>n,toc:()=>m});const n=JSON.parse('{"id":"rails/logging/middle/custom_log_formatter","title":"custom_log_formatter","description":"\ud83c\udfa8 Implement a Custom Log Formatter","source":"@site/docs/rails/logging/middle/custom_log_formatter.md","sourceDirName":"rails/logging/middle","slug":"/rails/logging/middle/custom_log_formatter","permalink":"/keep-being-human-dev/docs/rails/logging/middle/custom_log_formatter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/middle/custom_log_formatter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"broadcast_to_multiple_loggers","permalink":"/keep-being-human-dev/docs/rails/logging/middle/broadcast_to_multiple_loggers"},"next":{"title":"environment_log_levels","permalink":"/keep-being-human-dev/docs/rails/logging/middle/environment_log_levels"}}');var r=o(23420),s=o(65404);const a={},i=void 0,l={},m=[{value:"\ud83c\udfa8 Implement a Custom Log Formatter",id:"-implement-a-custom-log-formatter",level:2}];function g(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-implement-a-custom-log-formatter",children:"\ud83c\udfa8 Implement a Custom Log Formatter"}),"\n",(0,r.jsxs)(t.p,{children:["Customizing your log format can help you include JSON output, timestamps, or specific fields. Create a class that responds to ",(0,r.jsx)(t.code,{children:"#call"})," and set it as the logger\u2019s formatter."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'# lib/json_log_formatter.rb\nclass JsonLogFormatter < Logger::Formatter\n  def call(severity, time, progname, msg)\n    { severity: severity,\n      time: time.utc.iso8601,\n      progname: progname,\n      message: String === msg ? msg : msg.inspect\n    }.to_json + "\\n"\n  end\nend\n\n# config/environments/production.rb\ngraph = ActiveSupport::Logger.new(STDOUT)\ngraph.formatter = JsonLogFormatter.new\nconfig.logger = ActiveSupport::TaggedLogging.new(graph)\n'})}),"\n",(0,r.jsx)(t.p,{children:"This produces structured JSON logs that are easy to index and query in external log management systems."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},65404:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var n=o(36672);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);