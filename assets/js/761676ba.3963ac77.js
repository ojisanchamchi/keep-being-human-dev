"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91809],{65404:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var a=n(36672);const t={},s=a.createContext(t);function i(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(s.Provider,{value:r},e.children)}},95701:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"ruby/arrays/beginner/array_creation","title":"array_creation","description":"\ud83c\udf89 Creating Arrays","source":"@site/docs/ruby/arrays/beginner/array_creation.md","sourceDirName":"ruby/arrays/beginner","slug":"/ruby/arrays/beginner/array_creation","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/array_creation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/arrays/beginner/array_creation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"adding_elements","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/adding_elements"},"next":{"title":"cleaning_arrays","permalink":"/keep-being-human-dev/docs/ruby/arrays/beginner/cleaning_arrays"}}');var t=n(23420),s=n(65404);const i={},o=void 0,c={},l=[{value:"\ud83c\udf89 Creating Arrays",id:"-creating-arrays",level:2}];function u(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"-creating-arrays",children:"\ud83c\udf89 Creating Arrays"}),"\n",(0,t.jsxs)(r.p,{children:["Ruby arrays can be created using the literal syntax ",(0,t.jsx)(r.code,{children:"[]"})," or the ",(0,t.jsx)(r.code,{children:"Array.new"})," constructor. Literals are concise for most use cases, while ",(0,t.jsx)(r.code,{children:"Array.new"})," allows you to set an initial size and a default value for each element."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ruby",children:"# Using a literal\nfruits = ['apple', 'banana', 'cherry']\n\n# Using Array.new for fixed size\nempty_slots = Array.new(5)            # => [nil, nil, nil, nil, nil]\n\n# With a default value\nzeros = Array.new(3, 0)               # => [0, 0, 0]\n"})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);