"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17729],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(36672);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},98229:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/forms/expert/i18n_and_accessibility","title":"i18n_and_accessibility","description":"\ud83c\udf10 Internationalization and Accessibility in Forms","source":"@site/docs/rails/forms/expert/i18n_and_accessibility.md","sourceDirName":"rails/forms/expert","slug":"/rails/forms/expert/i18n_and_accessibility","permalink":"/keep-being-human-dev/docs/rails/forms/expert/i18n_and_accessibility","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/forms/expert/i18n_and_accessibility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"form_object_pattern","permalink":"/keep-being-human-dev/docs/rails/forms/expert/form_object_pattern"},"next":{"title":"polymorphic_form_inputs","permalink":"/keep-being-human-dev/docs/rails/forms/expert/polymorphic_form_inputs"}}');var r=t(23420),s=t(65404);const a={},o=void 0,c={},d=[{value:"\ud83c\udf10 Internationalization and Accessibility in Forms",id:"-internationalization-and-accessibility-in-forms",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-internationalization-and-accessibility-in-forms",children:"\ud83c\udf10 Internationalization and Accessibility in Forms"}),"\n",(0,r.jsxs)(n.p,{children:["Combine Rails I18n with ARIA attributes to produce localized labels, placeholders, and error messages accessible to screen readers. Use ",(0,r.jsx)(n.code,{children:"t"})," helpers with interpolation and add ",(0,r.jsx)(n.code,{children:"aria-describedby"})," linking inputs to error or hint elements."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-erb",children:"<%= unified_form_with model: @order do |f| %>\n  <label for=\"order_quantity\"><%= t('orders.quantity') %></label>\n  <%= f.number_field :quantity,\n        placeholder: t('orders.quantity_hint'),\n        aria: { describedby: 'quantity_hint quantity_error' } %>\n\n  <small id=\"quantity_hint\" class=\"form-text text-muted\">\n    <%= t('orders.quantity_hint') %>\n  </small>\n  <% if @order.errors[:quantity].present? %>\n    <div id=\"quantity_error\" class=\"invalid-feedback\">\n      <%= @order.errors[:quantity].join(', ') %>\n    </div>\n  <% end %>\n\n  <%= f.submit t('orders.submit') %>\n<% end %>\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);