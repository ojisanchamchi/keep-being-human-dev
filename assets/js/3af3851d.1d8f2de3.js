"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[51708],{65404:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var s=n(36672);const r={},o=s.createContext(r);function d(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:t},e.children)}},66666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend","title":"stub_private_methods_with_prepend","description":"\ud83d\udd10 Stubbing Private Methods via Module#prepend","source":"@site/docs/gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend.md","sourceDirName":"gems/rspec/mocks_and_stubs/expert","slug":"/gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/mocks_and_stubs/expert/stub_private_methods_with_prepend.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"complex_block_yields_with_and_yield","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/complex_block_yields_with_and_yield"},"next":{"title":"verifying_module_methods_with_class_double","permalink":"/keep-being-human-dev/docs/gems/rspec/mocks_and_stubs/expert/verifying_module_methods_with_class_double"}}');var r=n(23420),o=n(65404);const d={},a=void 0,i={},p=[{value:"\ud83d\udd10 Stubbing Private Methods via <code>Module#prepend</code>",id:"-stubbing-private-methods-via-moduleprepend",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"-stubbing-private-methods-via-moduleprepend",children:["\ud83d\udd10 Stubbing Private Methods via ",(0,r.jsx)(t.code,{children:"Module#prepend"})]}),"\n",(0,r.jsx)(t.p,{children:"When you need to stub a private method without changing visibility, prepend a helper module to the singleton class. This allows you to override private behavior on a per\u2011instance basis for edge\u2011case tests."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"class Report\n  def generate\n    data = fetch_data\n    process(data)\n  end\n\n  private\n\n  def fetch_data\n    # expensive DB calls\n  end\nend\n\nRSpec.describe Report do\n  it 'stubs private #fetch_data via prepend' do\n    report = Report.new\n    mod = Module.new do\n      def fetch_data\n        { foo: 'bar' }\n      end\n    end\n    report.singleton_class.prepend(mod)\n\n    allow(report).to receive(:process).with(foo: 'bar').and_return('processed')\n    expect(report.generate).to eq('processed')\n  end\nend\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);