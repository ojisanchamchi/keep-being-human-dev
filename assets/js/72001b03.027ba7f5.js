"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[58862],{50084:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/active_record_validations/expert/optimize_validation_performance","title":"optimize_validation_performance","description":"\u26a1\ufe0f Optimizing Validation Performance","source":"@site/docs/rails/active_record_validations/expert/optimize_validation_performance.md","sourceDirName":"rails/active_record_validations/expert","slug":"/rails/active_record_validations/expert/optimize_validation_performance","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/optimize_validation_performance","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/expert/optimize_validation_performance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"json_schema_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/expert/json_schema_validation"},"next":{"title":"associated_models_validation","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/associated_models_validation"}}');var n=a(23420),o=a(65404);const r={},s=void 0,l={},c=[{value:"\u26a1\ufe0f Optimizing Validation Performance",id:"\ufe0f-optimizing-validation-performance",level:2}];function d(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"\ufe0f-optimizing-validation-performance",children:"\u26a1\ufe0f Optimizing Validation Performance"}),"\n",(0,n.jsxs)(i.p,{children:["Skip expensive validations in bulk operations by using ",(0,n.jsx)(i.code,{children:"update_all"})," or ",(0,n.jsx)(i.code,{children:"import"})," for read-only data loads. For filtered models, conditionally disable validations or wrap in ",(0,n.jsx)(i.code,{children:"ActiveRecord::Base.without_callbacks"})," to bypass unneeded callbacks."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-ruby",children:"# Bulk import without validations\nUser.import columns: [:name, :email], values: big_array_of_values, validate: false\n\n# Temporarily skip callbacks\nUser.skip_callback(:validation, :before, :normalize_email)\nusers = User.where(active: true).to_a\nUser.set_callback(:validation, :before, :normalize_email)\n"})})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},65404:(e,i,a)=>{a.d(i,{R:()=>r,x:()=>s});var t=a(36672);const n={},o=t.createContext(n);function r(e){const i=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);