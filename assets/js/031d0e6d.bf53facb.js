"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42936],{28311:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/views/expert/nested_fragment_caching_strategies","title":"nested_fragment_caching_strategies","description":"\ud83d\ude80 Advanced Nested Fragment Caching with Russian Doll","source":"@site/docs/rails/views/expert/nested_fragment_caching_strategies.md","sourceDirName":"rails/views/expert","slug":"/rails/views/expert/nested_fragment_caching_strategies","permalink":"/keep-being-human-dev/docs/rails/views/expert/nested_fragment_caching_strategies","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/views/expert/nested_fragment_caching_strategies.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"mustache_template_integration","permalink":"/keep-being-human-dev/docs/rails/views/expert/mustache_template_integration"},"next":{"title":"sse_in_views","permalink":"/keep-being-human-dev/docs/rails/views/expert/sse_in_views"}}');var a=t(23420),i=t(65404);const r={},c=void 0,o={},d=[{value:"\ud83d\ude80 Advanced Nested Fragment Caching with Russian Doll",id:"-advanced-nested-fragment-caching-with-russian-doll",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-advanced-nested-fragment-caching-with-russian-doll",children:"\ud83d\ude80 Advanced Nested Fragment Caching with Russian Doll"}),"\n",(0,a.jsx)(n.p,{children:"Achieve near-instant page renders by combining Russian doll caching, conditional cache keys, and touch-based expiration for models with complex associations."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-erb",children:"<% cache [@post, @post.comments.maximum(:updated_at)] do %>\n  <%= render @post.comments %>\n<% end %>\n\n<% cache [comment, comment.replies.maximum(:updated_at)] do %>\n  <%= render comment.replies %>\n<% end %>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Ensure to ",(0,a.jsx)(n.code,{children:"touch: true"})," on associations:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"has_many :comments, dependent: :destroy, touch: true\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(36672);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);