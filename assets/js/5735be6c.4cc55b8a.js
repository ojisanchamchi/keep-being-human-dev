"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[59689],{65404:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(36672);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},68318:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/authentication_and_authorization/beginner/sessions_controller_setup","title":"sessions_controller_setup","description":"\ud83d\udd12 Create SessionsController for Login/Logout","source":"@site/docs/rails/authentication_and_authorization/beginner/sessions_controller_setup.md","sourceDirName":"rails/authentication_and_authorization/beginner","slug":"/rails/authentication_and_authorization/beginner/sessions_controller_setup","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/sessions_controller_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/beginner/sessions_controller_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"before_action_authentication","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/before_action_authentication"},"next":{"title":"simple_role_authorization","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/beginner/simple_role_authorization"}}');var s=o(23420),r=o(65404);const i={},a=void 0,l={},c=[{value:"\ud83d\udd12 Create <code>SessionsController</code> for Login/Logout",id:"-create-sessionscontroller-for-loginlogout",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-create-sessionscontroller-for-loginlogout",children:["\ud83d\udd12 Create ",(0,s.jsx)(n.code,{children:"SessionsController"})," for Login/Logout"]}),"\n",(0,s.jsxs)(n.p,{children:["A sessions controller is the conventional way to manage user login and logout. You will handle setting and clearing the ",(0,s.jsx)(n.code,{children:"session[:user_id]"})," to track signed\u2010in users."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Generate the controller:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"rails generate controller Sessions new create destroy\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Implement login and logout actions:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"class SessionsController < ApplicationController\n  def new\n  end\n\n  def create\n    user = User.find_by(email: params[:email])\n    if user&.authenticate(params[:password])\n      session[:user_id] = user.id\n      redirect_to root_path, notice: 'Logged in successfully'\n    else\n      flash.now[:alert] = 'Invalid email or password'\n      render :new\n    end\n  end\n\n  def destroy\n    session.delete(:user_id)\n    redirect_to login_path, notice: 'Logged out successfully'\n  end\nend\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Add routes:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# config/routes.rb\nget 'login', to: 'sessions#new'\npost 'login', to: 'sessions#create'\ndelete 'logout', to: 'sessions#destroy'\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);