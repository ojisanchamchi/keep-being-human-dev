"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[84581],{37165:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/metaprogramming/advanced/tracepoint_monitoring","title":"tracepoint_monitoring","description":"\ud83d\udd0d Runtime inspection with TracePoint","source":"@site/docs/ruby/metaprogramming/advanced/tracepoint_monitoring.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/tracepoint_monitoring","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/tracepoint_monitoring","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/tracepoint_monitoring.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"runtime_refinements","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/runtime_refinements"},"next":{"title":"unbound_method_binding","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/unbound_method_binding"}}');var r=t(23420),o=t(65404);const a={},c=void 0,s={},d=[{value:"\ud83d\udd0d Runtime inspection with <code>TracePoint</code>",id:"-runtime-inspection-with-tracepoint",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-runtime-inspection-with-tracepoint",children:["\ud83d\udd0d Runtime inspection with ",(0,r.jsx)(n.code,{children:"TracePoint"})]}),"\n",(0,r.jsxs)(n.p,{children:["Leverage ",(0,r.jsx)(n.code,{children:"TracePoint"})," to hook into Ruby internals (calls, returns, line execution) for profiling or live instrumentation. This low\u2011level API provides granular control over event handling."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'trace = TracePoint.new(:call) do |tp|\n  puts "Calling #{tp.method_id} in #{tp.defined_class}"\nend\n\ntrace.enable\nSomeClass.new.some_method\ntrace.disable\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(36672);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);