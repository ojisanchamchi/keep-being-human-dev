"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22428],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var a=n(36672);const r={},s=a.createContext(r);function i(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:t},e.children)}},88025:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"ruby/syntax/middle/array_tally","title":"array_tally","description":"\ud83d\udcca Counting with Array#tally","source":"@site/docs/ruby/syntax/middle/array_tally.md","sourceDirName":"ruby/syntax/middle","slug":"/ruby/syntax/middle/array_tally","permalink":"/keep-being-human-dev/docs/ruby/syntax/middle/array_tally","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/syntax/middle/array_tally.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"yield_self_then","permalink":"/keep-being-human-dev/docs/ruby/syntax/expert/yield_self_then"},"next":{"title":"destructuring_assignment","permalink":"/keep-being-human-dev/docs/ruby/syntax/middle/destructuring_assignment"}}');var r=n(23420),s=n(65404);const i={},l=void 0,o={},c=[{value:"\ud83d\udcca Counting with <code>Array#tally</code>",id:"-counting-with-arraytally",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"-counting-with-arraytally",children:["\ud83d\udcca Counting with ",(0,r.jsx)(t.code,{children:"Array#tally"})]}),"\n",(0,r.jsxs)(t.p,{children:["Introduced in Ruby 2.7, ",(0,r.jsx)(t.code,{children:"tally"})," counts occurrences of elements in an array and returns a hash. It\u2019s the quickest way to get frequency distributions."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:'items = ["apple", "banana", "apple", "orange", "banana"]\ncounts = items.tally\n# => { "apple" => 2, "banana" => 2, "orange" => 1 }\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);