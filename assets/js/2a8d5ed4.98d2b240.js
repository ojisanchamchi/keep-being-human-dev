"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69282],{54326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"rails/websockets/middle/connection_authorization","title":"connection_authorization","description":"\ud83d\udee1\ufe0f Securing Connections with Authorization","source":"@site/docs/rails/websockets/middle/connection_authorization.md","sourceDirName":"rails/websockets/middle","slug":"/rails/websockets/middle/connection_authorization","permalink":"/keep-being-human-dev/docs/rails/websockets/middle/connection_authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/websockets/middle/connection_authorization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"broadcast_to_user","permalink":"/keep-being-human-dev/docs/rails/websockets/middle/broadcast_to_user"},"next":{"title":"redis_adapter_optimization","permalink":"/keep-being-human-dev/docs/rails/websockets/middle/redis_adapter_optimization"}}');var o=t(23420),s=t(65404);const r={},c=void 0,a={},d=[{value:"\ud83d\udee1\ufe0f Securing Connections with Authorization",id:"\ufe0f-securing-connections-with-authorization",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-securing-connections-with-authorization",children:"\ud83d\udee1\ufe0f Securing Connections with Authorization"}),"\n",(0,o.jsxs)(n.p,{children:["Ensure only authenticated users can open WebSocket connections by identifying them in ",(0,o.jsx)(n.code,{children:"Connection"})," and rejecting unauthorized attempts. This guards your channels from unwanted access."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# app/channels/application_cable/connection.rb\nmodule ApplicationCable\n  class Connection < ActionCable::Connection::Base\n    identified_by :current_user\n\n    def connect\n      self.current_user = find_verified_user\n    end\n\n    private\n\n    def find_verified_user\n      if (user = User.find_by(id: cookies.signed[:user_id]))\n        user\n      else\n        reject_unauthorized_connection\n      end\n    end\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(36672);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);