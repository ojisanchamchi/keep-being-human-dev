"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[97352],{32569:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/data_types/middle/frozen_string_literals","title":"frozen_string_literals","description":"\u2744\ufe0f Freeze Strings for Improved Performance","source":"@site/docs/ruby/data_types/middle/frozen_string_literals.md","sourceDirName":"ruby/data_types/middle","slug":"/ruby/data_types/middle/frozen_string_literals","permalink":"/keep-being-human-dev/docs/ruby/data_types/middle/frozen_string_literals","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/data_types/middle/frozen_string_literals.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"array_destructuring_splat","permalink":"/keep-being-human-dev/docs/ruby/data_types/middle/array_destructuring_splat"},"next":{"title":"hash_default_proc","permalink":"/keep-being-human-dev/docs/ruby/data_types/middle/hash_default_proc"}}');var s=n(23420),a=n(65404);const i={},o=void 0,d={},l=[{value:"\u2744\ufe0f Freeze Strings for Improved Performance",id:"\ufe0f-freeze-strings-for-improved-performance",level:2}];function c(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"\ufe0f-freeze-strings-for-improved-performance",children:"\u2744\ufe0f Freeze Strings for Improved Performance"}),"\n",(0,s.jsxs)(r.p,{children:["Mutating string literals creates new objects and increases GC pressure. Use the frozen string literal pragma or ",(0,s.jsx)(r.code,{children:"String#freeze"})," to prevent unnecessary allocations."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:'# Magic comment at the top of your file:\n# frozen_string_literal: true\n\ndef greet(name)\n  # name << "!"  # => raises RuntimeError: can\'t modify frozen String\n  "Hello, #{name}!"  # no new literal allocated for \'Hello, \'\nend\n\n# Explicit freezing\ngreeting = "Welcome".freeze\nputs greeting.frozen?  # => true\n# greeting << "!"    # => RuntimeError: can\'t modify frozen String\n'})}),"\n",(0,s.jsxs)(r.p,{children:["Enabling ",(0,s.jsx)(r.code,{children:"frozen_string_literal"})," in modern Ruby (>= 2.3) reduces transient string churn and speeds up your application."]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var t=n(36672);const s={},a=t.createContext(s);function i(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);