"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29887],{26769:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"rails/middleware/advanced/middleware_stack_inspection","title":"middleware_stack_inspection","description":"\ud83d\udd0d Middleware Stack Inspection and Modification at Runtime","source":"@site/docs/rails/middleware/advanced/middleware_stack_inspection.md","sourceDirName":"rails/middleware/advanced","slug":"/rails/middleware/advanced/middleware_stack_inspection","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/middleware_stack_inspection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/middleware/advanced/middleware_stack_inspection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_logging_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/custom_logging_middleware"},"next":{"title":"response_timing_middleware","permalink":"/keep-being-human-dev/docs/rails/middleware/advanced/response_timing_middleware"}}');var d=n(23420),t=n(65404);const r={},s=void 0,c={},o=[{value:"\ud83d\udd0d Middleware Stack Inspection and Modification at Runtime",id:"-middleware-stack-inspection-and-modification-at-runtime",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.h2,{id:"-middleware-stack-inspection-and-modification-at-runtime",children:"\ud83d\udd0d Middleware Stack Inspection and Modification at Runtime"}),"\n",(0,d.jsxs)(i.p,{children:["Advanced debugging may require inspecting or modifying the middleware stack on the fly. Use ",(0,d.jsx)(i.code,{children:"Rails.application.middleware"})," to list, insert, delete, or swap middlewares dynamically, even in a console or during an initializer."]}),"\n",(0,d.jsx)(i.pre,{children:(0,d.jsx)(i.code,{className:"language-ruby",children:'# Inspect current stack\nRails.application.middleware.each_with_index do |middleware, index|\n  puts "#{index}: #{middleware.klass} (args: #{middleware.args})"\nend\n\n# Remove a middleware\nRails.application.middleware.delete Rack::Runtime\n\n# Swap two middlewares\nstack = Rails.application.middleware\nruntime_index = stack.index { |m| m.klass == Rack::Runtime }\nlogger_index  = stack.index { |m| m.klass == Rails::Rack::Logger }\nstack.swap(runtime_index, logger_index) if runtime_index && logger_index\n'})})]})}function m(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},65404:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>s});var a=n(36672);const d={},t=a.createContext(d);function r(e){const i=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),a.createElement(t.Provider,{value:i},e.children)}}}]);