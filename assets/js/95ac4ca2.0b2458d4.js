"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[83327],{65404:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(36672);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},83459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/yaml/expert/secure_yaml_safe_load","title":"secure_yaml_safe_load","description":"\ud83d\udd12 Advanced Safe Loading with Custom Whitelists","source":"@site/docs/ruby/yaml/expert/secure_yaml_safe_load.md","sourceDirName":"ruby/yaml/expert","slug":"/ruby/yaml/expert/secure_yaml_safe_load","permalink":"/keep-being-human-dev/docs/ruby/yaml/expert/secure_yaml_safe_load","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/yaml/expert/secure_yaml_safe_load.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_psych_domain_type","permalink":"/keep-being-human-dev/docs/ruby/yaml/expert/custom_psych_domain_type"},"next":{"title":"streaming_yaml_parser","permalink":"/keep-being-human-dev/docs/ruby/yaml/expert/streaming_yaml_parser"}}');var a=n(23420),r=n(65404);const o={},i=void 0,d={},c=[{value:"\ud83d\udd12 Advanced Safe Loading with Custom Whitelists",id:"-advanced-safe-loading-with-custom-whitelists",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-advanced-safe-loading-with-custom-whitelists",children:"\ud83d\udd12 Advanced Safe Loading with Custom Whitelists"}),"\n",(0,a.jsxs)(t.p,{children:["Ruby\u2019s ",(0,a.jsx)(t.code,{children:"YAML.load"})," can introduce security risks by instantiating arbitrary objects. Use ",(0,a.jsx)(t.code,{children:"Psych.safe_load"})," with explicit ",(0,a.jsx)(t.code,{children:"permitted_classes"}),", ",(0,a.jsx)(t.code,{children:"permitted_symbols"}),", and alias support to whitelist only trusted constructs. After loading, deep\u2011freeze the resulting structure to prevent post\u2011load modifications and enforce immutability."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"require 'yaml'\nrequire 'date'\n\noptions = {\n  permitted_classes: [Date, Time],\n  permitted_symbols: [:enabled, :threshold],\n  aliases: true\n}\n\ndata = YAML.safe_load(File.read('config.yaml'), **options)\n\ndef deep_freeze(obj)\n  case obj\n  when Hash\n    obj.each_value { |v| deep_freeze(v) }\n    obj.freeze\n  when Array\n    obj.each { |v| deep_freeze(v) }\n    obj.freeze\n  else\n    obj.freeze\n  end\nend\n\ndeep_freeze(data)\nputs data.inspect\n"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);