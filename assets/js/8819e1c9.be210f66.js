"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[1555],{61066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"javascript/stimulus/expert/modal_lazy_connect","title":"modal_lazy_connect","description":"\ud83d\udeaa Lazy-Load Controllers in Modals","source":"@site/docs/javascript/stimulus/expert/modal_lazy_connect.md","sourceDirName":"javascript/stimulus/expert","slug":"/javascript/stimulus/expert/modal_lazy_connect","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/modal_lazy_connect","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/expert/modal_lazy_connect.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lifecycle_hooks","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/lifecycle_hooks"},"next":{"title":"nested_controller_comm","permalink":"/keep-being-human-dev/docs/javascript/stimulus/expert/nested_controller_comm"}}');var a=n(23420),s=n(65404);const r={},c=void 0,l={},i=[{value:"\ud83d\udeaa Lazy-Load Controllers in Modals",id:"-lazy-load-controllers-in-modals",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-lazy-load-controllers-in-modals",children:"\ud83d\udeaa Lazy-Load Controllers in Modals"}),"\n",(0,a.jsxs)(t.p,{children:["Modals often hold many controllers that aren\u2019t needed until opened. Use ",(0,a.jsx)(t.code,{children:"MutationObserver"})," to detect when the modal content is injected and then call ",(0,a.jsx)(t.code,{children:"application.load()"})," or dynamic import."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:"import { Application } from '@hotwired/stimulus'\nconst application = Application.start()\n\nconst observer = new MutationObserver(mutations => {\n  mutations.forEach(m => {\n    if (m.addedNodes.length && m.target.id === 'modal-container') {\n      // load controllers inside modal\n      application.load(m.addedNodes[0])\n    }\n  })\n})\n\nobserver.observe(document.body, { childList: true, subtree: true })\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(36672);const a={},s=o.createContext(a);function r(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);