"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[74638],{50081:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"ruby/marshal/advanced/selective_ivars_with_marshal_dump","title":"selective_ivars_with_marshal_dump","description":"\ud83d\udd01 Selective Serialization of Instance Variables","source":"@site/docs/ruby/marshal/advanced/selective_ivars_with_marshal_dump.md","sourceDirName":"ruby/marshal/advanced","slug":"/ruby/marshal/advanced/selective_ivars_with_marshal_dump","permalink":"/keep-being-human-dev/docs/ruby/marshal/advanced/selective_ivars_with_marshal_dump","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/marshal/advanced/selective_ivars_with_marshal_dump.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_dump_load_versioning","permalink":"/keep-being-human-dev/docs/ruby/marshal/advanced/custom_dump_load_versioning"},"next":{"title":"streaming_with_compression","permalink":"/keep-being-human-dev/docs/ruby/marshal/advanced/streaming_with_compression"}}');var t=n(23420),r=n(65404);const i={},c=void 0,d={},o=[{value:"\ud83d\udd01 Selective Serialization of Instance Variables",id:"-selective-serialization-of-instance-variables",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h2,{id:"-selective-serialization-of-instance-variables",children:"\ud83d\udd01 Selective Serialization of Instance Variables"}),"\n",(0,t.jsxs)(a.p,{children:["Use ",(0,t.jsx)(a.code,{children:"marshal_dump"})," and ",(0,t.jsx)(a.code,{children:"marshal_load"})," to include only essential instance variables, skipping caches or transient state. This leads to leaner dumps and avoids serializing sensitive or bulky data."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-ruby",children:"class Config\n  def initialize(params)\n    @params = params\n    @cache  = compute_cache(params)\n  end\n\n  # Only serialize @params, skip @cache\n  def marshal_dump\n    @params\n  end\n\n  def marshal_load(data)\n    @params = data\n    # Reconstruct transient cache after loading\n    @cache = compute_cache(@params)\n  end\n\n  private\n\n  def compute_cache(params)\n    # expensive computation\n    params.values.sum\n  end\nend\n\n# Usage:\ncfg = Config.new(foo: 1, bar: 2)\ndata = Marshal.dump(cfg)\nnew_cfg = Marshal.load(data)\n"})})]})}function m(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>c});var s=n(36672);const t={},r=s.createContext(t);function i(e){const a=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);