"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[80796],{65404:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var a=t(36672);const i={},s=a.createContext(i);function l(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:n},e.children)}},73777:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rails/i18n/advanced/advanced_pluralization","title":"advanced_pluralization","description":"\ufe0f\u20e3 Advanced Pluralization with Multiple Counts","source":"@site/docs/rails/i18n/advanced/advanced_pluralization.md","sourceDirName":"rails/i18n/advanced","slug":"/rails/i18n/advanced/advanced_pluralization","permalink":"/keep-being-human-dev/docs/rails/i18n/advanced/advanced_pluralization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/i18n/advanced/advanced_pluralization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tag_helper_void_elements","permalink":"/keep-being-human-dev/docs/rails/helpers/middle/tag_helper_void_elements"},"next":{"title":"custom_db_backend","permalink":"/keep-being-human-dev/docs/rails/i18n/advanced/custom_db_backend"}}');var i=t(23420),s=t(65404);const l={},r=void 0,o={},c=[{value:"#\ufe0f\u20e3 Advanced Pluralization with Multiple Counts",id:"\ufe0f\u20e3-advanced-pluralization-with-multiple-counts",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f\u20e3-advanced-pluralization-with-multiple-counts",children:"#\ufe0f\u20e3 Advanced Pluralization with Multiple Counts"}),"\n",(0,i.jsxs)(n.p,{children:["Rails I18n supports single-variable pluralization out of the box. To handle multiple counts (e.g., items and sellers), define composite keys and pass both counts to ",(0,i.jsx)(n.code,{children:"I18n.t"}),", allowing context-aware messages."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# config/locales/en.yml\nen:\n  cart:\n    items:\n      zero: "Your cart is empty."\n      one: "You have %{count_items} item from %{count_sellers} seller."\n      other: "You have %{count_items} items from %{count_sellers} sellers."\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Usage in helper or model\ndef cart_status(cart)\n  I18n.t(\n    'cart.items', \n    count: cart.items.size,      # triggers pluralization\n    count_items: cart.items.size,\n    count_sellers: cart.sellers.size\n  )\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);