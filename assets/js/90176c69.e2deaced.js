"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[32630],{63909:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/procs_and_lambdas/advanced/dynamic_method_definitions","title":"dynamic_method_definitions","description":"\ud83d\udee0\ufe0f Dynamic Method Creation with Lambdas","source":"@site/docs/ruby/procs_and_lambdas/advanced/dynamic_method_definitions.md","sourceDirName":"ruby/procs_and_lambdas/advanced","slug":"/ruby/procs_and_lambdas/advanced/dynamic_method_definitions","permalink":"/keep-being-human-dev/docs/ruby/procs_and_lambdas/advanced/dynamic_method_definitions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/procs_and_lambdas/advanced/dynamic_method_definitions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"destructuring_parameters","permalink":"/keep-being-human-dev/docs/ruby/procs_and_lambdas/advanced/destructuring_parameters"},"next":{"title":"error_handling_wrappers","permalink":"/keep-being-human-dev/docs/ruby/procs_and_lambdas/advanced/error_handling_wrappers"}}');var d=a(23420),r=a(65404);const s={},o=void 0,i={},c=[{value:"\ud83d\udee0\ufe0f Dynamic Method Creation with Lambdas",id:"\ufe0f-dynamic-method-creation-with-lambdas",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h2,{id:"\ufe0f-dynamic-method-creation-with-lambdas",children:"\ud83d\udee0\ufe0f Dynamic Method Creation with Lambdas"}),"\n",(0,d.jsxs)(n.p,{children:["Use ",(0,d.jsx)(n.code,{children:"define_method"})," alongside lambdas to generate methods on-the-fly, enabling DSLs or dynamic proxies. This pattern is powerful for metaprogramming libraries or when adapting to external schemas at runtime."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ruby",children:'class APIClient\n  {get:  :fetch, post: :create, delete: :remove}.each do |http_verb, method_name|\n    define_method(method_name) do |path, payload = {}|\n      -> { make_request(http_verb, path, payload) }.call\n    end\n  end\n\n  private\n  def make_request(verb, path, data)\n    # ... HTTP logic ...\n  end\nend\n\nclient = APIClient.new\nclient.fetch("/users")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(m,{...e})}):m(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(36672);const d={},r=t.createContext(d);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);