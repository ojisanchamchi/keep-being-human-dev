"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[17003],{53238:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"rails/mailers/advanced/custom_delivery_method","title":"custom_delivery_method","description":"\ud83d\udd0c Custom Delivery Method Integration","source":"@site/docs/rails/mailers/advanced/custom_delivery_method.md","sourceDirName":"rails/mailers/advanced","slug":"/rails/mailers/advanced/custom_delivery_method","permalink":"/keep-being-human-dev/docs/rails/mailers/advanced/custom_delivery_method","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/mailers/advanced/custom_delivery_method.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"async_mail_delivery","permalink":"/keep-being-human-dev/docs/rails/mailers/advanced/async_mail_delivery"},"next":{"title":"dynamic_subjects_i18n","permalink":"/keep-being-human-dev/docs/rails/mailers/advanced/dynamic_subjects_i18n"}}');var r=t(23420),a=t(65404);const s={},o=void 0,d={},l=[{value:"\ud83d\udd0c Custom Delivery Method Integration",id:"-custom-delivery-method-integration",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-custom-delivery-method-integration",children:"\ud83d\udd0c Custom Delivery Method Integration"}),"\n",(0,r.jsxs)(n.p,{children:["Implement a custom delivery method to integrate with third-party APIs or specialized SMTP services. Create a Ruby class responding to ",(0,r.jsx)(n.code,{children:"deliver!"})," and register it in ",(0,r.jsx)(n.code,{children:"config.action_mailer"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# lib/mailers/delivery/postmark_client.rb\nmodule Mailers\n  module Delivery\n    class PostmarkClient\n      def initialize(values);\n        @values = values\n      end\n\n      def deliver!\n        Postmark::ApiClient.new(ENV['POSTMARK_API_TOKEN'])\n          .deliver(@values)\n      end\n    end\n  end\nend\n\n# config/environments/production.rb\nRails.application.configure do\n  config.action_mailer.delivery_method = :postmark_client\n  config.action_mailer.postmark_client_settings = {}\nend\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(36672);const r={},a=i.createContext(r);function s(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);