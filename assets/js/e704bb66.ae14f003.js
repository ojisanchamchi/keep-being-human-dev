"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[25115],{65404:(e,a,s)=>{s.d(a,{R:()=>r,x:()=>o});var t=s(36672);const c={},n=t.createContext(c);function r(e){const a=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(n.Provider,{value:a},e.children)}},74275:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"gems/rspec/custom_matchers/advanced/diffable_custom_matchers","title":"diffable_custom_matchers","description":"\ud83d\udcdd Leveraging diffable for Improved Failure Messages","source":"@site/docs/gems/rspec/custom_matchers/advanced/diffable_custom_matchers.md","sourceDirName":"gems/rspec/custom_matchers/advanced","slug":"/gems/rspec/custom_matchers/advanced/diffable_custom_matchers","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/advanced/diffable_custom_matchers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/rspec/custom_matchers/advanced/diffable_custom_matchers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"chainable_custom_matchers","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/advanced/chainable_custom_matchers"},"next":{"title":"parameterized_block_matchers","permalink":"/keep-being-human-dev/docs/gems/rspec/custom_matchers/advanced/parameterized_block_matchers"}}');var c=s(23420),n=s(65404);const r={},o=void 0,d={},i=[{value:"\ud83d\udcdd Leveraging diffable for Improved Failure Messages",id:"-leveraging-diffable-for-improved-failure-messages",level:2}];function m(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(a.h2,{id:"-leveraging-diffable-for-improved-failure-messages",children:"\ud83d\udcdd Leveraging diffable for Improved Failure Messages"}),"\n",(0,c.jsxs)(a.p,{children:["When comparing complex objects, adding ",(0,c.jsx)(a.code,{children:"diffable"})," in your matcher enables side-by-side diffs on failure. You capture both expected and actual values, then let RSpec show granular differences automatically."]}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-ruby",children:"# spec/support/matchers/have_person_attributes.rb\nRSpec::Matchers.define :have_person_attributes do |expected|\n  match do |actual|\n    @actual = actual.attributes.slice('name', 'age', 'email')\n    @expected = expected.slice(:name, :age, :email)\n    @actual == @expected\n  end\n\n  diffable\n\n  failure_message do\n    \"expected person to have attributes #{expected.inspect}, but got #{@actual.inspect}\"\n  end\nend\n"})}),"\n",(0,c.jsx)(a.p,{children:"Usage:"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-ruby",children:"person = Person.new(name: 'Alice', age: 30, email: 'a@example.com')\nexpect(person).to have_person_attributes(name: 'Bob', age: 30, email: 'a@example.com')\n"})})]})}function l(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(m,{...e})}):m(e)}}}]);