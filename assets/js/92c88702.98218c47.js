"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[63118],{59213:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rails/forms/advanced/multi_step_form_wizard","title":"multi_step_form_wizard","description":"\ud83d\udee3\ufe0f Multi-step Form Wizard with Wicked","source":"@site/docs/rails/forms/advanced/multi_step_form_wizard.md","sourceDirName":"rails/forms/advanced","slug":"/rails/forms/advanced/multi_step_form_wizard","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/multi_step_form_wizard","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/forms/advanced/multi_step_form_wizard.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"form_object_with_reform","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/form_object_with_reform"},"next":{"title":"checkbox_and_radio","permalink":"/keep-being-human-dev/docs/rails/forms/beginner/checkbox_and_radio"}}');var s=n(23420),t=n(65404);const a={},o=void 0,d={},c=[{value:"\ud83d\udee3\ufe0f Multi-step Form Wizard with Wicked",id:"\ufe0f-multi-step-form-wizard-with-wicked",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"\ufe0f-multi-step-form-wizard-with-wicked",children:"\ud83d\udee3\ufe0f Multi-step Form Wizard with Wicked"}),"\n",(0,s.jsx)(r.p,{children:"Implement multi-page forms using the Wicked gem to manage steps, validations, and state transitions. Wicked provides a DSL for defining steps and progress indicators in your controller."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# app/controllers/registrations_controller.rb\nclass RegistrationsController < ApplicationController\n  include Wicked::Wizard\n  steps :personal, :address, :confirm\n\n  def show\n    @user = User.find_or_initialize_by(id: session[:user_id])\n    render_wizard\n  end\n\n  def update\n    @user = User.find_or_initialize_by(id: session[:user_id])\n    @user.update(user_params)\n    session[:user_id] = @user.id\n    render_wizard @user\n  end\n\n  private\n\n  def user_params\n    params.require(:user).permit(:name, :email, :street, :city)\n  end\nend\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-erb",children:"\x3c!-- app/views/registrations/personal.html.erb --\x3e\n<%= form_with model: @user, url: wizard_path do |f| %>\n  <%= f.text_field :name %>\n  <%= f.email_field :email %>\n  <%= f.submit 'Next' %>\n<% end %>\n"})})]})}function m(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var i=n(36672);const s={},t=i.createContext(s);function a(e){const r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);