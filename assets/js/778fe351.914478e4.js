"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49581],{26260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ruby/net_http/beginner/post_json_request","title":"post_json_request","description":"\ud83d\udce4 Sending a POST Request with JSON","source":"@site/docs/ruby/net_http/beginner/post_json_request.md","sourceDirName":"ruby/net_http/beginner","slug":"/ruby/net_http/beginner/post_json_request","permalink":"/keep-being-human-dev/docs/ruby/net_http/beginner/post_json_request","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/net_http/beginner/post_json_request.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"https_ssl_configuration","permalink":"/keep-being-human-dev/docs/ruby/net_http/beginner/https_ssl_configuration"},"next":{"title":"persistent_connection_pooling","permalink":"/keep-being-human-dev/docs/ruby/net_http/expert/persistent_connection_pooling"}}');var o=n(23420),r=n(65404);const i={},u=void 0,p={},a=[{value:"\ud83d\udce4 Sending a POST Request with JSON",id:"-sending-a-post-request-with-json",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-sending-a-post-request-with-json",children:"\ud83d\udce4 Sending a POST Request with JSON"}),"\n",(0,o.jsxs)(t.p,{children:["Use ",(0,o.jsx)(t.code,{children:"Net::HTTP"})," to send a POST request with a JSON payload. Set the ",(0,o.jsx)(t.code,{children:"Content-Type"})," header and convert a Ruby hash to JSON using ",(0,o.jsx)(t.code,{children:"to_json"}),". You can then check the response code and parse the response body."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"require 'net/http'\nrequire 'uri'\nrequire 'json'\n\nuri = URI('http://api.example.com/items')\nheaders = { 'Content-Type' => 'application/json' }\nbody = { name: 'Sample', quantity: 10 }\n\nhttp = Net::HTTP.new(uri.host, uri.port)\nrequest = Net::HTTP::Post.new(uri.path, headers)\nrequest.body = body.to_json\nresponse = http.request(request)\nputs response.code\nputs response.body\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>u});var s=n(36672);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);