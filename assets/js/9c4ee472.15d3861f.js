"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[94670],{24865:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/reflection/beginner/inspect_instance_variables","title":"inspect_instance_variables","description":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Inspect and Access Instance Variables","source":"@site/docs/ruby/reflection/beginner/inspect_instance_variables.md","sourceDirName":"ruby/reflection/beginner","slug":"/ruby/reflection/beginner/inspect_instance_variables","permalink":"/keep-being-human-dev/docs/ruby/reflection/beginner/inspect_instance_variables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/reflection/beginner/inspect_instance_variables.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_method_invocation","permalink":"/keep-being-human-dev/docs/ruby/reflection/beginner/dynamic_method_invocation"},"next":{"title":"list_available_methods","permalink":"/keep-being-human-dev/docs/ruby/reflection/beginner/list_available_methods"}}');var s=a(23420),i=a(65404);const r={},c=void 0,o={},l=[{value:"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Inspect and Access Instance Variables",id:"\ufe0f\ufe0f-inspect-and-access-instance-variables",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f\ufe0f-inspect-and-access-instance-variables",children:"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Inspect and Access Instance Variables"}),"\n",(0,s.jsxs)(n.p,{children:["Reflection can also reveal an object's internal state by listing its instance variables. Use ",(0,s.jsx)(n.code,{children:"instance_variables"})," and ",(0,s.jsx)(n.code,{children:"instance_variable_get"})," to peek at or retrieve these values."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'class Person\n  def initialize(name, age)\n    @name = name\n    @age  = age\n  end\nend\n\nperson = Person.new("Bob", 30)\n# List all instance variable names\np person.instance_variables  #=> [:@name, :@age]\n\n# Retrieve the actual value of @name\np person.instance_variable_get(:@name)  #=> "Bob"\n'})}),"\n",(0,s.jsx)(n.p,{children:"This is handy for debugging or serializing objects without explicitly defining getters."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(36672);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);