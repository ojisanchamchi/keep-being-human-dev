"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69887],{43041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"gems/factory_bot_rails/middle/use_traits","title":"use_traits","description":"\ud83c\udfa8 Use Traits for DRY Factory Definitions","source":"@site/docs/gems/factory_bot_rails/middle/use_traits.md","sourceDirName":"gems/factory_bot_rails/middle","slug":"/gems/factory_bot_rails/middle/use_traits","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/middle/use_traits","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/factory_bot_rails/middle/use_traits.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"unique_sequences","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/middle/unique_sequences"},"next":{"title":"custom_provider","permalink":"/keep-being-human-dev/docs/gems/faker/advanced/custom_provider"}}');var s=n(23420),i=n(65404);const o={},a=void 0,d={},c=[{value:"\ud83c\udfa8 Use Traits for DRY Factory Definitions",id:"-use-traits-for-dry-factory-definitions",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-use-traits-for-dry-factory-definitions",children:"\ud83c\udfa8 Use Traits for DRY Factory Definitions"}),"\n",(0,s.jsx)(t.p,{children:"Traits allow you to encapsulate variations of a factory in a modular way, reducing duplication and making your specs easier to read. Define common configurable traits and then combine them when building or creating records."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'# spec/factories/users.rb\nFactoryBot.define do\n  factory :user do\n    name { "John Doe" }\n    email { "user@example.com" }\n\n    trait :admin do\n      role { :admin }\n    end\n\n    trait :with_profile do\n      after(:build) do |user|\n        user.profile ||= build(:profile, user: user)\n      end\n    end\n  end\nend\n\n# Usage in specs\nadmin_with_profile = create(:user, :admin, :with_profile)\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(36672);const s={},i=r.createContext(s);function o(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);