"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[68940],{13724:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"rails/engines_and_plugins/advanced/custom_generator_extension","title":"custom_generator_extension","description":"\u2699\ufe0f Extend Rails Generators with Plugin Hooks","source":"@site/docs/rails/engines_and_plugins/advanced/custom_generator_extension.md","sourceDirName":"rails/engines_and_plugins/advanced","slug":"/rails/engines_and_plugins/advanced/custom_generator_extension","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/custom_generator_extension","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/engines_and_plugins/advanced/custom_generator_extension.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"asset_pipeline_and_migrations_railtie","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/asset_pipeline_and_migrations_railtie"},"next":{"title":"dynamic_engine_mounting","permalink":"/keep-being-human-dev/docs/rails/engines_and_plugins/advanced/dynamic_engine_mounting"}}');var t=i(23420),a=i(65404);const r={},o=void 0,l={},d=[{value:"\u2699\ufe0f Extend Rails Generators with Plugin Hooks",id:"\ufe0f-extend-rails-generators-with-plugin-hooks",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-extend-rails-generators-with-plugin-hooks",children:"\u2699\ufe0f Extend Rails Generators with Plugin Hooks"}),"\n",(0,t.jsxs)(n.p,{children:["Create custom generators inside your plugin to scaffold boilerplate code for consumers. Use ",(0,t.jsx)(n.code,{children:"hook_for"})," and ",(0,t.jsx)(n.code,{children:"remove_file"})," to integrate or override existing Rails generators, giving users a seamless setup experience."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# lib/generators/my_plugin/install_generator.rb\nmodule MyPlugin\n  module Generators\n    class InstallGenerator < Rails::Generators::Base\n      source_root File.expand_path('templates', __dir__)\n      desc 'Installs MyPlugin initializer and migrations'\n\n      # Copy initializer template\n      def copy_initializer\n        template 'my_plugin.rb', 'config/initializers/my_plugin.rb'\n      end\n\n      # Hook into ActiveRecord's migration generator\n      hook_for :orm, required: false\n\n      # Optionally remove unwanted files\n      def remove_unneeded\n        remove_file 'app/assets/stylesheets/application.css'\n      end\n    end\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Users can run ",(0,t.jsx)(n.code,{children:"rails generate my_plugin:install"})," to auto-wire all necessary components while leveraging built-in Rails hooks."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(36672);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);