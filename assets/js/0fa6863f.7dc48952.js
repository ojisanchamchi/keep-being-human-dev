"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[8285],{36471:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"ruby/file_io/advanced/fcntl_flags","title":"fcntl_flags","description":"\u2699\ufe0f Manipulating File Descriptors with fcntl","source":"@site/docs/ruby/file_io/advanced/fcntl_flags.md","sourceDirName":"ruby/file_io/advanced","slug":"/ruby/file_io/advanced/fcntl_flags","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/fcntl_flags","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/advanced/fcntl_flags.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"encoding_transcoding","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/encoding_transcoding"},"next":{"title":"memory_mapped_file","permalink":"/keep-being-human-dev/docs/ruby/file_io/advanced/memory_mapped_file"}}');var o=t(23420),s=t(65404);const c={},r=void 0,a={},l=[{value:"\u2699\ufe0f Manipulating File Descriptors with fcntl",id:"\ufe0f-manipulating-file-descriptors-with-fcntl",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\ufe0f-manipulating-file-descriptors-with-fcntl",children:"\u2699\ufe0f Manipulating File Descriptors with fcntl"}),"\n",(0,o.jsxs)(n.p,{children:["For ultimate control over IO behavior, use ",(0,o.jsx)(n.code,{children:"Fcntl"})," constants to tweak descriptor flags. For instance, setting ",(0,o.jsx)(n.code,{children:"O_SYNC"})," forces writes to hit the disk, and ",(0,o.jsx)(n.code,{children:"O_NONBLOCK"})," toggles non-blocking mode."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"require 'fcntl'\n\nfd = IO.sysopen('data.log', Fcntl::O_RDWR | Fcntl::O_CREAT)\nio = IO.new(fd)\n\n# Enable synchronous writes\nflags = io.fcntl(Fcntl::F_GETFL, 0)\nio.fcntl(Fcntl::F_SETFL, flags | Fcntl::O_SYNC)\n\ni.write(\"Important log entry\\n\")\nio.close\n"})}),"\n",(0,o.jsx)(n.p,{children:"Adjusting these flags can help with real-time guarantees or integrating with event loops."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(36672);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);