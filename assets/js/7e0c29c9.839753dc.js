"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[16707],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(36672);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},68263:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"gems/geocoder/expert/postgis_advanced_queries","title":"postgis_advanced_queries","description":"\ud83c\udf10 Integrating PostGIS for Advanced Spatial Queries","source":"@site/docs/gems/geocoder/expert/postgis_advanced_queries.md","sourceDirName":"gems/geocoder/expert","slug":"/gems/geocoder/expert/postgis_advanced_queries","permalink":"/keep-being-human-dev/docs/gems/geocoder/expert/postgis_advanced_queries","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/geocoder/expert/postgis_advanced_queries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"optimized_distance_sql","permalink":"/keep-being-human-dev/docs/gems/geocoder/expert/optimized_distance_sql"},"next":{"title":"customizing_geocoder_config","permalink":"/keep-being-human-dev/docs/gems/geocoder/middle/customizing_geocoder_config"}}');var i=t(23420),s=t(65404);const r={},a=void 0,c={},d=[{value:"\ud83c\udf10 Integrating PostGIS for Advanced Spatial Queries",id:"-integrating-postgis-for-advanced-spatial-queries",level:2}];function g(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-integrating-postgis-for-advanced-spatial-queries",children:"\ud83c\udf10 Integrating PostGIS for Advanced Spatial Queries"}),"\n",(0,i.jsxs)(n.p,{children:["Use PostgreSQL\u2019s PostGIS extension for highly efficient geospatial indexing and queries. With ActiveRecord adapter and rgeo, you can store ",(0,i.jsx)(n.code,{children:"geometry"})," columns and perform intersections, buffers, and nearest\u2010neighbor searches in SQL."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# migration\nenable_extension 'postgis'\n\ncreate_table :locations do |t|\n  t.st_point :geom, geographic: true, null: false\n  t.string  :name\nend\nadd_index :locations, :geom, using: :gist\n\n# app/models/location.rb\nclass Location < ApplicationRecord\n  RGeo::ActiveRecord::SpatialFactoryStore.instance.tap do |config|\n    config.default = RGeo::Geographic.spherical_factory(srid: 4326)\n  end\n\n  # Find locations within a 5km buffer\n  scope :within_buffer, ->(lon, lat, km = 5) {\n    point = RGeo::Geographic.spherical_factory(srid: 4326).point(lon, lat)\n    where(%{\n      ST_DWithin(\n        geom,\n        ST_GeogFromText('SRID=4326;POINT(%f %f)'),\n        %d * 1000\n      )\n    } % [lon, lat, km])\n  }\nend\n\n# Usage:\nLocation.within_buffer(-122.4194, 37.7749, 10)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}}}]);