"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[63760],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(36672);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},79756:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/security/middle/sql_injection_prevention","title":"sql_injection_prevention","description":"\ud83d\udd0d Prevent SQL Injection with Bound Parameters","source":"@site/docs/rails/security/middle/sql_injection_prevention.md","sourceDirName":"rails/security/middle","slug":"/rails/security/middle/sql_injection_prevention","permalink":"/keep-being-human-dev/docs/rails/security/middle/sql_injection_prevention","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/security/middle/sql_injection_prevention.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"security_headers","permalink":"/keep-being-human-dev/docs/rails/security/middle/security_headers"},"next":{"title":"strong_parameters","permalink":"/keep-being-human-dev/docs/rails/security/middle/strong_parameters"}}');var i=t(23420),s=t(65404);const a={},o=void 0,c={},d=[{value:"\ud83d\udd0d Prevent SQL Injection with Bound Parameters",id:"-prevent-sql-injection-with-bound-parameters",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-prevent-sql-injection-with-bound-parameters",children:"\ud83d\udd0d Prevent SQL Injection with Bound Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Avoid interpolating user input directly into queries. Use ActiveRecord methods or parameterized queries to bind values safely."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# Unsafe:\nUser.where("email = \'#{params[:email]}\'")\n\n# Safe:\nUser.where(email: params[:email])\n\n# Or with raw SQL and bindings:\nUser.where("created_at > ?", Time.now - 7.days)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);