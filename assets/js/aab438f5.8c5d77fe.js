"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2121],{27730:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>p,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/rspec/expert/custom_example_group_dsl","title":"custom_example_group_dsl","description":"\ud83d\udee0\ufe0f Custom Example Group DSL","source":"@site/docs/ruby/rspec/expert/custom_example_group_dsl.md","sourceDirName":"ruby/rspec/expert","slug":"/ruby/rspec/expert/custom_example_group_dsl","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/custom_example_group_dsl","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/rspec/expert/custom_example_group_dsl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_diffable_matcher","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/advanced_diffable_matcher"},"next":{"title":"custom_formatter_plugin","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/custom_formatter_plugin"}}');var n=r(23420),c=r(65404);const o={},p=void 0,a={},u=[{value:"\ud83d\udee0\ufe0f Custom Example Group DSL",id:"\ufe0f-custom-example-group-dsl",level:2}];function i(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"\ufe0f-custom-example-group-dsl",children:"\ud83d\udee0\ufe0f Custom Example Group DSL"}),"\n",(0,n.jsxs)(s.p,{children:["Defining your own example group alias lets you create a domain\u2011specific testing DSL, encapsulating shared setup, helpers, and metadata in one place. You can use ",(0,n.jsx)(s.code,{children:"define_example_group_alias"})," to declare a new ",(0,n.jsx)(s.code,{children:"RSpec.describe"})," style for, say, service specs or API specs, keeping your test suite expressive and DRY."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ruby",children:"# spec/spec_helper.rb\nRSpec::Core::ExampleGroup.define_example_group_alias(:service_spec, 'Service Spec') do |group|\n  group.include ServiceHelpers\n  group.before(:all) { initialize_service_container }\n  group.metadata[:type] = :service\nend\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ruby",children:"# spec/services/payment_processor_spec.rb\nRSpec.service_spec PaymentProcessor do\n  it 'processes a payment successfully' do\n    result = subject.process(amount: 100)\n    expect(result).to be_success\n  end\nend\n"})})]})}function l(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(i,{...e})}):i(e)}},65404:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>p});var t=r(36672);const n={},c=t.createContext(n);function o(e){const s=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function p(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);