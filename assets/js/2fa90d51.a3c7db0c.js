"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72495],{53746:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/rspec/beginner/using_expectations","title":"using_expectations","description":"\ud83d\udd0d Use expect Syntax for Assertions","source":"@site/docs/ruby/rspec/beginner/using_expectations.md","sourceDirName":"ruby/rspec/beginner","slug":"/ruby/rspec/beginner/using_expectations","permalink":"/keep-being-human-dev/docs/ruby/rspec/beginner/using_expectations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/rspec/beginner/using_expectations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"setup_rspec","permalink":"/keep-being-human-dev/docs/ruby/rspec/beginner/setup_rspec"},"next":{"title":"advanced_diffable_matcher","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/advanced_diffable_matcher"}}');var r=t(23420),c=t(65404);const i={},o=void 0,a={},d=[{value:"\ud83d\udd0d Use <code>expect</code> Syntax for Assertions",id:"-use-expect-syntax-for-assertions",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-use-expect-syntax-for-assertions",children:["\ud83d\udd0d Use ",(0,r.jsx)(n.code,{children:"expect"})," Syntax for Assertions"]}),"\n",(0,r.jsxs)(n.p,{children:["RSpec\u2019s ",(0,r.jsx)(n.code,{children:"expect"})," syntax is readable and intuitive. Wrap your target call in ",(0,r.jsx)(n.code,{children:"expect(...)"})," and chain matcher methods like ",(0,r.jsx)(n.code,{children:"to eq"})," or ",(0,r.jsx)(n.code,{children:"to be_truthy"})," to assert behavior."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# spec/string_spec.rb\ndescribe String do\n  it 'returns uppercase version' do\n    expect('hello'.upcase).to eq('HELLO')\n  end\n\n  it 'is empty when initialized without arguments' do\n    expect(String.new.empty?).to be_truthy\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(36672);const r={},c=s.createContext(r);function i(e){const n=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);