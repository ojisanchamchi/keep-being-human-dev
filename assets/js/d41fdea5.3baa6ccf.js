"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35501],{42162:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/regex/expert/advanced_lookaround_combinations","title":"advanced_lookaround_combinations","description":"\ud83c\udfaf Combine Variable\u2011Width Lookarounds","source":"@site/docs/ruby/regex/expert/advanced_lookaround_combinations.md","sourceDirName":"ruby/regex/expert","slug":"/ruby/regex/expert/advanced_lookaround_combinations","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/advanced_lookaround_combinations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/expert/advanced_lookaround_combinations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"string_match_method","permalink":"/keep-being-human-dev/docs/ruby/regex/beginner/string_match_method"},"next":{"title":"atomic_groups_for_speed","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/atomic_groups_for_speed"}}');var r=o(23420),a=o(65404);const s={},i=void 0,d={},c=[{value:"\ud83c\udfaf Combine Variable\u2011Width Lookarounds",id:"-combine-variablewidth-lookarounds",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-combine-variablewidth-lookarounds",children:"\ud83c\udfaf Combine Variable\u2011Width Lookarounds"}),"\n",(0,r.jsx)(n.p,{children:"Ruby Oniguruma supports variable\u2011width lookbehind and lookahead, letting you assert complex contexts without consuming text. Chain lookarounds to enforce multi\u2011stage constraints."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# Match "foo" not preceded by "bar" and not followed by digits\npattern = /(?<!bar)foo(?!\\d+)/\n\np "barfoo".match?(pattern) # => false\np "fooA".match?(pattern)   # => true\n'})}),"\n",(0,r.jsx)(n.p,{children:"Use lookarounds to validate password complexity in one shot:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'pw = "Ab1!xy"\npattern = /\n  \\A        # start\n  (?=.*[A-Z])  # uppercase\n  (?=.*[a-z])  # lowercase\n  (?=.*\\d)    # digit\n  (?=.*\\W)    # special char\n  .{6,10}     # length\n  \\z\n/x\np pw.match?(pattern)  # => true\n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>i});var t=o(36672);const r={},a=t.createContext(r);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);