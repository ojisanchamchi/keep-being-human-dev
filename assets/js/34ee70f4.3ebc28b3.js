"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[36119],{62535:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/regex/expert/inline_toggle_modifiers","title":"inline_toggle_modifiers","description":"\ud83d\udca5 Use Inline Modifiers for Contextual Flags","source":"@site/docs/ruby/regex/expert/inline_toggle_modifiers.md","sourceDirName":"ruby/regex/expert","slug":"/ruby/regex/expert/inline_toggle_modifiers","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/inline_toggle_modifiers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/regex/expert/inline_toggle_modifiers.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"embed_ruby_code_in_regex","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/embed_ruby_code_in_regex"},"next":{"title":"named_captures_with_transform","permalink":"/keep-being-human-dev/docs/ruby/regex/expert/named_captures_with_transform"}}');var i=t(23420),s=t(65404);const o={},a=void 0,l={},d=[{value:"\ud83d\udca5 Use Inline Modifiers for Contextual Flags",id:"-use-inline-modifiers-for-contextual-flags",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-use-inline-modifiers-for-contextual-flags",children:"\ud83d\udca5 Use Inline Modifiers for Contextual Flags"}),"\n",(0,i.jsxs)(n.p,{children:["Instead of splitting patterns, use inline flags ",(0,i.jsx)(n.code,{children:"(?i)"}),", ",(0,i.jsx)(n.code,{children:"(?m)"}),", and ",(0,i.jsx)(n.code,{children:"(?x)"})," scoped to subexpressions. This makes patterns more readable and avoids global side effects."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# Case\u2011insensitive domain, verbose local part\npattern = /\n  (?xi:       # enable IGNORECASE and EXTENDED here\n    [A-Z0-9._%+-]+  # local part\n    @\n  )\n  (?i:example\\.com)  # domain only case\u2011insensitive\n/x\n\np "USER.name@Example.COM".match?(pattern)  # => true\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(36672);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);