"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[96773],{35730:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"ruby/metaprogramming/middle/dynamic_attr_accessors","title":"dynamic_attr_accessors","description":"\ud83d\udee0 Dynamic Attribute Accessors","source":"@site/docs/ruby/metaprogramming/middle/dynamic_attr_accessors.md","sourceDirName":"ruby/metaprogramming/middle","slug":"/ruby/metaprogramming/middle/dynamic_attr_accessors","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/dynamic_attr_accessors","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/middle/dynamic_attr_accessors.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dsl_with_instance_eval","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/dsl_with_instance_eval"},"next":{"title":"dynamic_callbacks","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/middle/dynamic_callbacks"}}');var a=n(23420),s=n(65404);const i={},c=void 0,o={},d=[{value:"\ud83d\udee0 Dynamic Attribute Accessors",id:"-dynamic-attribute-accessors",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-dynamic-attribute-accessors",children:"\ud83d\udee0 Dynamic Attribute Accessors"}),"\n",(0,a.jsx)(t.p,{children:"Use metaprogramming to define attribute readers and writers on the fly. This is handy for cases where attribute names come from configuration or external sources."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:'class Configurable\n  def self.configure_with(*attrs)\n    attrs.each do |attr|\n      define_method(attr) { @config[attr] }\n      define_method("#{attr}=") { |val| @config[attr] = val }\n    end\n  end\n\n  def initialize\n    @config = {}\n  end\nend\n\nclass AppSettings < Configurable\n  configure_with :theme, :timeout, :api_key\nend\n\nsettings = AppSettings.new\nsettings.theme = \'dark\'\nputs settings.theme  # => "dark"\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(36672);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);