"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91849],{54961:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"ruby/json/middle/customize_model_serialization","title":"customize_model_serialization","description":"\ud83c\udfa8 Customize Rails Model JSON with asjson and tojson","source":"@site/docs/ruby/json/middle/customize_model_serialization.md","sourceDirName":"ruby/json/middle","slug":"/ruby/json/middle/customize_model_serialization","permalink":"/keep-being-human-dev/docs/ruby/json/middle/customize_model_serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/json/middle/customize_model_serialization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"streaming_json_parsing_with_sc_handler","permalink":"/keep-being-human-dev/docs/ruby/json/expert/streaming_json_parsing_with_sc_handler"},"next":{"title":"json_schema_validation","permalink":"/keep-being-human-dev/docs/ruby/json/middle/json_schema_validation"}}');var t=s(23420),i=s(65404);const a={},d=void 0,r={},l=[{value:"\ud83c\udfa8 Customize Rails Model JSON with as_json and to_json",id:"-customize-rails-model-json-with-as_json-and-to_json",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-customize-rails-model-json-with-as_json-and-to_json",children:"\ud83c\udfa8 Customize Rails Model JSON with as_json and to_json"}),"\n",(0,t.jsxs)(n.p,{children:["Rails\u2019 ",(0,t.jsx)(n.code,{children:"as_json"})," and ",(0,t.jsx)(n.code,{children:"to_json"})," methods let you fine\u2011tune how your ActiveRecord objects are serialized. Use the ",(0,t.jsx)(n.code,{children:"only"}),", ",(0,t.jsx)(n.code,{children:"except"}),", ",(0,t.jsx)(n.code,{children:"methods"}),", and ",(0,t.jsx)(n.code,{children:"include"})," options to shape payloads precisely for your API consumers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'class User < ApplicationRecord\n  def as_json(options = {})\n    super(\n      only: [:id, :name, :email],         # include only these attributes\n      methods: [:full_name],               # include custom method\n      include: {                           # nest associated models\n        posts: { only: [:id, :title] }\n      }\n    )\n  end\n\n  def full_name\n    "#{first_name} #{last_name}"\n  end\nend\n\n# Controller usage\nrender json: @user, status: :ok\n'})}),"\n",(0,t.jsxs)(n.p,{children:["By overriding ",(0,t.jsx)(n.code,{children:"as_json"}),", you ensure consistent serialization across calls and can avoid leaking sensitive fields."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var o=s(36672);const t={},i=o.createContext(t);function a(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);