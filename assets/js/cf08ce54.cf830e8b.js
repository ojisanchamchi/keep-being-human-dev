"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[38451],{19726:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"rails/api_mode/expert/custom_rate_limiting_middleware","title":"custom_rate_limiting_middleware","description":"\ud83d\udee1\ufe0f Custom Rate Limiting Middleware","source":"@site/docs/rails/api_mode/expert/custom_rate_limiting_middleware.md","sourceDirName":"rails/api_mode/expert","slug":"/rails/api_mode/expert/custom_rate_limiting_middleware","permalink":"/keep-being-human-dev/docs/rails/api_mode/expert/custom_rate_limiting_middleware","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/api_mode/expert/custom_rate_limiting_middleware.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"accept_header_api_versioning","permalink":"/keep-being-human-dev/docs/rails/api_mode/expert/accept_header_api_versioning"},"next":{"title":"fast_json_serialization_with_oj","permalink":"/keep-being-human-dev/docs/rails/api_mode/expert/fast_json_serialization_with_oj"}}');var r=n(23420),a=n(65404);const s={},o=void 0,d={},c=[{value:"\ud83d\udee1\ufe0f Custom Rate Limiting Middleware",id:"\ufe0f-custom-rate-limiting-middleware",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"\ufe0f-custom-rate-limiting-middleware",children:"\ud83d\udee1\ufe0f Custom Rate Limiting Middleware"}),"\n",(0,r.jsxs)(i.p,{children:["Implement a Redis\u2011backed rate limiter at the Rack layer for per\u2011API key throttling. By inserting a custom middleware before ",(0,r.jsx)(i.code,{children:"ActionDispatch::Executor"}),", you can enforce fine\u2011grained request caps and respond with ",(0,r.jsx)(i.code,{children:"429 Too Many Requests"})," when limits are exceeded."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ruby",children:"# lib/middleware/rate_limiter.rb\nclass RateLimiter\n  LIMIT = 100\n  WINDOW = 60 # seconds\n\n  def initialize(app)\n    @app = app\n    @redis = Redis.new(url: ENV['REDIS_URL'])\n  end\n\n  def call(env)\n    key = \"rate:#{env['HTTP_API_KEY']}:#{Time.now.to_i / WINDOW}\"\n    count = @redis.incr(key)\n    @redis.expire(key, WINDOW) if count == 1\n\n    if count > LIMIT\n      return [429, {'Content-Type'=>'application/json'}, [{error: 'Rate limit exceeded'}.to_json]]\n    end\n\n    @app.call(env)\n  end\nend\n"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ruby",children:'# config/application.rb (inside class Application)\nconfig.middleware.insert_before ActionDispatch::Executor, "RateLimiter"\n'})})]})}function m(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>o});var t=n(36672);const r={},a=t.createContext(r);function s(e){const i=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);