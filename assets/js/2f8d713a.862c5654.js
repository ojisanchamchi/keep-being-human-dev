"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43275],{37478:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"rails/versioning/advanced/serializer_version_selection","title":"serializer_version_selection","description":"\ud83d\udd04 Dynamic Serializer Selection by API Version","source":"@site/docs/rails/versioning/advanced/serializer_version_selection.md","sourceDirName":"rails/versioning/advanced","slug":"/rails/versioning/advanced/serializer_version_selection","permalink":"/keep-being-human-dev/docs/rails/versioning/advanced/serializer_version_selection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/versioning/advanced/serializer_version_selection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"paper_trail_advanced_usage","permalink":"/keep-being-human-dev/docs/rails/versioning/advanced/paper_trail_advanced_usage"},"next":{"title":"bundle_update_rails","permalink":"/keep-being-human-dev/docs/rails/versioning/beginner/bundle_update_rails"}}');var s=r(23420),a=r(65404);const o={},t=void 0,l={},c=[{value:"\ud83d\udd04 Dynamic Serializer Selection by API Version",id:"-dynamic-serializer-selection-by-api-version",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-dynamic-serializer-selection-by-api-version",children:"\ud83d\udd04 Dynamic Serializer Selection by API Version"}),"\n",(0,s.jsx)(n.p,{children:"Implement dynamic serializer resolution in your controllers to adapt JSON schema as your API evolves. By constructing the serializer class name at runtime, you avoid repetitive branching logic."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/api/base_controller.rb\nclass Api::BaseController < ActionController::API\n  private\n\n  def api_version\n    request.headers['Accept']&.match(/vnd\\.myapp\\.v(\\d+)/)&.[](1).to_i || 1\n  end\n\n  def render_resource(resource)\n    serializer = \"Api::V#{api_version}::#{resource.class.name}Serializer\".constantize\n    render json: resource, serializer: serializer\n  end\nend\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/api/v2/users_controller.rb\nclass Api::V2::UsersController < Api::BaseController\n  def show\n    user = User.find(params[:id])\n    render_resource(user)\n  end\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This pattern centralizes version detection and lets you place separate serializers under ",(0,s.jsx)(n.code,{children:"app/serializers/api/v{n}/"}),", enabling backward-compatible API changes with minimal controller edits."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var i=r(36672);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);