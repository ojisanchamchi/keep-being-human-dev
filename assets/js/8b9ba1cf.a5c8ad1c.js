"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[30913],{65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var o=i(36672);const l={},t=o.createContext(l);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},88469:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"ruby/file_io/middle/file_open_block.md","title":"file_open_block.md","description":"\ud83d\udcc2 Using File.open with a Block","source":"@site/docs/ruby/file_io/middle/file_open_block.md.md","sourceDirName":"ruby/file_io/middle","slug":"/ruby/file_io/middle/file_open_block.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/file_open_block.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/file_io/middle/file_open_block.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"file_locking.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/file_locking.md"},"next":{"title":"line_by_line_processing.md","permalink":"/keep-being-human-dev/docs/ruby/file_io/middle/line_by_line_processing.md"}}');var l=i(23420),t=i(65404);const s={},r=void 0,c={},d=[{value:"\ud83d\udcc2 Using File.open with a Block",id:"-using-fileopen-with-a-block",level:2}];function a(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"-using-fileopen-with-a-block",children:"\ud83d\udcc2 Using File.open with a Block"}),"\n",(0,l.jsx)(n.p,{children:"Opening a file with a block ensures Ruby closes it automatically when the block finishes, even if an error is raised. This pattern prevents file descriptor leaks and keeps your code clean."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ruby",children:"File.open('logs/app.log', 'r') do |file|\n  file.each_line do |line|\n    puts line\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}}}]);