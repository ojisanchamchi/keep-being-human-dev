"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[60658],{65404:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(36672);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},95389:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"ruby/blocks/beginner/transforming_map","title":"transforming_map","description":"\ud83c\udfa8 Transforming Collections with map","source":"@site/docs/ruby/blocks/beginner/transforming_map.md","sourceDirName":"ruby/blocks/beginner","slug":"/ruby/blocks/beginner/transforming_map","permalink":"/keep-being-human-dev/docs/ruby/blocks/beginner/transforming_map","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/blocks/beginner/transforming_map.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"repeating_times","permalink":"/keep-being-human-dev/docs/ruby/blocks/beginner/repeating_times"},"next":{"title":"advanced_lazy_enumerator_chaining","permalink":"/keep-being-human-dev/docs/ruby/blocks/expert/advanced_lazy_enumerator_chaining"}}');var s=r(23420),a=r(65404);const o={},i=void 0,c={},l=[{value:"\ud83c\udfa8 Transforming Collections with map",id:"-transforming-collections-with-map",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-transforming-collections-with-map",children:"\ud83c\udfa8 Transforming Collections with map"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"map"})," (also known as ",(0,s.jsx)(n.code,{children:"collect"}),") to transform each element in an array and return a new array. It's perfect when you need to apply the same operation to every item."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"numbers = [1, 2, 3, 4]\nsquares = numbers.map do |n|\n  n * n\nend\nputs squares.inspect  # => [1, 4, 9, 16]\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);