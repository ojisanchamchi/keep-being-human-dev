"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[32611],{11552:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ruby/metaprogramming/beginner/method_missing_basics","title":"method_missing_basics","description":"\ud83d\udd0d Intercept Calls with method_missing","source":"@site/docs/ruby/metaprogramming/beginner/method_missing_basics.md","sourceDirName":"ruby/metaprogramming/beginner","slug":"/ruby/metaprogramming/beginner/method_missing_basics","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/method_missing_basics","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/beginner/method_missing_basics.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"instance_eval_usage","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/instance_eval_usage"},"next":{"title":"module_included_hook","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/beginner/module_included_hook"}}');var s=t(23420),a=t(65404);const o={},r=void 0,d={},c=[{value:"\ud83d\udd0d Intercept Calls with <code>method_missing</code>",id:"-intercept-calls-with-method_missing",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-intercept-calls-with-method_missing",children:["\ud83d\udd0d Intercept Calls with ",(0,s.jsx)(n.code,{children:"method_missing"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"method_missing"})," hook is called when an undefined method is invoked. You can use it to catch and handle dynamic methods, such as delegating or generating behavior on the fly. Always pair it with ",(0,s.jsx)(n.code,{children:"respond_to_missing?"})," to keep introspection working."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'class DynamicHash\n  def initialize\n    @data = {}\n  end\n\n  def method_missing(name, *args)\n    key = name.to_s.chomp("=")\n    if name.to_s.end_with?("=")\n      @data[key] = args.first\n    else\n      @data[key]\n    end\n  end\n\n  def respond_to_missing?(name, _)\n    true\n  end\nend\n\nh = DynamicHash.new\nh.color = "blue"\nputs h.color           # => "blue"\n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(36672);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);