"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[93096],{20947:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"ruby/enumerables/advanced/slice_when_custom_breaks","title":"slice_when_custom_breaks","description":"\ud83d\udd2a Slice Using Custom Break Conditions via slice_when","source":"@site/docs/ruby/enumerables/advanced/slice_when_custom_breaks.md","sourceDirName":"ruby/enumerables/advanced","slug":"/ruby/enumerables/advanced/slice_when_custom_breaks","permalink":"/keep-being-human-dev/docs/ruby/enumerables/advanced/slice_when_custom_breaks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/enumerables/advanced/slice_when_custom_breaks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lazy_enumerators_infinite_streams","permalink":"/keep-being-human-dev/docs/ruby/enumerables/advanced/lazy_enumerators_infinite_streams"},"next":{"title":"zip_lazy_pattern_matching","permalink":"/keep-being-human-dev/docs/ruby/enumerables/advanced/zip_lazy_pattern_matching"}}');var a=s(23420),i=s(65404);const r={},c=void 0,o={},u=[{value:"\ud83d\udd2a Slice Using Custom Break Conditions via slice_when",id:"-slice-using-custom-break-conditions-via-slice_when",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-slice-using-custom-break-conditions-via-slice_when",children:"\ud83d\udd2a Slice Using Custom Break Conditions via slice_when"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"slice_when"})," creates new slices at points where the block returns true, making it perfect for partitioning based on any transition condition."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:"data = [1, 2, 4, 7, 11, 16]\nslices = data.slice_when { |i, j| (j - i) > 2 }.to_a\n# => [[1, 2, 4], [7], [11], [16]]\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var t=s(36672);const a={},i=t.createContext(a);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);