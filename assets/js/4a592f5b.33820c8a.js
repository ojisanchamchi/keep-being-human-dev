"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[12965],{65404:(e,o,n)=>{n.d(o,{R:()=>s,x:()=>c});var d=n(36672);const r={},t=d.createContext(r);function s(e){const o=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),d.createElement(t.Provider,{value:o},e.children)}},96421:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>i});const d=JSON.parse('{"id":"gems/geocoder/beginner/geocoder_model_setup","title":"geocoder_model_setup","description":"\ud83d\udccd Add Geocoding to Your Model","source":"@site/docs/gems/geocoder/beginner/geocoder_model_setup.md","sourceDirName":"gems/geocoder/beginner","slug":"/gems/geocoder/beginner/geocoder_model_setup","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_model_setup","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/geocoder/beginner/geocoder_model_setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"geocoder_install","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_install"},"next":{"title":"geocoder_reverse_usage","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_reverse_usage"}}');var r=n(23420),t=n(65404);const s={},c=void 0,a={},i=[{value:"\ud83d\udccd Add Geocoding to Your Model",id:"-add-geocoding-to-your-model",level:2}];function l(e){const o={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.h2,{id:"-add-geocoding-to-your-model",children:"\ud83d\udccd Add Geocoding to Your Model"}),"\n",(0,r.jsxs)(o.p,{children:["In your model (e.g., ",(0,r.jsx)(o.code,{children:"User"}),"), use ",(0,r.jsx)(o.code,{children:"geocoded_by"})," with the address attribute and trigger geocoding with a callback. This ensures that whenever the address changes, Geocoder will automatically fill the ",(0,r.jsx)(o.code,{children:"latitude"})," and ",(0,r.jsx)(o.code,{children:"longitude"})," fields."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-ruby",children:"# app/models/user.rb\nclass User < ApplicationRecord\n  geocoded_by :full_address   # method or column to fetch address\n  after_validation :geocode, if: ->(obj){ obj.full_address.present? and obj.full_address_changed? }\n\n  def full_address\n    [street, city, state, country].compact.join(', ')\n  end\nend\n"})})]})}function u(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);