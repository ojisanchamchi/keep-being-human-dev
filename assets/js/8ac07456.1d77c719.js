"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[49379],{46219:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/active_record_associations/middle/counter_cache","title":"counter_cache","description":"\ud83d\udcc8 Speeding Up Counts with counter_cache","source":"@site/docs/rails/active_record_associations/middle/counter_cache.md","sourceDirName":"rails/active_record_associations/middle","slug":"/rails/active_record_associations/middle/counter_cache","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/counter_cache","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/middle/counter_cache.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"conditional_associations","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/conditional_associations"},"next":{"title":"custom_foreign_key_and_class_name","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/middle/custom_foreign_key_and_class_name"}}');var o=c(23420),s=c(65404);const i={},a=void 0,r={},d=[{value:"\ud83d\udcc8 Speeding Up Counts with <code>counter_cache</code>",id:"-speeding-up-counts-with-counter_cache",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"-speeding-up-counts-with-counter_cache",children:["\ud83d\udcc8 Speeding Up Counts with ",(0,o.jsx)(n.code,{children:"counter_cache"})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"counter_cache"})," option maintains a numeric column on the parent to track the size of an association, avoiding expensive ",(0,o.jsx)(n.code,{children:"COUNT(*)"})," SQL calls. Add an integer column named ",(0,o.jsx)(n.code,{children:"#{child_name}_count"})," and enable ",(0,o.jsx)(n.code,{children:"counter_cache: true"})," on the ",(0,o.jsx)(n.code,{children:"belongs_to"})," side."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# migration\ndef change\n  add_column :posts, :comments_count, :integer, default: 0, null: false\nend\n\nclass Comment < ApplicationRecord\n  belongs_to :post, counter_cache: true\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,c)=>{c.d(n,{R:()=>i,x:()=>a});var t=c(36672);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);