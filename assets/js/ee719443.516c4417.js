"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2141],{17588:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"rails/background_jobs/middle/test_background_jobs_in_rspec","title":"test_background_jobs_in_rspec","description":"\ud83e\uddea Test Background Jobs with RSpec Helpers","source":"@site/docs/rails/background_jobs/middle/test_background_jobs_in_rspec.md","sourceDirName":"rails/background_jobs/middle","slug":"/rails/background_jobs/middle/test_background_jobs_in_rspec","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/test_background_jobs_in_rspec","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/background_jobs/middle/test_background_jobs_in_rspec.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"serialize_arguments_safely","permalink":"/keep-being-human-dev/docs/rails/background_jobs/middle/serialize_arguments_safely"},"next":{"title":"benchmark_ips_gem","permalink":"/keep-being-human-dev/docs/rails/benchmarking/advanced/benchmark_ips_gem"}}');var o=s(23420),t=s(65404);const i={},c=void 0,d={},a=[{value:"\ud83e\uddea Test Background Jobs with RSpec Helpers",id:"-test-background-jobs-with-rspec-helpers",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-test-background-jobs-with-rspec-helpers",children:"\ud83e\uddea Test Background Jobs with RSpec Helpers"}),"\n",(0,o.jsxs)(n.p,{children:["Leverage ",(0,o.jsx)(n.code,{children:"ActiveJob::TestHelper"})," in RSpec to assert job enqueuing and execution. Use ",(0,o.jsx)(n.code,{children:"perform_enqueued_jobs"})," and ",(0,o.jsx)(n.code,{children:"assert_enqueued_with"})," to keep your job logic covered without hitting Redis in tests."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# spec/rails_helper.rb\nRSpec.configure do |config|\n  config.include ActiveJob::TestHelper\nend\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"# spec/jobs/email_reminder_job_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe EmailReminderJob, type: :job do\n  it 'enqueues and runs the job' do\n    expect {\n      EmailReminderJob.perform_later(42)\n    }.to have_enqueued_job(EmailReminderJob).with(42)\n\n    perform_enqueued_jobs do\n      EmailReminderJob.perform_later(42)\n    end\n    # Add assertions for side effects here\n  end\nend\n"})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(36672);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);