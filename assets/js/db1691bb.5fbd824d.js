"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[70902],{65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var a=n(36672);const i={},r=a.createContext(i);function s(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:t},e.children)}},80486:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"ruby/variables/middle/memoization_with_or_equal","title":"memoization_with_or_equal","description":"\ud83e\udde0 Memoize Expensive Method Results with ||=","source":"@site/docs/ruby/variables/middle/memoization_with_or_equal.md","sourceDirName":"ruby/variables/middle","slug":"/ruby/variables/middle/memoization_with_or_equal","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/memoization_with_or_equal","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/variables/middle/memoization_with_or_equal.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"block_vs_method_variable_scope","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/block_vs_method_variable_scope"},"next":{"title":"parallel_assignment_and_splat","permalink":"/keep-being-human-dev/docs/ruby/variables/middle/parallel_assignment_and_splat"}}');var i=n(23420),r=n(65404);const s={},o=void 0,l={},d=[{value:"\ud83e\udde0 Memoize Expensive Method Results with <code>||=</code>",id:"-memoize-expensive-method-results-with-",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h2,{id:"-memoize-expensive-method-results-with-",children:["\ud83e\udde0 Memoize Expensive Method Results with ",(0,i.jsx)(t.code,{children:"||="})]}),"\n",(0,i.jsxs)(t.p,{children:["When you have a method that performs an expensive computation or external call, memoization prevents repeated work by caching the result in an instance variable. Use the ",(0,i.jsx)(t.code,{children:"||="})," operator to assign the value only once. This pattern keeps your methods idempotent and speeds up subsequent calls."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ruby",children:"class WeatherClient\n  def temperature\n    @temperature ||= fetch_temperature_from_api  # stored after first call\n  end\n\n  private\n\n  def fetch_temperature_from_api\n    # simulate expensive HTTP request\n    sleep 1\n    22\n  end\nend\n\nclient = WeatherClient.new\nputs client.temperature  # => 22 (after 1 second)\nputs client.temperature  # => 22 (instant)\n"})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);