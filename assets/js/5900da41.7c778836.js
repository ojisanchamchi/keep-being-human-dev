"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72721],{65404:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var a=n(36672);const o={},r=a.createContext(o);function l(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(r.Provider,{value:t},e.children)}},76935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"rails/layouts/expert/dynamic_layout_selection","title":"dynamic_layout_selection","description":"\ud83d\udd04 Dynamic Layout Selection via Controller Lambda","source":"@site/docs/rails/layouts/expert/dynamic_layout_selection.md","sourceDirName":"rails/layouts/expert","slug":"/rails/layouts/expert/dynamic_layout_selection","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/dynamic_layout_selection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/layouts/expert/dynamic_layout_selection.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"advanced_content_for_yields","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/advanced_content_for_yields"},"next":{"title":"layout_fragment_caching","permalink":"/keep-being-human-dev/docs/rails/layouts/expert/layout_fragment_caching"}}');var o=n(23420),r=n(65404);const l={},i=void 0,s={},c=[{value:"\ud83d\udd04 Dynamic Layout Selection via Controller Lambda",id:"-dynamic-layout-selection-via-controller-lambda",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-dynamic-layout-selection-via-controller-lambda",children:"\ud83d\udd04 Dynamic Layout Selection via Controller Lambda"}),"\n",(0,o.jsxs)(t.p,{children:["Implement a ",(0,o.jsx)(t.code,{children:"layout"})," method that determines the layout at runtime based on user role, request type, or format. This gives you granular control without duplicating controllers."]}),"\n",(0,o.jsxs)(t.p,{children:["In ",(0,o.jsx)(t.code,{children:"app/controllers/application_controller.rb"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:'class ApplicationController < ActionController::Base\n  layout :select_layout\n\n  private\n\n  def select_layout\n    return "print" if params[:format] == \'pdf\'\n    return false   if request.xhr?\n    return "admin" if current_user&.admin?\n    "application"\n  end\nend\n'})}),"\n",(0,o.jsx)(t.p,{children:"Now every request will pick the correct layout: no layout for XHR, a print-specific layout for PDF, the admin shell for admins, and the default otherwise."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}}}]);