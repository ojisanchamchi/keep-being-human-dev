"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[58850],{28144:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/ranges/middle/range_to_a_and_size","title":"range_to_a_and_size","description":"\ud83d\udcca Converting Ranges to Arrays and Calculating Size","source":"@site/docs/ruby/ranges/middle/range_to_a_and_size.md","sourceDirName":"ruby/ranges/middle","slug":"/ruby/ranges/middle/range_to_a_and_size","permalink":"/keep-being-human-dev/docs/ruby/ranges/middle/range_to_a_and_size","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/ranges/middle/range_to_a_and_size.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"range_step_iteration","permalink":"/keep-being-human-dev/docs/ruby/ranges/middle/range_step_iteration"},"next":{"title":"dynamic_method_generation","permalink":"/keep-being-human-dev/docs/ruby/reflection/advanced/dynamic_method_generation"}}');var r=a(23420),s=a(65404);const i={},o=void 0,d={},c=[{value:"\ud83d\udcca Converting Ranges to Arrays and Calculating Size",id:"-converting-ranges-to-arrays-and-calculating-size",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-converting-ranges-to-arrays-and-calculating-size",children:"\ud83d\udcca Converting Ranges to Arrays and Calculating Size"}),"\n",(0,r.jsxs)(n.p,{children:["Often you need to know how many discrete steps a range contains or manipulate its elements. Use ",(0,r.jsx)(n.code,{children:"to_a"})," to materialize values into an array and ",(0,r.jsx)(n.code,{children:"size"})," (or ",(0,r.jsx)(n.code,{children:"count"}),") to find the length. Beware that converting very large ranges can be memory-intensive."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"small_range = (1..10)\narray = small_range.to_a       # => [1,2,3,4,5,6,7,8,9,10]\nputs array.size               # => 10\n\n# For large ranges, use size without to_a\nbig_range = (1..1_000_000)\nputs big_range.size           # => 1000000\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var t=a(36672);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);