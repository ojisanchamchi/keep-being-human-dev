"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[98109],{65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(36672);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},94441:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ruby/constants/expert/deep_freeze_constants","title":"deep_freeze_constants","description":"\u2744\ufe0f Deep Freeze Constants to Enforce Immutability","source":"@site/docs/ruby/constants/expert/deep_freeze_constants.md","sourceDirName":"ruby/constants/expert","slug":"/ruby/constants/expert/deep_freeze_constants","permalink":"/keep-being-human-dev/docs/ruby/constants/expert/deep_freeze_constants","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/constants/expert/deep_freeze_constants.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_const_missing_autoload","permalink":"/keep-being-human-dev/docs/ruby/constants/expert/custom_const_missing_autoload"},"next":{"title":"dynamic_constant_definition","permalink":"/keep-being-human-dev/docs/ruby/constants/expert/dynamic_constant_definition"}}');var r=t(23420),o=t(65404);const a={},i=void 0,c={},d=[{value:"\u2744\ufe0f Deep Freeze Constants to Enforce Immutability",id:"\ufe0f-deep-freeze-constants-to-enforce-immutability",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\ufe0f-deep-freeze-constants-to-enforce-immutability",children:"\u2744\ufe0f Deep Freeze Constants to Enforce Immutability"}),"\n",(0,r.jsx)(n.p,{children:"Top\u2010level constants can still refer to mutable structures. To guarantee true immutability, apply a deep freeze that traverses nested arrays and hashes, preventing accidental modifications at any level. This pattern is essential for configuration objects, ensuring your constants remain pristine once initialized."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"module AppConfig\n  SETTINGS = {\n    timeout: 30,\n    endpoints: {\n      users: '/users',\n      orders: '/orders'\n    }\n  }\n\n  def self.deep_freeze(obj)\n    case obj\n    when Hash\n      obj.each_value { |v| deep_freeze(v) }\n    when Array\n      obj.each { |v| deep_freeze(v) }\n    end\n    obj.freeze\n  end\n\n  deep_freeze(SETTINGS)\nend\n\n# Attempting to modify SETTINGS now raises a RuntimeError\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);