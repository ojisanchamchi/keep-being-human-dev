"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[40590],{65404:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var t=n(36672);const c={},r=t.createContext(c);function s(e){const a=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(r.Provider,{value:a},e.children)}},82823:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"rails/action_cable/advanced/kafka_pubsub_adapter","title":"kafka_pubsub_adapter","description":"\ud83d\udee0\ufe0f Custom Kafka Pub/Sub Adapter","source":"@site/docs/rails/action_cable/advanced/kafka_pubsub_adapter.md","sourceDirName":"rails/action_cable/advanced","slug":"/rails/action_cable/advanced/kafka_pubsub_adapter","permalink":"/keep-being-human-dev/docs/rails/action_cable/advanced/kafka_pubsub_adapter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/action_cable/advanced/kafka_pubsub_adapter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"jwt_channel_authentication","permalink":"/keep-being-human-dev/docs/rails/action_cable/advanced/jwt_channel_authentication"},"next":{"title":"rate_limiting_backpressure","permalink":"/keep-being-human-dev/docs/rails/action_cable/advanced/rate_limiting_backpressure"}}');var c=n(23420),r=n(65404);const s={},o=void 0,d={},i=[{value:"\ud83d\udee0\ufe0f Custom Kafka Pub/Sub Adapter",id:"\ufe0f-custom-kafka-pubsub-adapter",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(a.h2,{id:"\ufe0f-custom-kafka-pubsub-adapter",children:"\ud83d\udee0\ufe0f Custom Kafka Pub/Sub Adapter"}),"\n",(0,c.jsxs)(a.p,{children:["Swap out Redis in favor of Kafka for larger-scale, durable messaging. Implement a minimal adapter conforming to Action Cable\u2019s API and configure it in ",(0,c.jsx)(a.code,{children:"cable.yml"}),"."]}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-ruby",children:"# lib/action_cable/subscription_adapter/kafka.rb\nmodule ActionCable\n  module SubscriptionAdapter\n    class Kafka\n      def broadcast(channel, payload)\n        producer.produce(topic: channel, payload: payload.to_json)\n        producer.deliver_messages\n      end\n\n      def subscribe(channel, callback)\n        consumer.subscribe([channel])\n        Thread.new do\n          consumer.each_message(automatically_mark_as_processed: true) do |msg|\n            callback.call(JSON.parse(msg.value))\n          end\n        end\n      end\n\n      private\n      def producer\n        @producer ||= Kafka.new(seed_brokers: ['kafka://localhost:9092']).producer\n      end\n\n      def consumer\n        @consumer ||= Kafka.new(seed_brokers: ['kafka://localhost:9092']).consumer(group_id: 'action_cable')\n      end\n    end\n  end\nend\n"})}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-yaml",children:"# config/cable.yml\ndevelopment:\n  adapter: kafka\n  url: kafka://localhost:9092\n"})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}}}]);