"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42947],{46462:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>_,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/method_missing/beginner/method_missing_respond_to","title":"method_missing_respond_to","description":"\ud83d\udd0d Overriding respondtomissing? for Accurate Reflection","source":"@site/docs/ruby/method_missing/beginner/method_missing_respond_to.md","sourceDirName":"ruby/method_missing/beginner","slug":"/ruby/method_missing/beginner/method_missing_respond_to","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_respond_to","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/beginner/method_missing_respond_to.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_forward_to_super","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_forward_to_super"},"next":{"title":"advanced_signature_handling","permalink":"/keep-being-human-dev/docs/ruby/method_missing/expert/advanced_signature_handling"}}');var r=s(23420),o=s(65404);const i={},d=void 0,a={},c=[{value:"\ud83d\udd0d Overriding <code>respond_to_missing?</code> for Accurate Reflection",id:"-overriding-respond_to_missing-for-accurate-reflection",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h2,{id:"-overriding-respond_to_missing-for-accurate-reflection",children:["\ud83d\udd0d Overriding ",(0,r.jsx)(n.code,{children:"respond_to_missing?"})," for Accurate Reflection"]}),"\n",(0,r.jsxs)(n.p,{children:["After customizing ",(0,r.jsx)(n.code,{children:"method_missing"}),", update ",(0,r.jsx)(n.code,{children:"respond_to_missing?"})," so ",(0,r.jsx)(n.code,{children:"respond_to?"})," returns correct results. This keeps introspection methods and tools (like IRB and Rails) working properly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"class Chatter\n  def method_missing(name, *args)\n    if name.to_s.start_with?('say_')\n      message = name.to_s.sub('say_', '')\n      puts message.tr('_', ' ')\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, include_private = false)\n    name.to_s.start_with?('say_') || super\n  end\nend\n\nchat = Chatter.new\nchat.say_hello_world       # => \"hello world\"\nputs chat.respond_to?(:say_hello_world)  # => true\n"})})]})}function _(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var t=s(36672);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);