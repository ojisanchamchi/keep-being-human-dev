"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27938],{31505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/chartkick/middle/multiple_series","title":"multiple_series","description":"\ud83d\udcca Combine multiple data series in one chart","source":"@site/docs/gems/chartkick/middle/multiple_series.md","sourceDirName":"gems/chartkick/middle","slug":"/gems/chartkick/middle/multiple_series","permalink":"/keep-being-human-dev/docs/gems/chartkick/middle/multiple_series","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/chartkick/middle/multiple_series.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"group_by_period","permalink":"/keep-being-human-dev/docs/gems/chartkick/middle/group_by_period"},"next":{"title":"dynamic_conditional_counters","permalink":"/keep-being-human-dev/docs/gems/counter_culture/advanced/dynamic_conditional_counters"}}');var i=t(23420),a=t(65404);const r={},c=void 0,o={},d=[{value:"\ud83d\udcca Combine multiple data series in one chart",id:"-combine-multiple-data-series-in-one-chart",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-combine-multiple-data-series-in-one-chart",children:"\ud83d\udcca Combine multiple data series in one chart"}),"\n",(0,i.jsxs)(n.p,{children:["Chartkick allows you to plot several series side by side by passing an array of hashes. Each hash can include a ",(0,i.jsx)(n.code,{children:"name"})," and its own data. This makes it easy to compare metrics like sales vs. signups or different user segments."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# Controller\n@daily_sales = Order.group_by_day(:completed_at).sum(:total_price)\n@daily_signups = User.group_by_day(:created_at).count\n\n# View (ERB)\n<%= line_chart [\n  {name: "Sales", data: @daily_sales},\n  {name: "Signups", data: @daily_signups}\n],\n  stacked: false,\n  library: {pointSize: 5}\n%>\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(36672);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);