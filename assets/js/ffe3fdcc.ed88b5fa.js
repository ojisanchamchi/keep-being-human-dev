"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42059],{22600:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/strings/advanced/binary_encoding_manipulation","title":"binary_encoding_manipulation","description":"\ud83d\udee0\ufe0f Manipulate Binary Data with String#b","source":"@site/docs/ruby/strings/advanced/binary_encoding_manipulation.md","sourceDirName":"ruby/strings/advanced","slug":"/ruby/strings/advanced/binary_encoding_manipulation","permalink":"/keep-being-human-dev/docs/ruby/strings/advanced/binary_encoding_manipulation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/strings/advanced/binary_encoding_manipulation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"tcp_server_basic","permalink":"/keep-being-human-dev/docs/ruby/sockets/middle/tcp_server_basic"},"next":{"title":"freezing_and_symbols","permalink":"/keep-being-human-dev/docs/ruby/strings/advanced/freezing_and_symbols"}}');var a=t(23420),r=t(65404);const o={},s=void 0,c={},d=[{value:"\ud83d\udee0\ufe0f Manipulate Binary Data with String#b",id:"\ufe0f-manipulate-binary-data-with-stringb",level:2}];function u(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h2,{id:"\ufe0f-manipulate-binary-data-with-stringb",children:"\ud83d\udee0\ufe0f Manipulate Binary Data with String#b"}),"\n",(0,a.jsxs)(e.p,{children:["When working with binary protocols or file formats, force a string into ",(0,a.jsx)(e.code,{children:"ASCII-8BIT"})," to avoid Ruby\u2019s default UTF-8 transcoding. Use ",(0,a.jsx)(e.code,{children:"String#b"})," to return a binary-encoded copy, and ",(0,a.jsx)(e.code,{children:"String#force_encoding"})," for in-place changes."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ruby",children:'# copy to binary encoding\nbinary = "\x7fABC".b\nputs binary.encoding        #=> #<Encoding:ASCII-8BIT>\n\n# in-place override (dangerous if mixed content)\nstr = "Hello"\nstr.force_encoding("ASCII-8BIT")\nputs str.encoding           #=> #<Encoding:ASCII-8BIT>\n'})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},65404:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>s});var i=t(36672);const a={},r=i.createContext(a);function o(n){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);