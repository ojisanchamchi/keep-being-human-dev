"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[37886],{47966:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"rails/active_record/middle/optimistic_locking","title":"optimistic_locking","description":"\ud83d\udd12 Prevent Race Conditions with Optimistic Locking","source":"@site/docs/rails/active_record/middle/optimistic_locking.md","sourceDirName":"rails/active_record/middle","slug":"/rails/active_record/middle/optimistic_locking","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/optimistic_locking","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record/middle/optimistic_locking.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"merge_relations","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/merge_relations"},"next":{"title":"pluck_and_select_optimization","permalink":"/keep-being-human-dev/docs/rails/active_record/middle/pluck_and_select_optimization"}}');var c=t(23420),o=t(65404);const r={},s=void 0,a={},d=[{value:"\ud83d\udd12 Prevent Race Conditions with Optimistic Locking",id:"-prevent-race-conditions-with-optimistic-locking",level:2}];function l(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(i.h2,{id:"-prevent-race-conditions-with-optimistic-locking",children:"\ud83d\udd12 Prevent Race Conditions with Optimistic Locking"}),"\n",(0,c.jsxs)(i.p,{children:["Add a ",(0,c.jsx)(i.code,{children:"lock_version"})," integer column to enable optimistic locking. ActiveRecord raises an exception if concurrent updates conflict, letting you handle retries gracefully."]}),"\n",(0,c.jsx)(i.pre,{children:(0,c.jsx)(i.code,{className:"language-ruby",children:"# migration:\nadd_column :products, :lock_version, :integer, default: 0, null: false\n\n# usage:\nproduct = Product.find(1)\nproduct.price = 9.99\nproduct.save!  # raises ActiveRecord::StaleObjectError if version mismatches\n"})})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(l,{...e})}):l(e)}},65404:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>s});var n=t(36672);const c={},o=n.createContext(c);function r(e){const i=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);