"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[8939],{48226:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"ruby/rspec/expert/custom_formatter_plugin","title":"custom_formatter_plugin","description":"\ud83d\udce6 Building a Custom Formatter Plugin","source":"@site/docs/ruby/rspec/expert/custom_formatter_plugin.md","sourceDirName":"ruby/rspec/expert","slug":"/ruby/rspec/expert/custom_formatter_plugin","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/custom_formatter_plugin","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/rspec/expert/custom_formatter_plugin.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_example_group_dsl","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/custom_example_group_dsl"},"next":{"title":"flaky_spec_auto_retry","permalink":"/keep-being-human-dev/docs/ruby/rspec/expert/flaky_spec_auto_retry"}}');var a=r(23420),s=r(65404);const o={},u=void 0,i={},p=[{value:"\ud83d\udce6 Building a Custom Formatter Plugin",id:"-building-a-custom-formatter-plugin",level:2}];function m(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-building-a-custom-formatter-plugin",children:"\ud83d\udce6 Building a Custom Formatter Plugin"}),"\n",(0,a.jsx)(t.p,{children:"Hook into RSpec's formatter API to build a custom reporter\u2014e.g., exporting a JSON summary of failures, durations, and example metadata. Register for notifications and implement the desired output logic."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"# lib/rspec/json_formatter.rb\nrequire 'rspec/core/formatters/base_text_formatter'\n\nclass RSpec::JsonFormatter < RSpec::Core::Formatters::BaseTextFormatter\n  RSpec::Core::Formatters.register self, :example_passed, :example_failed, :dump_summary\n\n  def initialize(output)\n    super\n    @results = { examples: [] }\n  end\n\n  def example_passed(notification)\n    @results[:examples] << format_example(notification.example, 'passed')\n  end\n\n  def example_failed(notification)\n    @results[:examples] << format_example(notification.example, 'failed')\n  end\n\n  def dump_summary(summary)\n    @results[:summary] = {\n      duration: summary.duration,\n      example_count: summary.example_count,\n      failure_count: summary.failure_count\n    }\n    output.puts JSON.pretty_generate(@results)\n  end\n\n  private\n\n  def format_example(example, status)\n    {\n      full_description: example.full_description,\n      file_path: example.metadata[:file_path],\n      status: status,\n      run_time: example.execution_result.run_time\n    }\n  end\nend\n"})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"# .rspec\n--require lib/rspec/json_formatter.rb\n--format RSpec::JsonFormatter\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>u});var n=r(36672);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);