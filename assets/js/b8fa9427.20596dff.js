"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[91964],{65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(36672);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},76643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ruby/set/beginner/initialize_set","title":"initialize_set","description":"\u2728 Initialize a Set","source":"@site/docs/ruby/set/beginner/initialize_set.md","sourceDirName":"ruby/set/beginner","slug":"/ruby/set/beginner/initialize_set","permalink":"/keep-being-human-dev/docs/ruby/set/beginner/initialize_set","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/set/beginner/initialize_set.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"basic_set_operations","permalink":"/keep-being-human-dev/docs/ruby/set/beginner/basic_set_operations"},"next":{"title":"manage_set_elements","permalink":"/keep-being-human-dev/docs/ruby/set/beginner/manage_set_elements"}}');var s=n(23420),a=n(65404);const r={},o=void 0,l={},c=[{value:"\u2728 Initialize a Set",id:"-initialize-a-set",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-initialize-a-set",children:"\u2728 Initialize a Set"}),"\n",(0,s.jsx)(t.p,{children:"The Set class provides a collection of unique elements, perfect for when you need to avoid duplicates. To start using it, require the built\u2011in library and create a new Set instance. This is a simple way to manage collections without repeated values."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"require 'set'\n\n# Empty set\ngreeting_set = Set.new\n\n# Initialize with an array (duplicates removed automatically)\ngreeting_set = Set.new(['hello', 'hi', 'hello'])\nputs greeting_set.inspect\n# => #<Set: {\"hello\", \"hi\"}>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);