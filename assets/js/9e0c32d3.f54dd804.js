"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[48498],{2008:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"gems/factory_bot_rails/beginner/using_traits.md","title":"using_traits.md","description":"\ud83c\udff7\ufe0f Leverage Traits to DRY Up Factories","source":"@site/docs/gems/factory_bot_rails/beginner/using_traits.md.md","sourceDirName":"gems/factory_bot_rails/beginner","slug":"/gems/factory_bot_rails/beginner/using_traits.md","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/beginner/using_traits.md","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/factory_bot_rails/beginner/using_traits.md.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"basic_factory_setup.md","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/beginner/basic_factory_setup.md"},"next":{"title":"after_create_callbacks_external_service_setup","permalink":"/keep-being-human-dev/docs/gems/factory_bot_rails/expert/after_create_callbacks_external_service_setup"}}');var s=r(23420),a=r(65404);const i={},o=void 0,c={},d=[{value:"\ud83c\udff7\ufe0f Leverage Traits to DRY Up Factories",id:"\ufe0f-leverage-traits-to-dry-up-factories",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"\ufe0f-leverage-traits-to-dry-up-factories",children:"\ud83c\udff7\ufe0f Leverage Traits to DRY Up Factories"}),"\n",(0,s.jsx)(t.p,{children:"Traits let you group sets of attributes that can be reused across tests. This reduces duplication when you need similar variations of a model. Define a trait inside your factory and pass its name when creating instances."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:'# spec/factories/users.rb\nFactoryBot.define do\n  factory :user do\n    name  { "Jane Doe" }\n    email { "jane.doe@example.com" }\n\n    trait :admin do\n      role { "admin" }\n    end\n\n    trait :guest do\n      role { "guest" }\n    end\n  end\nend\n'})}),"\n",(0,s.jsx)(t.p,{children:"Use traits in specs:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"admin_user = create(:user, :admin)\nguest_user = create(:user, :guest)\n"})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(36672);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);