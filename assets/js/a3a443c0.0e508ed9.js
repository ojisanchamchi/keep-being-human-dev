"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[69434],{43095:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"gems/bcrypt/middle/bcrypt_generate_and_verify","title":"bcrypt_generate_and_verify","description":"\ud83d\udd10 Using BCrypt to Generate and Verify Passwords","source":"@site/docs/gems/bcrypt/middle/bcrypt_generate_and_verify.md","sourceDirName":"gems/bcrypt/middle","slug":"/gems/bcrypt/middle/bcrypt_generate_and_verify","permalink":"/keep-being-human-dev/docs/gems/bcrypt/middle/bcrypt_generate_and_verify","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/bcrypt/middle/bcrypt_generate_and_verify.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"bcrypt_custom_cost","permalink":"/keep-being-human-dev/docs/gems/bcrypt/middle/bcrypt_custom_cost"},"next":{"title":"bcrypt_rehash_on_login","permalink":"/keep-being-human-dev/docs/gems/bcrypt/middle/bcrypt_rehash_on_login"}}');var s=r(23420),a=r(65404);const d={},i=void 0,o={},c=[{value:"\ud83d\udd10 Using BCrypt to Generate and Verify Passwords",id:"-using-bcrypt-to-generate-and-verify-passwords",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-using-bcrypt-to-generate-and-verify-passwords",children:"\ud83d\udd10 Using BCrypt to Generate and Verify Passwords"}),"\n",(0,s.jsxs)(t.p,{children:["Leveraging the ",(0,s.jsx)(t.code,{children:"bcrypt"})," gem directly gives you full control over how password digests are created and validated. By generating a digest with a configurable cost, you can balance security and performance, and verifying it is a simple method call."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ruby",children:"require 'bcrypt'\n\n# Generating a password digest\npassword = 'super_secret'\ncost     = BCrypt::Engine::DEFAULT_COST # adjust for dev vs prod\npassword_digest = BCrypt::Password.create(password, cost: cost)\n\n# Storing `password_digest` in your database...\n\n# Verifying at login\nstored_digest = BCrypt::Password.new(password_digest)\nif stored_digest.is_password?(password)\n  puts 'Login successful!'\nelse\n  puts 'Invalid credentials.'\nend\n"})})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},65404:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>i});var n=r(36672);const s={},a=n.createContext(s);function d(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);