"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[77979],{54690:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/performance/advanced/ruby_gc_tunables","title":"ruby_gc_tunables","description":"\ud83d\udee0\ufe0f Ruby Garbage Collection Tuning","source":"@site/docs/rails/performance/advanced/ruby_gc_tunables.md","sourceDirName":"rails/performance/advanced","slug":"/rails/performance/advanced/ruby_gc_tunables","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/ruby_gc_tunables","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/performance/advanced/ruby_gc_tunables.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"preload_for_callbacks","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/preload_for_callbacks"},"next":{"title":"sql_query_commenting","permalink":"/keep-being-human-dev/docs/rails/performance/advanced/sql_query_commenting"}}');var t=r(23420),o=r(65404);const c={},s=void 0,i={},l=[{value:"\ud83d\udee0\ufe0f Ruby Garbage Collection Tuning",id:"\ufe0f-ruby-garbage-collection-tuning",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"\ufe0f-ruby-garbage-collection-tuning",children:"\ud83d\udee0\ufe0f Ruby Garbage Collection Tuning"}),"\n",(0,t.jsxs)(n.p,{children:["Tuning Ruby\u2019s generational GC reduces pause times in high\u2011throughput apps. Use ",(0,t.jsx)(n.code,{children:"GC::Profiler"})," to identify hotspots and configure environment variables like ",(0,t.jsx)(n.code,{children:"RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR"})," or enable incremental GC."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:'# config/initializers/gc_profiler.rb\nGC::Profiler.enable\nat_exit do\n  result = GC::Profiler.report\n  Rails.logger.info("GC PROFILER:\\n#{result}")\nend\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# environment variables\nexport RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR=1.5\nexport RUBY_GC_MALLOC_LIMIT=500_000\nexport RUBY_GC_INCREMENTAL_START_ENABLED=1\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var a=r(36672);const t={},o=a.createContext(t);function c(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);