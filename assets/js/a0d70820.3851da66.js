"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27117],{63869:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/metaprogramming/advanced/alias_method_chain_emulation","title":"alias_method_chain_emulation","description":"\ud83d\udce6 Emulating aliasmethodchain safely","source":"@site/docs/ruby/metaprogramming/advanced/alias_method_chain_emulation.md","sourceDirName":"ruby/metaprogramming/advanced","slug":"/ruby/metaprogramming/advanced/alias_method_chain_emulation","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/alias_method_chain_emulation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/advanced/alias_method_chain_emulation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"matrix_transpose_and_diagonal","permalink":"/keep-being-human-dev/docs/ruby/matrix/middle/matrix_transpose_and_diagonal"},"next":{"title":"attribute_query_methods","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/advanced/attribute_query_methods"}}');var i=n(23420),s=n(65404);const d={},o=void 0,r={},c=[{value:"\ud83d\udce6 Emulating <code>alias_method_chain</code> safely",id:"-emulating-alias_method_chain-safely",level:2}];function l(e){const a={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.h2,{id:"-emulating-alias_method_chain-safely",children:["\ud83d\udce6 Emulating ",(0,i.jsx)(a.code,{children:"alias_method_chain"})," safely"]}),"\n",(0,i.jsx)(a.p,{children:"Create method chains by aliasing the original implementation and redefining the method, then invoking the aliased version. This pattern is explicit and avoids monkey\u2011patch pitfalls."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-ruby",children:"module Auditable\n  def self.included(base)\n    base.class_eval do\n      alias_method :save_without_audit, :save\n\n      def save(*args)\n        audit_changes\n        save_without_audit(*args)\n      end\n    end\n  end\nend\n\nclass Model\n  include Auditable\n\n  def save\n    # persistence logic\n  end\nend\n"})})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,a,n)=>{n.d(a,{R:()=>d,x:()=>o});var t=n(36672);const i={},s=t.createContext(i);function d(e){const a=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);