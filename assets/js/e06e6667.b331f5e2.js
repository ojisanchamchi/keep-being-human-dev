"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[75974],{39361:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/views/advanced/nested-fragment-caching","title":"nested-fragment-caching","description":"\ud83d\udce6 Tip: Combine Fragment Caching with cache_version for Nested Expiration","source":"@site/docs/rails/views/advanced/nested-fragment-caching.md","sourceDirName":"rails/views/advanced","slug":"/rails/views/advanced/nested-fragment-caching","permalink":"/keep-being-human-dev/docs/rails/views/advanced/nested-fragment-caching","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/views/advanced/nested-fragment-caching.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"named-content-slots","permalink":"/keep-being-human-dev/docs/rails/views/advanced/named-content-slots"},"next":{"title":"partial-caching-russian-doll","permalink":"/keep-being-human-dev/docs/rails/views/advanced/partial-caching-russian-doll"}}');var i=a(23420),c=a(65404);const r={},s=void 0,o={},d=[{value:"\ud83d\udce6 Tip: Combine Fragment Caching with <code>cache_version</code> for Nested Expiration",id:"-tip-combine-fragment-caching-with-cache_version-for-nested-expiration",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h2,{id:"-tip-combine-fragment-caching-with-cache_version-for-nested-expiration",children:["\ud83d\udce6 Tip: Combine Fragment Caching with ",(0,i.jsx)(n.code,{children:"cache_version"})," for Nested Expiration"]}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"cache_version"})," on parent records to expire all nested fragments when a root object changes. This gives you fine-grained control over when inner caches should be invalidated."]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# app/models/article.rb\nclass Article < ApplicationRecord\n  has_many :comments\n\n  def cache_version\n    [updated_at, comments.maximum(:updated_at)]\n  end\nend\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erb",children:"<% cache @article, version: @article.cache_version do %>\n  <%= render 'header', article: @article %>\n  <%= render @article.comments %>\n<% end %>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>s});var t=a(36672);const i={},c=t.createContext(i);function r(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);