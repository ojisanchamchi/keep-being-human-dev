"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[31207],{26761:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"ruby/metaprogramming/expert/eigenclass_singleton_method_customization","title":"eigenclass_singleton_method_customization","description":"\u2728 Eigenclass and definesingletonmethod for Class Methods","source":"@site/docs/ruby/metaprogramming/expert/eigenclass_singleton_method_customization.md","sourceDirName":"ruby/metaprogramming/expert","slug":"/ruby/metaprogramming/expert/eigenclass_singleton_method_customization","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/eigenclass_singleton_method_customization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/metaprogramming/expert/eigenclass_singleton_method_customization.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_define_method_with_closure","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/dynamic_define_method_with_closure"},"next":{"title":"module_prepend_for_instrumentation","permalink":"/keep-being-human-dev/docs/ruby/metaprogramming/expert/module_prepend_for_instrumentation"}}');var s=t(23420),i=t(65404);const a={},r=void 0,c={},d=[{value:"\u2728 Eigenclass and define_singleton_method for Class Methods",id:"-eigenclass-and-define_singleton_method-for-class-methods",level:2}];function m(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-eigenclass-and-define_singleton_method-for-class-methods",children:"\u2728 Eigenclass and define_singleton_method for Class Methods"}),"\n",(0,s.jsx)(n.p,{children:"Manipulate an object\u2019s eigenclass directly to define or override class-level behavior. This technique lets you inject methods onto single instances or classes without polluting global ancestors."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'class Service\nend\n\n# Define a one-off method on Service\nService.define_singleton_method(:maintain) do\n  "Maintenance mode activated"\nend\n\nputs Service.maintain  # => "Maintenance mode activated"\n\n# For an individual object\nobj = Service.new\ndef obj.status\n  "OK"\nend\nputs obj.status        # => "OK"\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(36672);const s={},i=o.createContext(s);function a(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);