"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[64300],{65404:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(36672);const s={},c=a.createContext(s);function r(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(c.Provider,{value:n},e.children)}},77329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>b,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/websockets/beginner/model_broadcasting","title":"model_broadcasting","description":"\ud83c\udfed Broadcasting with Active Record Callbacks","source":"@site/docs/rails/websockets/beginner/model_broadcasting.md","sourceDirName":"rails/websockets/beginner","slug":"/rails/websockets/beginner/model_broadcasting","permalink":"/keep-being-human-dev/docs/rails/websockets/beginner/model_broadcasting","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/websockets/beginner/model_broadcasting.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"generate_chat_channel","permalink":"/keep-being-human-dev/docs/rails/websockets/beginner/generate_chat_channel"},"next":{"title":"mount_actioncable_in_routes","permalink":"/keep-being-human-dev/docs/rails/websockets/beginner/mount_actioncable_in_routes"}}');var s=t(23420),c=t(65404);const r={},o=void 0,i={},d=[{value:"\ud83c\udfed Broadcasting with Active Record Callbacks",id:"-broadcasting-with-active-record-callbacks",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-broadcasting-with-active-record-callbacks",children:"\ud83c\udfed Broadcasting with Active Record Callbacks"}),"\n",(0,s.jsxs)(n.p,{children:["Leverage built-in broadcasting methods in Rails 6+ to automatically stream new records. Use ",(0,s.jsx)(n.code,{children:"after_create_commit"})," in your model for clean and declarative broadcasting."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'# app/models/message.rb\nclass Message < ApplicationRecord\n  after_create_commit { broadcast_append_to "chat_channel" }\nend\n'})})]})}function b(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);