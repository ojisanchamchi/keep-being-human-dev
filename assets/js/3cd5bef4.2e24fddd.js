"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35793],{65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(36672);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},89518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"gems/image_processing/advanced/streaming_variants","title":"streaming_variants","description":"\u26a1 Memory\u2010Efficient Streaming Variants","source":"@site/docs/gems/image_processing/advanced/streaming_variants.md","sourceDirName":"gems/image_processing/advanced","slug":"/gems/image_processing/advanced/streaming_variants","permalink":"/keep-being-human-dev/docs/gems/image_processing/advanced/streaming_variants","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/image_processing/advanced/streaming_variants.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"persistent_variant_cache","permalink":"/keep-being-human-dev/docs/gems/image_processing/advanced/persistent_variant_cache"},"next":{"title":"convert_format_thumbnail","permalink":"/keep-being-human-dev/docs/gems/image_processing/beginner/convert_format_thumbnail"}}');var s=t(23420),r=t(65404);const i={},o=void 0,c={},m=[{value:"\u26a1 Memory\u2010Efficient Streaming Variants",id:"-memoryefficient-streaming-variants",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-memoryefficient-streaming-variants",children:"\u26a1 Memory\u2010Efficient Streaming Variants"}),"\n",(0,s.jsx)(n.p,{children:"For very large images or high\u2010throughput APIs, avoid loading full images into memory by streaming processing results directly to an IO. This pattern keeps your app\u2019s memory footprint low and integrates smoothly with Rails controllers."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"# In a controller action\ndef show\n  variant = ImageProcessing::Vips\n    .source(user.avatar.download_blob_to_tempfile)\n    .resize_to_limit(2000, 2000)\n    .convert('webp')\n\n  # Stream result to client without persisting locally\n  response.headers['Content-Type'] = 'image/webp'\n  response.headers['Cache-Control'] = 'public, max-age=31536000'\n  self.response_body = variant.call_stream\nend\n"})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);