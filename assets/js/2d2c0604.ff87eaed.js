"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[2994],{48026:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"ruby/method_missing/beginner/method_missing_forward_to_super","title":"method_missing_forward_to_super","description":"\ud83d\udca1 Forwarding to super for Safe Fallbacks","source":"@site/docs/ruby/method_missing/beginner/method_missing_forward_to_super.md","sourceDirName":"ruby/method_missing/beginner","slug":"/ruby/method_missing/beginner/method_missing_forward_to_super","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_forward_to_super","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/method_missing/beginner/method_missing_forward_to_super.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"method_missing_dynamic_attributes","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_dynamic_attributes"},"next":{"title":"method_missing_respond_to","permalink":"/keep-being-human-dev/docs/ruby/method_missing/beginner/method_missing_respond_to"}}');var o=s(23420),t=s(65404);const i={},a=void 0,d={},m=[{value:"\ud83d\udca1 Forwarding to <code>super</code> for Safe Fallbacks",id:"-forwarding-to-super-for-safe-fallbacks",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"-forwarding-to-super-for-safe-fallbacks",children:["\ud83d\udca1 Forwarding to ",(0,o.jsx)(n.code,{children:"super"})," for Safe Fallbacks"]}),"\n",(0,o.jsxs)(n.p,{children:["Always call ",(0,o.jsx)(n.code,{children:"super"})," at the end of ",(0,o.jsx)(n.code,{children:"method_missing"})," if you don't handle a particular method; this ensures Ruby can still raise the usual ",(0,o.jsx)(n.code,{children:"NoMethodError"}),". Skipping ",(0,o.jsx)(n.code,{children:"super"})," may hide real mistakes in your code."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class SafeWrapper\n  def method_missing(name, *args, &block)\n    if name.to_s.start_with?('do_')\n      puts \"Performing \\\x7f#{name}\\\" with args: #{args.join(', ')}\"\n    else\n      super\n    end\n  end\n\n  def respond_to_missing?(name, include_private = false)\n    name.to_s.start_with?('do_') || super\n  end\nend\n\nwrapper = SafeWrapper.new\nwrapper.do_something('foo')  # Works\nwrapper.unknown_method       # Raises NoMethodError\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(36672);const o={},t=r.createContext(o);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);