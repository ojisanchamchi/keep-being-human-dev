"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[14644],{59919:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"nosql/redis/beginner/redis_list_usage","title":"redis_list_usage","description":"\ud83d\udccb Working with Lists","source":"@site/docs/nosql/redis/beginner/redis_list_usage.md","sourceDirName":"nosql/redis/beginner","slug":"/nosql/redis/beginner/redis_list_usage","permalink":"/keep-being-human-dev/docs/nosql/redis/beginner/redis_list_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/nosql/redis/beginner/redis_list_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"redis_connection_setup","permalink":"/keep-being-human-dev/docs/nosql/redis/beginner/redis_connection_setup"},"next":{"title":"redis_cluster_pipeline_optimization","permalink":"/keep-being-human-dev/docs/nosql/redis/expert/redis_cluster_pipeline_optimization"}}');var i=t(23420),r=t(65404);const o={},a=void 0,l={},d=[{value:"\ud83d\udccb Working with Lists",id:"-working-with-lists",level:2}];function u(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"-working-with-lists",children:"\ud83d\udccb Working with Lists"}),"\n",(0,i.jsx)(s.p,{children:"Redis lists let you push and pop elements in a FIFO or LIFO fashion. They\u2019re great for implementing simple queues or stacks without a full message broker."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ruby",children:'# Add tasks to the left of the list (acts like a stack)\nredis.lpush("tasks", "task1", "task2")\n\n# Fetch all items (0..-1 returns entire list)\nputs redis.lrange("tasks", 0, -1)  # => ["task2", "task1"]\n\n# Pop the rightmost element (acts like a queue)\nputs redis.rpop("tasks")  # => "task1"\n'})})]})}function c(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},65404:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(36672);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);