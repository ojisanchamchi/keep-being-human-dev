"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[43636],{181:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"rails/helpers/middle/capture_blocks","title":"capture_blocks","description":"\ud83c\udfa3 Leveraging capture for Block Helpers","source":"@site/docs/rails/helpers/middle/capture_blocks.md","sourceDirName":"rails/helpers/middle","slug":"/rails/helpers/middle/capture_blocks","permalink":"/keep-being-human-dev/docs/rails/helpers/middle/capture_blocks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/helpers/middle/capture_blocks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"testing_helpers_with_actionview","permalink":"/keep-being-human-dev/docs/rails/helpers/expert/testing_helpers_with_actionview"},"next":{"title":"content_tag_usage","permalink":"/keep-being-human-dev/docs/rails/helpers/middle/content_tag_usage"}}');var s=r(23420),a=r(65404);const c={},o=void 0,l={},i=[{value:"\ud83c\udfa3 Leveraging <code>capture</code> for Block Helpers",id:"-leveraging-capture-for-block-helpers",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"-leveraging-capture-for-block-helpers",children:["\ud83c\udfa3 Leveraging ",(0,s.jsx)(n.code,{children:"capture"})," for Block Helpers"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"capture"})," allows you to grab the output of a block in a helper and use it later. This is useful for creating wrappers or storing markup in variables."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"module ApplicationHelper\n  def card(title, &block)\n    body = capture(&block)\n    content_tag :div, class: 'card' do\n      concat(content_tag(:h3, title, class: 'card-title'))\n      concat(content_tag(:div, body, class: 'card-body'))\n    end\n  end\nend\n"})}),"\n",(0,s.jsx)(n.p,{children:"And in your view:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-erb",children:'<%= card("User Info") do %>\n  <p>Name: <%= @user.name %></p>\n  <p>Email: <%= @user.email %></p>\n<% end %>\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(36672);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);