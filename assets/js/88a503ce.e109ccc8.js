"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[22194],{65404:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var o=i(36672);const r={},c=o.createContext(r);function t(e){const n=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(c.Provider,{value:n},e.children)}},87882:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rails/configuration/middle/environment_specific_config","title":"environment_specific_config","description":"\ud83c\udf10 Environment\u2011Specific Error Reporting and Caching","source":"@site/docs/rails/configuration/middle/environment_specific_config.md","sourceDirName":"rails/configuration/middle","slug":"/rails/configuration/middle/environment_specific_config","permalink":"/keep-being-human-dev/docs/rails/configuration/middle/environment_specific_config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/configuration/middle/environment_specific_config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_app_config","permalink":"/keep-being-human-dev/docs/rails/configuration/middle/custom_app_config"},"next":{"title":"load_yaml_config","permalink":"/keep-being-human-dev/docs/rails/configuration/middle/load_yaml_config"}}');var r=i(23420),c=i(65404);const t={},a=void 0,s={},l=[{value:"\ud83c\udf10 Environment\u2011Specific Error Reporting and Caching",id:"-environmentspecific-error-reporting-and-caching",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-environmentspecific-error-reporting-and-caching",children:"\ud83c\udf10 Environment\u2011Specific Error Reporting and Caching"}),"\n",(0,r.jsxs)(n.p,{children:["Fine\u2011tune Rails behavior per environment by editing ",(0,r.jsx)(n.code,{children:"config/environments/*.rb"}),". For example, you might disable full error reports in staging but keep caching off to aid debugging:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/environments/staging.rb\nRails.application.configure do\n  # Treat staging like production for error pages\n  config.consider_all_requests_local = false\n  config.action_dispatch.show_exceptions = true\n\n  # Enable caching to test performance\n  config.action_controller.perform_caching = true\n  config.cache_store = :memory_store\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Meanwhile, in development you typically have:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# config/environments/development.rb\nRails.application.configure do\n  config.consider_all_requests_local = true\n  config.action_controller.perform_caching = false\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"This approach ensures each environment behaves appropriately without extra conditional logic scattered across the codebase."})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);