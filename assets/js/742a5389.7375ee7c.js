"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[99788],{60962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/networking/middle/http_persistent","title":"http_persistent","description":"\ud83c\udf40 Use Net::Persistent for Connection Reuse","source":"@site/docs/ruby/networking/middle/http_persistent.md","sourceDirName":"ruby/networking/middle","slug":"/ruby/networking/middle/http_persistent","permalink":"/keep-being-human-dev/docs/ruby/networking/middle/http_persistent","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/networking/middle/http_persistent.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"http_multipart_upload","permalink":"/keep-being-human-dev/docs/ruby/networking/middle/http_multipart_upload"},"next":{"title":"http_ssl_customization","permalink":"/keep-being-human-dev/docs/ruby/networking/middle/http_ssl_customization"}}');var r=n(23420),o=n(65404);const i={},u=void 0,a={},c=[{value:"\ud83c\udf40 Use Net::HTTP::Persistent for Connection Reuse",id:"-use-nethttppersistent-for-connection-reuse",level:2}];function p(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-use-nethttppersistent-for-connection-reuse",children:"\ud83c\udf40 Use Net::HTTP::Persistent for Connection Reuse"}),"\n",(0,r.jsx)(t.p,{children:"Net::HTTP::Persistent maintains a pool of reusable TCP connections, reducing latency for multiple requests to the same host. This is especially useful when calling the same API endpoints repeatedly in a loop or background job. You can set timeouts and custom headers once and then perform GET/POST calls without reopening sockets each time."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"require 'net/http/persistent'\n\nhttp = Net::HTTP::Persistent.new(name: 'my-client')\nhttp.read_timeout = 5\nhttp.idle_timeout = 10\n\nuri = URI('https://api.example.com/data')\nresponse = http.request(uri)\nputs response.body if response.is_a?(Net::HTTPSuccess)\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>u});var s=n(36672);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);