"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[35815],{65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(36672);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},97961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"ruby/oop/expert/tracepoint_profiling","title":"tracepoint_profiling","description":"\ud83d\udcca Real-Time Profiling with TracePoint","source":"@site/docs/ruby/oop/expert/tracepoint_profiling.md","sourceDirName":"ruby/oop/expert","slug":"/ruby/oop/expert/tracepoint_profiling","permalink":"/keep-being-human-dev/docs/ruby/oop/expert/tracepoint_profiling","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/oop/expert/tracepoint_profiling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"scoped_refinements","permalink":"/keep-being-human-dev/docs/ruby/oop/expert/scoped_refinements"},"next":{"title":"weakref_circular_cleanup","permalink":"/keep-being-human-dev/docs/ruby/oop/expert/weakref_circular_cleanup"}}');var o=n(23420),i=n(65404);const a={},c=void 0,p={},s=[{value:"\ud83d\udcca Real-Time Profiling with TracePoint",id:"-real-time-profiling-with-tracepoint",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"-real-time-profiling-with-tracepoint",children:"\ud83d\udcca Real-Time Profiling with TracePoint"}),"\n",(0,o.jsxs)(t.p,{children:["Employ ",(0,o.jsx)(t.code,{children:"TracePoint"})," to hook into runtime events (call, return, class) for on-the-fly performance monitoring or debugging of object-oriented flows without restarting the process."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ruby",children:"trace = TracePoint.new(:call, :return) do |tp|\n  if tp.defined_class == UserService && tp.method_id == :authenticate\n    puts \"#{tp.event} #{tp.defined_class}##{tp.method_id} at line #{tp.lineno}\"\n  end\nend\n\ntrace.enable\nUserService.new.authenticate('user', 'pwd')\ntrace.disable\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);