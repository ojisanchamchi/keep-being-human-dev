"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[10874],{45074:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"ruby/numbers/middle/extract_digits","title":"extract_digits","description":"\ud83d\udd22 Extracting Digits","source":"@site/docs/ruby/numbers/middle/extract_digits.md","sourceDirName":"ruby/numbers/middle","slug":"/ruby/numbers/middle/extract_digits","permalink":"/keep-being-human-dev/docs/ruby/numbers/middle/extract_digits","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/numbers/middle/extract_digits.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"clamp_numbers","permalink":"/keep-being-human-dev/docs/ruby/numbers/middle/clamp_numbers"},"next":{"title":"random_ranges","permalink":"/keep-being-human-dev/docs/ruby/numbers/middle/random_ranges"}}');var r=n(23420),s=n(65404);const a={},d=void 0,c={},o=[{value:"\ud83d\udd22 Extracting Digits",id:"-extracting-digits",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-extracting-digits",children:"\ud83d\udd22 Extracting Digits"}),"\n",(0,r.jsxs)(t.p,{children:["Ruby\u2019s ",(0,r.jsx)(t.code,{children:"Integer#digits"})," method returns an array of the digits in a number, making digit-based calculations (like checksum algorithms or reverse-order parsing) concise."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"12345.digits\n# => [5, 4, 3, 2, 1]\n\n# Sum of digits\n9876.digits.sum\n# => 30\n\n# Digits in another base (hexadecimal)\n255.digits(16)\n# => [15, 15]\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>d});var i=n(36672);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);