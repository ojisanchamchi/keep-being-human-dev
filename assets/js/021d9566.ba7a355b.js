"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[46856],{65404:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>c});var a=i(36672);const o={},s=a.createContext(o);function t(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),a.createElement(s.Provider,{value:n},e.children)}},88976:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"rails/configuration/advanced/dynamic_custom_config_x","title":"dynamic_custom_config_x","description":"\u2699\ufe0f Dynamic Namespaced Settings via config.x and Reloaders","source":"@site/docs/rails/configuration/advanced/dynamic_custom_config_x.md","sourceDirName":"rails/configuration/advanced","slug":"/rails/configuration/advanced/dynamic_custom_config_x","permalink":"/keep-being-human-dev/docs/rails/configuration/advanced/dynamic_custom_config_x","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/configuration/advanced/dynamic_custom_config_x.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"config_for_nested_yaml","permalink":"/keep-being-human-dev/docs/rails/configuration/advanced/config_for_nested_yaml"},"next":{"title":"config_time_zone","permalink":"/keep-being-human-dev/docs/rails/configuration/beginner/config_time_zone"}}');var o=i(23420),s=i(65404);const t={},c=void 0,r={},d=[{value:"\u2699\ufe0f Dynamic Namespaced Settings via <code>config.x</code> and Reloaders",id:"\ufe0f-dynamic-namespaced-settings-via-configx-and-reloaders",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h2,{id:"\ufe0f-dynamic-namespaced-settings-via-configx-and-reloaders",children:["\u2699\ufe0f Dynamic Namespaced Settings via ",(0,o.jsx)(n.code,{children:"config.x"})," and Reloaders"]}),"\n",(0,o.jsxs)(n.p,{children:["For settings you change frequently in development, hook into Rails\u2019 reloader to pick up updated values without restarting the server. By combining ",(0,o.jsx)(n.code,{children:"config.x"})," and ",(0,o.jsx)(n.code,{children:"to_prepare"})," hooks, you get live\u2011reloading custom config stored in YAML or elsewhere."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Create ",(0,o.jsx)(n.code,{children:"config/custom_settings.yml"}),":"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# config/custom_settings.yml\ndevelopment:\n  feature_flag: true\n  welcome_message: "Hello, Dev!"\nproduction:\n  feature_flag: false\n  welcome_message: "Welcome!"\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:"In an initializer, load and reload on each request in development:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'# config/initializers/custom_settings.rb\nRails.application.config.to_prepare do\n  raw = Rails.root.join("config/custom_settings.yml").read\n  all = YAML.safe_load(ERB.new(raw).result) || {}\n  Rails.application.config.x.custom = all.fetch(Rails.env, {})\nend\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:"Use it anywhere:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:'if Rails.configuration.x.custom["feature_flag"]\n  puts Rails.configuration.x.custom["welcome_message"]\nend\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);