"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[52676],{49502:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>g,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"rails/logging/beginner/logging_in_models","title":"logging_in_models","description":"\ud83d\uddc4\ufe0f Logging in Models and Jobs","source":"@site/docs/rails/logging/beginner/logging_in_models.md","sourceDirName":"rails/logging/beginner","slug":"/rails/logging/beginner/logging_in_models","permalink":"/keep-being-human-dev/docs/rails/logging/beginner/logging_in_models","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/logging/beginner/logging_in_models.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"logging_in_controllers","permalink":"/keep-being-human-dev/docs/rails/logging/beginner/logging_in_controllers"},"next":{"title":"setting_log_levels","permalink":"/keep-being-human-dev/docs/rails/logging/beginner/setting_log_levels"}}');var s=o(23420),r=o(65404);const l={},g=void 0,t={},a=[{value:"\ud83d\uddc4\ufe0f Logging in Models and Jobs",id:"\ufe0f-logging-in-models-and-jobs",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-logging-in-models-and-jobs",children:"\ud83d\uddc4\ufe0f Logging in Models and Jobs"}),"\n",(0,s.jsx)(n.p,{children:"You can also log from models or background jobs to capture domain-specific events. This helps you trace business logic independently of controller actions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:'class Order < ApplicationRecord\n  def place\n    Rails.logger.info "Placing order ID=#{id} for user #{user_id}"\n    # ... order logic ...\n  rescue => e\n    Rails.logger.error "Failed to place order ID=#{id}: #{e.message}"\n    raise\n  end\nend\n\nclass SendEmailJob < ApplicationJob\n  def perform(user_id)\n    Rails.logger.info "Sending welcome email to User##{user_id}"\n    # ... email logic ...\n  end\nend\n'})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>g});var i=o(36672);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);