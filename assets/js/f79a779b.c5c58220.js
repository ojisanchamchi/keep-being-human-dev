"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[81935],{65404:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>r});var a=n(36672);const s={},c=a.createContext(s);function t(e){const i=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),a.createElement(c.Provider,{value:i},e.children)}},70340:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"rails/active_record_associations/expert/dynamic_build_in_callbacks","title":"dynamic_build_in_callbacks","description":"\ud83c\udfd7\ufe0f Dynamic Association Builds in Lifecycle Callbacks","source":"@site/docs/rails/active_record_associations/expert/dynamic_build_in_callbacks.md","sourceDirName":"rails/active_record_associations/expert","slug":"/rails/active_record_associations/expert/dynamic_build_in_callbacks","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/dynamic_build_in_callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_associations/expert/dynamic_build_in_callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_association_extensions","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/dynamic_association_extensions"},"next":{"title":"eager_load_override_select","permalink":"/keep-being-human-dev/docs/rails/active_record_associations/expert/eager_load_override_select"}}');var s=n(23420),c=n(65404);const t={},r=void 0,o={},l=[{value:"\ud83c\udfd7\ufe0f Dynamic Association Builds in Lifecycle Callbacks",id:"\ufe0f-dynamic-association-builds-in-lifecycle-callbacks",level:2}];function d(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"\ufe0f-dynamic-association-builds-in-lifecycle-callbacks",children:"\ud83c\udfd7\ufe0f Dynamic Association Builds in Lifecycle Callbacks"}),"\n",(0,s.jsxs)(i.p,{children:["Automatically instantiate associated records with predefined defaults during the parent model's lifecycle. Coupling ",(0,s.jsx)(i.code,{children:"after_initialize"})," or ",(0,s.jsx)(i.code,{children:"after_create"})," with ",(0,s.jsx)(i.code,{children:"build_association"})," centralizes setup logic."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ruby",children:"class Invoice < ApplicationRecord\n  has_many :line_items, inverse_of: :invoice\n  after_initialize :build_default_line_item\n\n  private\n\n  def build_default_line_item\n    return if persisted? || line_items.any?\n    line_items.build(description: 'Standard service fee', amount_cents: 0)\n  end\nend\n"})})]})}function u(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);