"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[42090],{10594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"rails/active_record_validations/middle/validation_contexts","title":"validation_contexts","description":"\u23f1\ufe0f Validation Contexts with on:","source":"@site/docs/rails/active_record_validations/middle/validation_contexts.md","sourceDirName":"rails/active_record_validations/middle","slug":"/rails/active_record_validations/middle/validation_contexts","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/validation_contexts","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/active_record_validations/middle/validation_contexts.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"validates_each_usage","permalink":"/keep-being-human-dev/docs/rails/active_record_validations/middle/validates_each_usage"},"next":{"title":"custom_blob_analysis","permalink":"/keep-being-human-dev/docs/rails/active_storage/advanced/custom_blob_analysis"}}');var i=n(23420),o=n(65404);const s={},c=void 0,d={},r=[{value:"\u23f1\ufe0f Validation Contexts with <code>on:</code>",id:"\ufe0f-validation-contexts-with-on",level:2}];function l(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h2,{id:"\ufe0f-validation-contexts-with-on",children:["\u23f1\ufe0f Validation Contexts with ",(0,i.jsx)(t.code,{children:"on:"})]}),"\n",(0,i.jsx)(t.p,{children:"Run certain validations only during create, update, or custom contexts. This is useful when workflows impose different rules at different stages of a record\u2019s lifecycle."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ruby",children:"class Account < ApplicationRecord\n  validates :password, presence: true, on: :create\n  validates :email, uniqueness: true, on: [:create, :update]\nend\n\n# Custom context\naccount.valid?(:approve)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var a=n(36672);const i={},o=a.createContext(i);function s(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);