"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[33697],{65404:(e,n,c)=>{c.d(n,{R:()=>s,x:()=>i});var t=c(36672);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},83401:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rails/caching/beginner/low_level_cache_fetch","title":"low_level_cache_fetch","description":"\ud83d\udcbe Low-Level Cache Fetch","source":"@site/docs/rails/caching/beginner/low_level_cache_fetch.md","sourceDirName":"rails/caching/beginner","slug":"/rails/caching/beginner/low_level_cache_fetch","permalink":"/keep-being-human-dev/docs/rails/caching/beginner/low_level_cache_fetch","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/caching/beginner/low_level_cache_fetch.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"configure_cache_store","permalink":"/keep-being-human-dev/docs/rails/caching/beginner/configure_cache_store"},"next":{"title":"russian_doll_caching","permalink":"/keep-being-human-dev/docs/rails/caching/beginner/russian_doll_caching"}}');var a=c(23420),r=c(65404);const s={},i=void 0,o={},l=[{value:"\ud83d\udcbe Low-Level Cache Fetch",id:"-low-level-cache-fetch",level:2}];function h(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-low-level-cache-fetch",children:"\ud83d\udcbe Low-Level Cache Fetch"}),"\n",(0,a.jsxs)(n.p,{children:["For caching arbitrary Ruby data or API responses, use ",(0,a.jsx)(n.code,{children:"Rails.cache.fetch"}),". This method attempts to read an existing cache entry by key, and if absent, executes the block and stores its result."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ruby",children:'# Anywhere in your application\nrecent_comments = Rails.cache.fetch("recent_comments", expires_in: 10.minutes) do\n  Comment.order(created_at: :desc).limit(5).to_a\nend\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);