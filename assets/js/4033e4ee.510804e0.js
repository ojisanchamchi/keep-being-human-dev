"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[88924],{65404:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>s});var r=n(36672);const t={},a=r.createContext(t);function o(e){const i=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:i},e.children)}},83335:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"ruby/profiling/middle/benchmark_bm_usage","title":"benchmark_bm_usage","description":"\u23f1\ufe0f Quick CPU Timing with Benchmark.bm","source":"@site/docs/ruby/profiling/middle/benchmark_bm_usage.md","sourceDirName":"ruby/profiling/middle","slug":"/ruby/profiling/middle/benchmark_bm_usage","permalink":"/keep-being-human-dev/docs/ruby/profiling/middle/benchmark_bm_usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/profiling/middle/benchmark_bm_usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"thread_wall_time_profiling","permalink":"/keep-being-human-dev/docs/ruby/profiling/expert/thread_wall_time_profiling"},"next":{"title":"flamegraph_visualization","permalink":"/keep-being-human-dev/docs/ruby/profiling/middle/flamegraph_visualization"}}');var t=n(23420),a=n(65404);const o={},s=void 0,c={},m=[{value:"\u23f1\ufe0f Quick CPU Timing with Benchmark.bm",id:"\ufe0f-quick-cpu-timing-with-benchmarkbm",level:2}];function u(e){const i={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"\ufe0f-quick-cpu-timing-with-benchmarkbm",children:"\u23f1\ufe0f Quick CPU Timing with Benchmark.bm"}),"\n",(0,t.jsxs)(i.p,{children:["Use Ruby\u2019s built\u2011in Benchmark module for a fast, low\u2011overhead way to compare execution times of different code paths. Wrap each block in ",(0,t.jsx)(i.code,{children:"Benchmark.bm"})," to get a side\u2011by\u2011side report. This is ideal for quick experiments before introducing heavier profilers."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ruby",children:'require \'benchmark\'\n\nBenchmark.bm(10) do |x|\n  x.report("fast_loop")   { 1_000_000.times { |i| i * 2 } }\n  x.report("slow_loop")   { 1_000_000.times { |i| i ** 2 } }\nend\n'})})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);