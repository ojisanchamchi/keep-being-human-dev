"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[37586],{9550:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>u,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"gems/webmock/beginner/stub_get_requests","title":"stub_get_requests","description":"\ud83d\ude80 Stub GET Requests","source":"@site/docs/gems/webmock/beginner/stub_get_requests.md","sourceDirName":"gems/webmock/beginner","slug":"/gems/webmock/beginner/stub_get_requests","permalink":"/keep-being-human-dev/docs/gems/webmock/beginner/stub_get_requests","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/webmock/beginner/stub_get_requests.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"stub_dynamic_request_patterns","permalink":"/keep-being-human-dev/docs/gems/webmock/advanced/stub_dynamic_request_patterns"},"next":{"title":"verify_http_requests","permalink":"/keep-being-human-dev/docs/gems/webmock/beginner/verify_http_requests"}}');var r=s(23420),o=s(65404);const u={},a=void 0,c={},i=[{value:"\ud83d\ude80 Stub GET Requests",id:"-stub-get-requests",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"-stub-get-requests",children:"\ud83d\ude80 Stub GET Requests"}),"\n",(0,r.jsx)(t.p,{children:"WebMock allows you to stub external HTTP GET calls so your tests don't rely on real network connections. Simply disable real HTTP requests and define a stub with the expected URL and response. This makes your tests faster and more reliable."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ruby",children:"# spec_helper.rb or rails_helper.rb\nrequire 'webmock/rspec'\nWebMock.disable_net_connect!(allow_localhost: true)\n\n# In your spec\nstub_request(:get, 'https://api.example.com/users/1')\n  .to_return(\n    status: 200,\n    body: '{\"id\":1,\"name\":\"John\"}',\n    headers: { 'Content-Type' => 'application/json' }\n  )\n\n# Trigger the HTTP GET\nresponse = Net::HTTP.get(URI('https://api.example.com/users/1'))\n\n# Assert the stubbed response is used\nexpect(response).to include('John')\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,t,s)=>{s.d(t,{R:()=>u,x:()=>a});var n=s(36672);const r={},o=n.createContext(r);function u(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:u(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);