"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[11026],{31488:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"rails/models/expert/active_record_encryption","title":"active_record_encryption","description":"\u26a1\ufe0f Integrate Rails Active Record Encryption","source":"@site/docs/rails/models/expert/active_record_encryption.md","sourceDirName":"rails/models/expert","slug":"/rails/models/expert/active_record_encryption","permalink":"/keep-being-human-dev/docs/rails/models/expert/active_record_encryption","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/models/expert/active_record_encryption.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"model_validations","permalink":"/keep-being-human-dev/docs/rails/models/beginner/model_validations"},"next":{"title":"after_initialize_caching","permalink":"/keep-being-human-dev/docs/rails/models/expert/after_initialize_caching"}}');var i=t(23420),a=t(65404);const c={},o=void 0,s={},d=[{value:"\u26a1\ufe0f Integrate Rails Active Record Encryption",id:"\ufe0f-integrate-rails-active-record-encryption",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\ufe0f-integrate-rails-active-record-encryption",children:"\u26a1\ufe0f Integrate Rails Active Record Encryption"}),"\n",(0,i.jsx)(n.p,{children:"Rails 7+ supports end\u2011to\u2011end encryption at the model layer. Declare attributes as encrypted and let Rails handle AES\u2011GCM encryption, key rotation, and querying. This is essential for PII compliance."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# config/application.rb\nconfig.active_record.encryption.primary_key = Rails.application.credentials.dig(:encryption_primary_key)\nconfig.active_record.encryption.support_unencrypted_data = true\n\n# app/models/user.rb\nclass User < ApplicationRecord\n  encrypts :ssn, :credit_card_number\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now ",(0,i.jsx)(n.code,{children:"user.ssn"})," is encrypted in the DB, transparent on read/write, and you can rotate keys without downtime."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(36672);const i={},a=r.createContext(i);function c(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);