"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[9685],{13018:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"ruby/openssl/expert/hardware_engine_pkcs11","title":"hardware_engine_pkcs11","description":"\u2699\ufe0f Leverage a PKCS#11 Engine for Hardware-Backed Keys","source":"@site/docs/ruby/openssl/expert/hardware_engine_pkcs11.md","sourceDirName":"ruby/openssl/expert","slug":"/ruby/openssl/expert/hardware_engine_pkcs11","permalink":"/keep-being-human-dev/docs/ruby/openssl/expert/hardware_engine_pkcs11","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/openssl/expert/hardware_engine_pkcs11.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"generate_rsa_key_pair","permalink":"/keep-being-human-dev/docs/ruby/openssl/beginner/generate_rsa_key_pair"},"next":{"title":"mutual_tls_with_sslcontext","permalink":"/keep-being-human-dev/docs/ruby/openssl/expert/mutual_tls_with_sslcontext"}}');var s=r(23420),t=r(65404);const i={},o=void 0,p={},c=[{value:"\u2699\ufe0f Leverage a PKCS#11 Engine for Hardware-Backed Keys",id:"\ufe0f-leverage-a-pkcs11-engine-for-hardware-backed-keys",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"\ufe0f-leverage-a-pkcs11-engine-for-hardware-backed-keys",children:"\u2699\ufe0f Leverage a PKCS#11 Engine for Hardware-Backed Keys"}),"\n",(0,s.jsx)(n.p,{children:"Offloading cryptographic operations to an HSM or smartcard can drastically improve security by keeping private keys off your server. Ruby\u2019s OpenSSL supports loading custom engines via PKCS#11 to perform signing and decryption operations."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"require 'openssl'\n\n# Load the PKCS#11 engine\nengine = OpenSSL::Engine.by_id('pkcs11')\nengine.ctrl_cmd_string('MODULE_PATH', '/usr/lib/your-pkcs11.so')\nengine.init\n\n# Use the engine to load a private key by label\npriv_key = OpenSSL::PKey::EC.new(engine.load_private_key('label=ServerKey;pin-value=1234'))\n\n# Sign data using the HSM-backed key\ndata = 'critical payload'\nsig = priv_key.dsa_sign_asn1(data)\nputs \"Signature (Base64): #{[sig].pack('m0')}\"\n\n# Clean up\nengine.finish\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var a=r(36672);const s={},t=a.createContext(s);function i(e){const n=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);