"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[82334],{65404:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>h});var s=n(36672);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},69271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>h,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"ruby/hashes/expert/pattern_matching_nested_hashes","title":"pattern_matching_nested_hashes","description":"\ud83d\udd0d Pattern Matching for Nested Hashes","source":"@site/docs/ruby/hashes/expert/pattern_matching_nested_hashes.md","sourceDirName":"ruby/hashes/expert","slug":"/ruby/hashes/expert/pattern_matching_nested_hashes","permalink":"/keep-being-human-dev/docs/ruby/hashes/expert/pattern_matching_nested_hashes","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/hashes/expert/pattern_matching_nested_hashes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lazy_enumeration_hash_processing","permalink":"/keep-being-human-dev/docs/ruby/hashes/expert/lazy_enumeration_hash_processing"},"next":{"title":"refinements_safe_hash_extensions","permalink":"/keep-being-human-dev/docs/ruby/hashes/expert/refinements_safe_hash_extensions"}}');var a=n(23420),r=n(65404);const i={},h=void 0,o={},c=[{value:"\ud83d\udd0d Pattern Matching for Nested Hashes",id:"-pattern-matching-for-nested-hashes",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"-pattern-matching-for-nested-hashes",children:"\ud83d\udd0d Pattern Matching for Nested Hashes"}),"\n",(0,a.jsxs)(t.p,{children:["Ruby 3 introduced powerful pattern matching that lets you destructure complex hashes directly in a ",(0,a.jsx)(t.code,{children:"case"})," statement or right\u2010hand side of an assignment. This approach makes it easy to extract deeply nested values with guards and defaults."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:'payload = { user: { id: 42, profile: { name: "Alice" } } }\n\n# Using case/in pattern matching\ncase payload\nin { user: { id:, profile: { name: } } }\n  puts "User ##{id} is named #{name}"\nelse\n  puts "No match"\nend\n\n# Using right\u2010hand side pattern matching with pin operator\n{ user: { profile: { name: } } } = payload\nputs name  #=> "Alice"\n'})}),"\n",(0,a.jsxs)(t.p,{children:["You can combine array patterns, pin variables, and guards (",(0,a.jsx)(t.code,{children:"in { key: value if value > 10 }"}),") for sophisticated data extraction without manual conditionals."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);