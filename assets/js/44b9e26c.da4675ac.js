"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[86732],{19792:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"ruby/directory_management/beginner/recursive_directory_creation","title":"recursive_directory_creation","description":"\ud83c\udfd7\ufe0f Creating Directories Recursively with FileUtils","source":"@site/docs/ruby/directory_management/beginner/recursive_directory_creation.md","sourceDirName":"ruby/directory_management/beginner","slug":"/ruby/directory_management/beginner/recursive_directory_creation","permalink":"/keep-being-human-dev/docs/ruby/directory_management/beginner/recursive_directory_creation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/directory_management/beginner/recursive_directory_creation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dir_list_and_filter","permalink":"/keep-being-human-dev/docs/ruby/directory_management/beginner/dir_list_and_filter"},"next":{"title":"cross_platform_realtime_dir_watcher","permalink":"/keep-being-human-dev/docs/ruby/directory_management/expert/cross_platform_realtime_dir_watcher"}}');var n=t(23420),s=t(65404);const a={},c=void 0,o={},d=[{value:"\ud83c\udfd7\ufe0f Creating Directories Recursively with FileUtils",id:"\ufe0f-creating-directories-recursively-with-fileutils",level:2}];function l(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h2,{id:"\ufe0f-creating-directories-recursively-with-fileutils",children:"\ud83c\udfd7\ufe0f Creating Directories Recursively with FileUtils"}),"\n",(0,n.jsxs)(r.p,{children:["When you need to build nested folder structures, ",(0,n.jsx)(r.code,{children:"FileUtils.mkdir_p"})," is your go\u2011to. It creates all missing directories along the given path in one call and does nothing if they already exist\u2014no need to check manually."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ruby",children:'require \'fileutils\'\n\n# Create a deep nested path in one step\nFileUtils.mkdir_p("./tmp/logs/2024/january")\nputs "Directory structure created!"\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ruby",children:'# You can also set permissions when creating directories\nFileUtils.mkdir_p("./tmp/data", mode: 0o755)\nputs "Created \'./tmp/data\' with permissions 755"\n'})})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},65404:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var i=t(36672);const n={},s=i.createContext(n);function a(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);