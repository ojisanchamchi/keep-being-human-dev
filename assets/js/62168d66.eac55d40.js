"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13246],{65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(36672);const a={},s=t.createContext(a);function i(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(s.Provider,{value:n},e.children)}},90634:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"sql/general/expert/materialized_views_refresh","title":"materialized_views_refresh","description":"\ud83d\ude80 Incremental Materialized View Refresh","source":"@site/docs/sql/general/expert/materialized_views_refresh.md","sourceDirName":"sql/general/expert","slug":"/sql/general/expert/materialized_views_refresh","permalink":"/keep-being-human-dev/docs/sql/general/expert/materialized_views_refresh","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sql/general/expert/materialized_views_refresh.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"lateral_joins","permalink":"/keep-being-human-dev/docs/sql/general/expert/lateral_joins"},"next":{"title":"partition_pruning","permalink":"/keep-being-human-dev/docs/sql/general/expert/partition_pruning"}}');var a=r(23420),s=r(65404);const i={},l=void 0,o={},c=[{value:"\ud83d\ude80 Incremental Materialized View Refresh",id:"-incremental-materialized-view-refresh",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"-incremental-materialized-view-refresh",children:"\ud83d\ude80 Incremental Materialized View Refresh"}),"\n",(0,a.jsxs)(n.p,{children:["Create materialized views for expensive aggregations and use ",(0,a.jsx)(n.code,{children:"CONCURRENTLY"})," refresh for minimal locking impact."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE MATERIALIZED VIEW monthly_sales AS\nSELECT date_trunc('month', sale_date) AS month,\n       SUM(amount) AS total\nFROM sales\nGROUP BY 1;\n\n-- Initial populate\nREFRESH MATERIALIZED VIEW monthly_sales;\n\n-- Concurrent refresh\nREFRESH MATERIALIZED VIEW CONCURRENTLY monthly_sales;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For true incremental refresh, implement triggers on base tables writing deltas to a staging table and use ",(0,a.jsx)(n.code,{children:"WITH NO DATA"})," plus selective ",(0,a.jsx)(n.code,{children:"INSERT"}),"/",(0,a.jsx)(n.code,{children:"UPDATE"})," on the matview."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);