"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[29350],{40447:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/authentication_and_authorization/middle/role_based_policies","title":"role_based_policies","description":"\ud83d\udd11 Implement Role-Based Access in Policies","source":"@site/docs/rails/authentication_and_authorization/middle/role_based_policies.md","sourceDirName":"rails/authentication_and_authorization/middle","slug":"/rails/authentication_and_authorization/middle/role_based_policies","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/middle/role_based_policies","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/authentication_and_authorization/middle/role_based_policies.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"policy_scope_index","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/middle/policy_scope_index"},"next":{"title":"token_authentication","permalink":"/keep-being-human-dev/docs/rails/authentication_and_authorization/middle/token_authentication"}}');var o=i(23420),a=i(65404);const s={},c=void 0,r={},d=[{value:"\ud83d\udd11 Implement Role-Based Access in Policies",id:"-implement-role-based-access-in-policies",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"-implement-role-based-access-in-policies",children:"\ud83d\udd11 Implement Role-Based Access in Policies"}),"\n",(0,o.jsxs)(n.p,{children:["Use Pundit policies to enforce role checks cleanly. Define helper methods like ",(0,o.jsx)(n.code,{children:"admin?"})," or ",(0,o.jsx)(n.code,{children:"editor?"})," and reference them in each action method to keep your controllers thin and policies expressive."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ruby",children:"class UserPolicy < ApplicationPolicy\n  def show?\n    user.admin? || record.id == user.id\n  end\n\n  def update?\n    user.admin? || (user.editor? && record.section == user.section)\n  end\n\n  def destroy?\n    user.admin?\n  end\nend\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},65404:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(36672);const o={},a=t.createContext(o);function s(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);