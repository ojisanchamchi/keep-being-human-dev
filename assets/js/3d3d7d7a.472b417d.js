"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[74914],{65404:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>t});var s=o(36672);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},76002:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/geocoder/advanced/postgis_high_performance_queries","title":"postgis_high_performance_queries","description":"\ud83d\ude80 Leveraging PostGIS for High-Performance Geospatial Queries","source":"@site/docs/gems/geocoder/advanced/postgis_high_performance_queries.md","sourceDirName":"gems/geocoder/advanced","slug":"/gems/geocoder/advanced/postgis_high_performance_queries","permalink":"/keep-being-human-dev/docs/gems/geocoder/advanced/postgis_high_performance_queries","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/geocoder/advanced/postgis_high_performance_queries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"polymorphic_geocoding_multiple_models","permalink":"/keep-being-human-dev/docs/gems/geocoder/advanced/polymorphic_geocoding_multiple_models"},"next":{"title":"geocoder_install","permalink":"/keep-being-human-dev/docs/gems/geocoder/beginner/geocoder_install"}}');var i=o(23420),r=o(65404);const a={},t=void 0,c={},d=[{value:"\ud83d\ude80 Leveraging PostGIS for High-Performance Geospatial Queries",id:"-leveraging-postgis-for-high-performance-geospatial-queries",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-leveraging-postgis-for-high-performance-geospatial-queries",children:"\ud83d\ude80 Leveraging PostGIS for High-Performance Geospatial Queries"}),"\n",(0,i.jsx)(n.p,{children:"By using PostGIS and its spatial functions directly in your Rails app, you can perform million\u2011row radius and distance calculations in milliseconds. Begin by creating a geographic point column and adding a GiST index:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class AddCoordinatesToLocations < ActiveRecord::Migration[6.1]\n  def change\n    enable_extension 'postgis'\n\n    create_table :locations do |t|\n      t.st_point :coordinates, geographic: true\n      t.string   :name\n      t.timestamps\n    end\n\n    add_index :locations, :coordinates, using: :gist\n  end\nend\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Next, define a scope that uses PostGIS\u2019s ",(0,i.jsx)(n.code,{children:"ST_DistanceSphere"})," for precise measurement:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class Location < ApplicationRecord\n  # Returns locations within a given radius (in meters) from a point\n  scope :within_radius, ->(lat, lng, radius_in_meters) do\n    select(\"*, ST_DistanceSphere(coordinates, 'SRID=4326;POINT(%f %f)') AS distance\" % [lng, lat])\n      .where(\"ST_DWithin(coordinates, 'SRID=4326;POINT(%f %f)'::geography, ?)\", lng, lat, radius_in_meters)\n      .order('distance')\n  end\nend\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now you can query:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'nearby = Location.within_radius(40.7128, -74.0060, 5000)\nnearby.each do |loc|\n  puts "#{loc.name} is #{loc.distance.round} meters away"\nend\n'})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);