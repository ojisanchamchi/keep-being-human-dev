"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[78650],{9081:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rails/forms/advanced/form_object_with_reform","title":"form_object_with_reform","description":"\ud83d\udcdd Form Object Pattern with Reform","source":"@site/docs/rails/forms/advanced/form_object_with_reform.md","sourceDirName":"rails/forms/advanced","slug":"/rails/forms/advanced/form_object_with_reform","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/form_object_with_reform","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/rails/forms/advanced/form_object_with_reform.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_nested_fields_with_cocoon","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/dynamic_nested_fields_with_cocoon"},"next":{"title":"multi_step_form_wizard","permalink":"/keep-being-human-dev/docs/rails/forms/advanced/multi_step_form_wizard"}}');var o=n(23420),a=n(65404);const i={},s=void 0,c={},d=[{value:"\ud83d\udcdd Form Object Pattern with Reform",id:"-form-object-pattern-with-reform",level:2}];function m(e){const r={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.h2,{id:"-form-object-pattern-with-reform",children:"\ud83d\udcdd Form Object Pattern with Reform"}),"\n",(0,o.jsx)(r.p,{children:"Use the Reform gem to decouple form logic from ActiveRecord, centralizing validation and coercion. Define a Reform form that wraps one or more models, enabling complex form composition."}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ruby",children:"# app/forms/event_form.rb\nclass EventForm < Reform::Form\n  include Reform::Form::ActiveRecord\n\n  property :title\n  property :start_date, type: Types::Form::DateTime\n  property :location\n\n  validation do\n    required(:title).filled(:str?)\n    required(:start_date).filled\n    required(:location).filled\n  end\nend\n"})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-ruby",children:"# app/controllers/events_controller.rb\ndef new\n  @form = EventForm.new(Event.new)\nend\n\ndef create\n  @form = EventForm.new(Event.new)\n  if @form.validate(params[:event])\n    @form.save\n    redirect_to @form.model\n  else\n    render :new\n  end\nend\n"})})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},65404:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>s});var t=n(36672);const o={},a=t.createContext(o);function i(e){const r=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);