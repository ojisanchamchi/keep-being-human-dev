"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[13259],{33449:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"gems/bcrypt/beginner/bcrypt_authentication","title":"bcrypt_authentication","description":"\ud83d\udd0d Verify passwords and handle authentication","source":"@site/docs/gems/bcrypt/beginner/bcrypt_authentication.md","sourceDirName":"gems/bcrypt/beginner","slug":"/gems/bcrypt/beginner/bcrypt_authentication","permalink":"/keep-being-human-dev/docs/gems/bcrypt/beginner/bcrypt_authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/bcrypt/beginner/bcrypt_authentication.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"dynamic_bcrypt_cost","permalink":"/keep-being-human-dev/docs/gems/bcrypt/advanced/dynamic_bcrypt_cost"},"next":{"title":"bcrypt_installation","permalink":"/keep-being-human-dev/docs/gems/bcrypt/beginner/bcrypt_installation"}}');var r=t(23420),a=t(65404);const i={},c=void 0,o={},d=[{value:"\ud83d\udd0d Verify passwords and handle authentication",id:"-verify-passwords-and-handle-authentication",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-verify-passwords-and-handle-authentication",children:"\ud83d\udd0d Verify passwords and handle authentication"}),"\n",(0,r.jsxs)(n.p,{children:["After setting up ",(0,r.jsx)(n.code,{children:"has_secure_password"}),", you can authenticate users by calling the ",(0,r.jsx)(n.code,{children:"authenticate"})," method on the model. This returns the user if the password matches, or ",(0,r.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# app/controllers/sessions_controller.rb\nclass SessionsController < ApplicationController\n  def create\n    user = User.find_by(email: params[:email])\n    if user&.authenticate(params[:password])\n      session[:user_id] = user.id\n      redirect_to dashboard_path, notice: 'Logged in successfully.'\n    else\n      flash.now[:alert] = 'Invalid email or password'\n      render :new\n    end\n  end\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Ensure you never store plain-text passwords and always use ",(0,r.jsx)(n.code,{children:"authenticate"})," to compare safely."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(36672);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);