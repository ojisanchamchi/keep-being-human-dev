"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[72552],{28852:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ruby/classes_and_modules/beginner/method_overriding","title":"method_overriding","description":"\ud83d\udd04 Override Methods in Subclasses","source":"@site/docs/ruby/classes_and_modules/beginner/method_overriding.md","sourceDirName":"ruby/classes_and_modules/beginner","slug":"/ruby/classes_and_modules/beginner/method_overriding","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/method_overriding","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/classes_and_modules/beginner/method_overriding.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"instantiate_objects","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/instantiate_objects"},"next":{"title":"module_namespacing","permalink":"/keep-being-human-dev/docs/ruby/classes_and_modules/beginner/module_namespacing"}}');var i=s(23420),o=s(65404);const r={},d=void 0,a={},c=[{value:"\ud83d\udd04 Override Methods in Subclasses",id:"-override-methods-in-subclasses",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"-override-methods-in-subclasses",children:"\ud83d\udd04 Override Methods in Subclasses"}),"\n",(0,i.jsxs)(n.p,{children:["Override superclass methods by defining a method with the same name in the subclass. You can also call ",(0,i.jsx)(n.code,{children:"super"})," inside the overriding method to invoke the parent implementation. This allows extension or modification of inherited behavior."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"class Animal\n  def move\n    'I move in some way'\n  end\nend\n\nclass Bird < Animal\n  def move\n    super + ' by flying'\n  end\nend\n\nputs Bird.new.move  # => 'I move in some way by flying'\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},65404:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(36672);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);