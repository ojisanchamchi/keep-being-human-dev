"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[61933],{32621:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>m,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"gems/simple_form/expert/custom_formbuilder_macros","title":"custom_formbuilder_macros","description":"\ud83e\uddf0 Extending SimpleForm::FormBuilder with Custom Macros","source":"@site/docs/gems/simple_form/expert/custom_formbuilder_macros.md","sourceDirName":"gems/simple_form/expert","slug":"/gems/simple_form/expert/custom_formbuilder_macros","permalink":"/keep-being-human-dev/docs/gems/simple_form/expert/custom_formbuilder_macros","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/gems/simple_form/expert/custom_formbuilder_macros.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"simple_form_installation","permalink":"/keep-being-human-dev/docs/gems/simple_form/beginner/simple_form_installation"},"next":{"title":"custom_js_widget_wrapper","permalink":"/keep-being-human-dev/docs/gems/simple_form/expert/custom_js_widget_wrapper"}}');var t=r(23420),s=r(65404);const i={},m=void 0,a={},c=[{value:"\ud83e\uddf0 Extending SimpleForm::FormBuilder with Custom Macros",id:"-extending-simpleformformbuilder-with-custom-macros",level:2}];function l(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-extending-simpleformformbuilder-with-custom-macros",children:"\ud83e\uddf0 Extending SimpleForm::FormBuilder with Custom Macros"}),"\n",(0,t.jsxs)(n.p,{children:["For ultra\u2011DRY forms, extend ",(0,t.jsx)(n.code,{children:"SimpleForm::FormBuilder"})," to add your own input methods (macros) that bundle common patterns. This is ideal if you repeatedly use the same combination of input, hints, icons, or error behaviors."]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create an initializer (e.g., ",(0,t.jsx)(n.code,{children:"config/initializers/simple_form_macros.rb"}),"):"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# config/initializers/simple_form_macros.rb\nmodule SimpleForm\n  class FormBuilder\n    # Macro for an input with a prepended icon and auto-tooltip\n    def icon_input(attribute, icon_name:, **options)\n      merged = merge_wrapper_options(\n        input_html_options, options[:wrapper_html] || {}\n      )\n\n      @template.content_tag(:div, class: 'input-group') do\n        @template.content_tag(:div, class: 'input-group-prepend') do\n          @template.content_tag(:span, '', class: \"input-group-text fa fa-#{icon_name}\")\n        end +\n        input(attribute, merged)\n      end\n    end\n  end\nend\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Use it in your forms:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erb",children:"<%= simple_form_for @user do |f| %>\n  <%= f.icon_input :email, icon_name: 'envelope', wrapper: :vertical_form %>\n  <%= f.button :submit, class: 'btn btn-success' %>\n<% end %>\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Because it's a true FormBuilder method, you get full access to SimpleForm options (",(0,t.jsx)(n.code,{children:"label"}),", ",(0,t.jsx)(n.code,{children:"hint"}),", ",(0,t.jsx)(n.code,{children:"error"}),", ",(0,t.jsx)(n.code,{children:"wrapper"}),") and can evolve the macro as your design system grows."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>m});var o=r(36672);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function m(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);