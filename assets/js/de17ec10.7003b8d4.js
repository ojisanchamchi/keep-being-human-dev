"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[27497],{41762:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"ruby/benchmarking/beginner/benchmark_measure","title":"benchmark_measure","description":"\ud83d\udd52 Using Benchmark.measure for Quick Timing","source":"@site/docs/ruby/benchmarking/beginner/benchmark_measure.md","sourceDirName":"ruby/benchmarking/beginner","slug":"/ruby/benchmarking/beginner/benchmark_measure","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/beginner/benchmark_measure","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ruby/benchmarking/beginner/benchmark_measure.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"benchmark_irb_console","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/beginner/benchmark_irb_console"},"next":{"title":"benchmark_realtime","permalink":"/keep-being-human-dev/docs/ruby/benchmarking/beginner/benchmark_realtime"}}');var t=r(23420),i=r(65404);const c={},s=void 0,m={},o=[{value:"\ud83d\udd52 Using Benchmark.measure for Quick Timing",id:"-using-benchmarkmeasure-for-quick-timing",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"-using-benchmarkmeasure-for-quick-timing",children:"\ud83d\udd52 Using Benchmark.measure for Quick Timing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Benchmark.measure"})," is the simplest way to time a block of code. It returns a ",(0,t.jsx)(n.code,{children:"Benchmark::Tms"})," object that reports real, user, and system time. Use it when you want a quick glance at how long a snippet takes to run."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"require 'benchmark'\n\ntime = Benchmark.measure do\n  # your code here\n  100_000.times { |i| i * 2 }\nend\n\nputs time  # =>   0.010000   0.000000   0.010000 (  0.009876)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},65404:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var a=r(36672);const t={},i=a.createContext(t);function c(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);