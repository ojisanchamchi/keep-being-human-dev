"use strict";(self.webpackChunkkeep_being_human_dev=self.webpackChunkkeep_being_human_dev||[]).push([[41304],{63717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"javascript/stimulus/middle/debugging_with_inspector","title":"debugging_with_inspector","description":"\ud83d\udc1e Debugging with the Stimulus Inspector","source":"@site/docs/javascript/stimulus/middle/debugging_with_inspector.md","sourceDirName":"javascript/stimulus/middle","slug":"/javascript/stimulus/middle/debugging_with_inspector","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/debugging_with_inspector","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/javascript/stimulus/middle/debugging_with_inspector.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"custom_actions_with_modifiers","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/custom_actions_with_modifiers"},"next":{"title":"dynamic_controller_loading","permalink":"/keep-being-human-dev/docs/javascript/stimulus/middle/dynamic_controller_loading"}}');var s=n(23420),o=n(65404);const r={},u=void 0,c={},a=[{value:"\ud83d\udc1e Debugging with the Stimulus Inspector",id:"-debugging-with-the-stimulus-inspector",level:2}];function d(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"-debugging-with-the-stimulus-inspector",children:"\ud83d\udc1e Debugging with the Stimulus Inspector"}),"\n",(0,s.jsx)(t.p,{children:"Use the Stimulus Chrome/Firefox extension to inspect controllers, actions, and state. Tweak your code based on real-time feedback from the devtools panel."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:'import { Controller } from "@hotwired/stimulus"\nimport { debug } from "@hotwired/stimulus"\n\ndebug(true) // Enable verbose logging in the console\n\nexport default class extends Controller {\n  connect() {\n    console.log("Debugging enabled for this controller")\n  }\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65404:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>u});var i=n(36672);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);